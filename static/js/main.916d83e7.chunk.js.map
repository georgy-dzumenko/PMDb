{"version":3,"sources":["components/Menu.jsx","components/api.js","components/MovieCard.jsx","components/PersonCard.jsx","components/MoviesSlider.jsx","pages/MoviePage.jsx","pages/Info.jsx","components/Poster.jsx","pages/Home.jsx","pages/CollectionPage.jsx","pages/PersonPage.jsx","components/SearchPageCrewFilter.jsx","components/SearchPageCheckbox.jsx","components/FilterVisibilityToggler.jsx","pages/SearchPage.jsx","redux/types.jsx","pages/LoginWindow.jsx","redux/actions.jsx","components/NavigationDropdown.jsx","components/NavigationSearch.jsx","components/Navigation.jsx","App.jsx","reportWebVitals.js","redux/sessionReducer.jsx","redux/rootReducer.jsx","index.js"],"names":["classNames","require","Menu","location","useLocation","id","className","hash","smooth","to","icon","faChevronLeft","href","BASE_URL","api_key","getMoviesByYear","year","a","type","fetch","then","response","json","data","results","map","el","media_type","result","tvResult","title","name","getAccInfo","sid","getPerson","getGenres","genres","getMovieImg","img","w500","getPersonImg","MovieCard","last","movie","history","useHistory","onClick","console","log","push","window","reload","src","poster_path","alt","backdrop_path","genre_ids","genreId","find","PersonCard","person","profile_path","job","character","MoviesSlider","moviesList","peopleList","slider","useRef","useState","setGenres","useEffect","current","scrollBy","left","clientWidth","behavior","ref","index","faChevronRight","MoviePage","match","useRouteMatch","cast","setCast","trailer","setTrailer","crew","setCrew","setMovie","similar","setSimilar","reviews","setReviews","movieType","params","movieId","key","getCrew","reverse","getCredits","getMoviesById","getSimilar","mediaType","getReviews","scrollTo","vote_average","overview","belongs_to_collection","frameBorder","allow","allowFullScreen","review","author_details","avatar_path","content","Date","created_at","toLocaleString","month","Info","SwiperCore","use","Autoplay","Pagination","Navigation","EffectCoverflow","Parallax","Poster","selectedMovieId","selectMovieId","Image","nextMovieWithDebounce","useCallback","debounce","length","cancel","modules","A11y","effect","spaceBetween","slidesPerView","navigation","pagination","clickable","loop","autoplay","delay","disableOnInteraction","onSwiper","swiper","connect","state","session_id","session","moviesOnPoster","setMoviesOnPoster","newTv","setNewTv","accInfo","setAccInfo","newMovies","setNewMovies","res","username","CollectionPage","collection","setCollection","collectionId","parts","part","PersonPage","credits","setCredits","setPerson","personId","known_for_department","birthday","deathday","biography","Object","entries","reduce","prev","cur","filtered","full","filter","e","sort","b","SearchPageCrewFilter","queryName","searchParams","URLSearchParams","search","actors","setActors","selectedActors","setSelectedActors","onSearch","query","slice","get","split","some","loadPeopleArr","idArr","forEach","addSelectedPerson","set","toString","deleteSelectedPerson","onChange","event","target","value","actor","FilterVisibilityToggler","isOpened","open","SearchPage","SET_SESSION_ID","setSessionId","localStorage","setItem","payload","token","setToken","userData","setUserData","action","onSubmit","request_token","password","headers","method","body","JSON","stringify","createSessionWithLogin","elements","createSession","htmlFor","NavigationDropdown","text","isActive","setActive","onMouseLeave","NavigationSearch","setResluts","setText","input","getMoviesByTitle","onBlur","focus","faSearch","scroll","scrollIntoView","faBars","avatar","tmdb","App","path","exact","mediaId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","getItem","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"6SAMMA,EAAaC,EAAQ,IAEdC,EAAO,WAClB,IAAMC,EAAWC,cAEjB,OACE,sBAAKC,GAAG,OAAOC,UAAWN,EAAW,OAAQ,CAAC,eAAkC,UAAlBG,EAASI,OAAvE,UACE,qBAAKD,UAAU,aAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,IAAD,CACEE,QAAM,EAACC,GAAG,IACVH,UAAU,qBAFZ,SAIE,cAAC,IAAD,CAAiBI,KAAMC,YAI7B,sBAAKL,UAAU,YAAf,UACE,oBAAIA,UAAU,cAAd,kBAGA,qBAAIA,UAAU,aAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,cAAC,IAAD,CAAUA,UAAU,aAAaG,GAAG,IAApC,oBAIF,oBAAIH,UAAU,kBAAd,SACE,cAAC,IAAD,CAAUA,UAAU,aAAaG,GAAG,QAApC,oBAIF,oBAAIH,UAAU,kBAAd,SACE,mBAAGA,UAAU,aAAaM,KAAK,QAA/B,iC,uDCvCNC,EAAW,gCACXC,EAAU,mCAEHC,EAAe,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,yDACf,WAD4BC,EAAb,+BAAoB,SAApB,yCAEhBC,MAAM,GAAD,OAAIN,EAAJ,+BAAmCG,EAAnC,oBAAmDF,IAC1DM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,QAAQC,KAAI,SAACC,GAAD,mBAAC,eAAYA,GAAb,IAAiBC,WAAY,gBAC3DP,MAAK,SAACQ,GAAD,OAAYb,EAAgB,OAAQ,MAAMK,MAAK,SAACS,GAAD,4BAAkBD,GAAlB,YAA6BC,EAASJ,KAAI,SAACC,GAAD,mBAAC,eAAYA,GAAb,IAAiBC,WAAY,KAAMG,MAAOJ,EAAGK,mBALzH,gCAQpBZ,MAAM,GAAD,OAAIN,EAAJ,oBAAwBK,EAAxB,iBAAqCF,EAArC,oBAAqDF,IAC5DM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,QAAQC,KAAI,SAACC,GAAD,mBAAC,eAAYA,GAAb,IAAiBC,WAAYT,EAAMY,MAAOJ,EAAGK,MAAQL,EAAGI,eAVhE,2CAAH,sDAkDfE,EAAa,SAACC,GAAD,OAASd,MAAM,GAAD,OAAIN,EAAJ,2BAA+BC,EAA/B,uBAAqDmB,IACxFb,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAkBlBY,EAAY,SAAC7B,GAAD,OAAQc,MAAM,GAAD,OAAIN,EAAJ,kBAAsBR,EAAtB,oBAAoCS,IACrEM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WA4BlBa,EAAY,kBAAMhB,MAAM,GAAD,OAAIN,EAAJ,oCAAwCC,IACvEM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIA,EAASe,WASlBC,EAAc,SAACC,GAAD,IAAMC,EAAN,mGAAqDA,EAAO,OAAS,WAArE,YAAmFD,IAEjGE,EAAe,SAACF,GAAD,IAAMC,EAAN,mGAAqDA,EAAO,OAAS,WAArE,YAAmFD,IC9GzGtC,EAAaC,EAAQ,IAEdwC,EAAY,SAAC,GAAoC,IAAD,MAAjCC,YAAiC,SAAnBC,EAAmB,EAAnBA,MAAOP,EAAY,EAAZA,OACzCQ,EAAUC,cAChB,OACE,sBAEEvC,UAAWN,EAAW,aAAc,CAAC,mBAAoB0C,IACzDI,QAAS,WACPC,QAAQC,IAAIJ,GACZA,EAAQK,KAAR,WAAiBN,EAAMhB,WAAvB,YAAqCgB,EAAMtC,KAC3C6C,OAAO/C,SAASgD,UANpB,UASE,qBAAKC,IAAKf,EAAW,OAACM,QAAD,IAACA,OAAD,EAACA,EAAOU,aAAa,GAAOC,IAAI,GAAGhD,UAAU,oBAClE,sBAAKA,UAAU,0BAAf,UACE,qBAAKA,UAAU,8BAA8B8C,IAAKf,EAAYM,EAAMY,eAAe,GAAOD,IAAI,KAC9F,sBAAKhD,UAAU,kCAAf,UACE,oBAAIA,UAAU,gCAAd,gBAA+CqC,QAA/C,IAA+CA,OAA/C,EAA+CA,EAAOb,QACtD,oBAAIxB,UAAU,sCAAd,mBACGqC,EAAMa,iBADT,aACG,EAAiB/B,KAAI,SAACgC,GAAD,aACpB,oBAAInD,UAAU,gCAAd,mBACG8B,EAAOsB,MAAK,gBAAErD,EAAF,EAAEA,GAAF,OAAUoD,IAAYpD,YADrC,aACG,EAAuC0B,sBCtBlD/B,EAAaC,EAAQ,IAEd0D,EAAa,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAC1B,OACE,eAAC,IAAD,CACEnD,GAAE,kBAAamD,EAAOvD,IACtBC,UAAWN,EAAW,eAFxB,UAIE,qBAAKoD,IAAKf,EAAYuB,EAAOC,cAAc,GAAOP,IAAI,GAAGhD,UAAU,qBACnE,qBAAKA,UAAU,mBAAf,SACGsD,EAAOE,KAAOF,EAAOG,YAExB,qBAAKzD,UAAU,oBAAf,SACGsD,EAAO7B,WCVV/B,EAAaC,EAAQ,IAEd+D,EAAe,SAAC,GAA0C,IAAD,IAAxCC,kBAAwC,MAA3B,KAA2B,MAArBC,kBAAqB,MAAR,GAAQ,EAC9DC,EAASC,iBAAO,MACtB,EAA4BC,mBAAS,IAArC,mBAAOjC,EAAP,KAAekC,EAAf,KAMA,OAJAC,qBAAU,WACRpC,IAAYf,MAAK,SAACC,GAAD,OAAciD,EAAUjD,QACxC,IAGD,sBACEf,UAAU,gBADZ,UAIE,qBACEwC,QAAS,WACPqB,EAAOK,QAAQC,SAAS,CACtBC,MAAO,EAAIP,EAAOK,QAAQG,YAAc,GACxCC,SAAU,YAGdtE,UAAWN,EAAW,CAAC,+BAAgC,qCAAsC,CAAC,0BAA2BiE,GAAcC,KAPzI,SASE,cAAC,IAAD,CAAiBxD,KAAMC,QAEzB,qBACEkE,IAAKV,EACL7D,UAAU,sBAFZ,SAIE,sBAAKA,UAAU,yBAAf,UACG4D,EAAWzC,KAAI,SAACmC,GAAD,OACd,8BACE,cAAC,EAAD,CAAYA,OAAQA,SAGrBK,EAAF,OAAeA,QAAf,IAAeA,OAAf,EAAeA,EAAYxC,KAAI,SAACkB,EAAOmC,GAAR,OAC9B,8BACE,cAAC,EAAD,CAAWpC,KAAgB,IAAVoC,EAAanC,MAAOA,EAAOP,OAAQA,SAEnD,QAGT,qBACEU,QAAS,WACPqB,EAAOK,QAAQC,SAAS,CACtBC,KAAmC,GAA7BP,EAAOK,QAAQG,YACrBC,SAAU,YAGdtE,UAAU,mEAPZ,SASE,cAAC,IAAD,CAAiBI,KAAMqE,YC3ClBC,G,MAAY,WAAO,IAAD,EACvBC,EAAQC,YAAc,wBAC5B,EAAwBb,mBAAS,IAAjC,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAA8Bf,mBAAS,IAAvC,mBAAOgB,EAAP,KAAgBC,EAAhB,KACA,EAAwBjB,mBAAS,IAAjC,mBAAOkB,EAAP,KAAaC,EAAb,KACA,EAA0BnB,mBAAS,IAAnC,mBAAO1B,EAAP,KAAc8C,EAAd,KACA,EAA8BpB,mBAAS,IAAvC,mBAAOqB,EAAP,KAAgBC,EAAhB,KACA,EAA8BtB,mBAAS,IAAvC,mBAAOuB,EAAP,KAAgBC,EAAhB,KACM1F,EAAWC,cAiBjB,OAfA2C,QAAQC,IAAImC,GAEZZ,qBAAU,WJgCc,IAAClE,EAAIyF,GAAJzF,EI/BZ4E,EAAMc,OAAOC,QJ+BGF,EI/BMb,EAAMc,OAAOD,UJ+BL3E,MAAM,GAAD,OAAIN,GAAJ,OAAeiF,EAAf,YAA4BzF,EAA5B,2BAAiDS,IAC9FM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,YIjCsCJ,MAAK,SAACC,GAAc,IAAD,EAAEiE,EAAU,UAACjE,EAAS,UAAV,aAAC,EAAa4E,QJmCnF,SAAC5F,EAAIyF,GAAL,OAAmB3E,MAAM,GAAD,OAAIN,GAAJ,OAAeiF,EAAf,YAA4BzF,EAA5B,4BAAkDS,IAC5FM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIA,EAAKgE,QIpCnBW,CAAQjB,EAAMc,OAAOC,QAASf,EAAMc,OAAOD,WAAW1E,MAAK,SAACC,GAAemE,EAAQnE,EAAS8E,cJ0BtE,SAAC9F,EAAIyF,GAAL,OAAmB3E,MAAM,GAAD,OAAIN,GAAJ,OAAeiF,EAAf,YAA4BzF,EAA5B,4BAAkDS,IAC/FM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIA,EAAK4D,QI3BnBiB,CAAWnB,EAAMc,OAAOC,QAASf,EAAMc,OAAOD,WAAW1E,MAAK,SAACC,GAAe+D,EAAQ/D,EAAS8E,cJkEtE,SAAC9F,EAAIyF,GAAL,OAAmB3E,MAAM,GAAD,OAAIN,GAAJ,OAAeiF,EAAf,YAA4BzF,EAA5B,oBAA0CS,IAC1FM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,kCAASA,GAAT,IAAmBM,WAAYmE,EAAWhE,MAAOT,EAASS,OAAST,EAASU,UInE1FsE,CAAcpB,EAAMc,OAAOC,QAASf,EAAMc,OAAOD,WAAW1E,MAAK,SAACC,GAAeoE,EAASpE,MJyEpE,SAAChB,EAAIyF,GAAL,OAAmB3E,MAAM,GAAD,OAAIN,GAAJ,OAAeiF,EAAf,YAA4BzF,EAA5B,4BAAkDS,IAC/FM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,QAAQC,KAAI,SAACC,GAAD,mBAAC,eAAYA,GAAb,IAAiBC,WAAYmE,EAAWhE,MAAOJ,EAAGI,OAASJ,EAAGK,aI1E7FuE,CAAWrB,EAAMc,OAAOC,QAASf,EAAMc,OAAOD,WAAW1E,MAAK,SAACC,GAAesE,EAAWtE,MJoDnE,SAAChB,EAAIkG,GAAL,OAAmBpF,MAAM,GAAD,OAAIN,GAAJ,OAAe0F,EAAf,YAA4BlG,EAA5B,4BAAkDS,IAC/FM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,qBAAEI,WIrDRgF,CAAWvB,EAAMc,OAAOC,QAASf,EAAMc,OAAOD,WAAW1E,MAAK,SAACC,GAAewE,EAAWxE,QACxF,CAAClB,EAAU8E,EAAMc,OAAOC,QAASf,EAAMc,OAAOD,YAEjDvB,qBAAU,WACRrB,OAAOuD,SAAS,EAAG,KAClB,CAACxB,IAGF,qBAAK3E,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,0BAASA,UAAU,mCAAnB,UACE,qBAAKA,UAAU,qCAAf,SACE,qBAAK8C,IAAKf,EAAYM,EAAMU,aAAcC,IAAI,GAAGhD,UAAU,6BAE7D,sBAAKA,UAAU,wDAAf,UACE,qBAAKA,UAAU,iDAAf,gBACGqC,QADH,IACGA,OADH,EACGA,EAAOb,QAEV,sBAAKxB,UAAU,qCAAf,mBACQ,sBAAMA,UAAU,0BAAhB,gBAA2CqC,QAA3C,IAA2CA,OAA3C,EAA2CA,EAAO+D,kBAE1D,qBAAKpG,UAAU,wCAAf,SACGqC,EAAMgE,WAET,qBAAKrG,UAAU,0CAAf,mBACGqC,EAAMP,cADT,aACG,EAAcX,KAAI,gBAAEM,EAAF,EAAEA,KAAF,OACjB,qBAAKzB,UAAU,oBAAf,SACGyB,SAINY,EAAMiE,uBACL,sBAAKtG,UAAU,mBAAf,wBAEE,cAAC,IAAD,CAAMG,GAAE,uBAAkBkC,EAAMiE,sBAAsBvG,IAAtD,SACGsC,EAAMiE,sBAAsB7E,gBAMvC,yBAASzB,UAAU,gBAAnB,SACE,qBAAKA,UAAU,sBAAf,SACE,wBACEwB,MAAM,UACNxB,UAAU,oBACV8C,IAAG,wCAAmCiC,GACtCwB,YAAY,IACZC,MAAM,2FACNC,iBAAe,QAIrB,0BAASzG,UAAU,gBAAnB,UACE,qBAAKA,UAAU,cAAf,qBAIIsF,EAAQnE,KAAI,SAACuF,GAAD,OACR,sBAAK1G,UAAU,SAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBACE8C,IACEf,EAAY2E,EAAOC,eAAeC,aAAa,GAEjD5D,IAAI,GACJhD,UAAU,uBAEZ,qBAAKA,UAAU,0BAAf,SACG0G,EAAOC,eAAelF,UAG3B,qBAAKzB,UAAU,kBAAf,SACG0G,EAAOG,UAEV,qBAAK7G,UAAU,iBAAf,SACG,IAAI8G,KAAKJ,EAAOK,YAAYC,eAAe,UAAW,CAAEtG,KAAM,UAAWuG,MAAO,oBAM/F,0BAASjH,UAAU,gBAAnB,UACE,qBAAKA,UAAU,cAAf,kBAGA,cAAC,EAAD,CAAc4D,WAAYiB,IAC1B,qBAAK7E,UAAU,cAAf,kBAGA,cAAC,EAAD,CAAc4D,WAAYqB,OAE5B,0BAASjF,UAAU,gBAAnB,UACE,qBAAKA,UAAU,cAAf,qBAGA,cAAC,EAAD,CAAc2D,WAAYyB,gBCjIzB8B,EAAO,WAElB,OACE,qBAAKlH,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,cAAd,kBAGA,mBAAGM,KAAK,8BAAR,SACE,qBAAKN,UAAU,wB,iGCM3BmH,IAAWC,IAAI,CAACC,IAAUC,IAAYC,IAAYC,IAAiBC,MAE5D,IAAMC,EAAS,SAAC,GAAkB,IAAD,EAAhB/D,EAAgB,EAAhBA,WACtB,EAAyCI,mBAAS,GAAlD,mBAAO4D,EAAP,KAAwBC,EAAxB,KACqB,IAAIC,MAAM,KAAM,KACxB/E,IAAb,wDAA0Da,EAAWgE,UAArE,aAA0D,EAA6B1E,eAEvF,IAUM6E,EAAwBC,sBAAYC,KAVxB,WACZL,IAAoBhE,EAAWsE,OAAS,EAM5CL,EAAcD,EAAkB,GAL9BC,EAAc,KAQ4C,KAAQ,CAACD,IAQvE,OANA1D,qBAAU,WAGR,OAFA6D,IAEOA,EAAsBI,SAC5B,CAACP,EAAiBG,IAGnB,eAAC,IAAD,CACEK,QAAS,CAACZ,IAAYD,IAAYc,IAAMZ,IAAiBC,KACzDY,OAAO,YACPC,aAAc,EACdC,cAAe,EACfC,YAAU,EACVC,WAAY,CAAEC,WAAW,GACzBC,MAAM,EACNC,SAAU,CACRC,MAAO,IACPC,sBAAsB,GAExBC,SAAU,SAACC,GAAD,OAAYvG,QAAQC,IAAIsG,IAZpC,iBAcKrF,QAdL,IAcKA,OAdL,EAcKA,EAAYxC,KAAI,SAACkB,GAAD,OACf,cAAC,IAAD,UACE,qBAAKrC,UAAU,SAAf,SACE,eAAC,IAAD,CAAMG,GAAE,UAAKkC,EAAMhB,WAAX,YAAyBgB,EAAMtC,IAAvC,UACE,qBAAK+C,IAAKf,EAAYM,EAAMY,eAAgBjD,UAAU,cAAcgD,IAAI,KACxE,qBAAKhD,UAAU,gBAAf,SACGqC,EAAMb,kBAMjB,qBAAKxB,UAAU,SACf,qBAAKA,UAAU,aCXRiJ,eAAQ,SAACC,GAAD,MAAY,CAACC,WAAYD,EAAME,QAAQA,WAA/CH,EAtDF,SAAC,GAAkB,IAAjBE,EAAgB,EAAhBA,WACb,EAA4CpF,mBAAS,IAArD,mBAAOsF,EAAP,KAAuBC,EAAvB,KACA,EAA0BvF,mBAAS,IAAnC,mBAAOwF,EAAP,KAAcC,EAAd,KACA,EAA8BzF,mBAAS,IAAvC,mBAAO0F,EAAP,KAAgBC,EAAhB,KACA,EAAkC3F,mBAAS,IAA3C,mBAAO4F,EAAP,KAAkBC,EAAlB,KAiBA,OAfA3F,qBAAU,WACRxD,EAAgB,OAAQ,SACrBK,MAAK,SAACQ,GAAD,OAAYgI,EAAkBhI,MACtCb,EAAgB,OAAQ,SACrBK,MAAK,SAACQ,GAAD,OAAYsI,EAAatI,MACjCb,EAAgB,OAAQ,MACrBK,MAAK,SAACQ,GAAD,OAAYkI,EAASlI,QAG5B,IAEH2C,qBAAU,WACRvC,EAAWyH,GAAYrI,MAAK,SAAC+I,GAAD,OAASH,EAAWG,QAC/C,CAACV,IAGF,qBAAKnJ,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,cAAd,SACIyJ,EAAQK,SAAT,cAEUL,EAAQK,SAFlB,KACG,SAKN,yBAAS9J,UAAU,gBAAnB,SACE,+BACE,cAAC,EAAD,CAAQ2D,WAAY0F,QAIxB,0BAASrJ,UAAU,gBAAnB,UACE,qBAAKA,UAAU,cAAf,6BAGA,cAAC,EAAD,CAAc2D,WAAY4F,OAE5B,0BAASvJ,UAAU,gBAAnB,UACE,qBAAKA,UAAU,cAAf,2BAGA,cAAC,EAAD,CAAc2D,WAAYgG,eChDvBI,EAAiB,WAAO,IAAD,EAC5BpF,EAAQC,YAAc,8BAC5B,EAAoCb,mBAAS,IAA7C,mBAAOiG,EAAP,KAAmBC,EAAnB,KAMA,OAJAhG,qBAAU,WRoGiB,IAAClE,KQnGZ4E,EAAMc,OAAOyE,aRmGMrJ,MAAM,GAAD,OAAIN,EAAJ,sBAA0BR,EAA1B,oBAAwCS,IAC7EM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WQpGcF,MAAK,SAACC,GAAD,OAAckJ,EAAclJ,QACzE,CAAC4D,EAAMc,OAAOyE,eAGf,qBAAKlK,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,2CAAf,SACE,qBAAK8C,IAAKf,EAAYiI,EAAWjH,aAAa,GAAO/C,UAAU,+BAA+BgD,IAAI,OAEpG,sBAAKhD,UAAU,0CAAf,UACE,oBAAIA,UAAU,+BAAd,SAA8CgK,EAAWvI,OACzD,qBAAKzB,UAAU,mBAAf,SAAmCgK,EAAW3D,iBAPpD,OAUG2D,QAVH,IAUGA,GAVH,UAUGA,EAAYG,aAVf,aAUG,EAAmBhJ,KAAI,SAACiJ,GAAD,OACtB,eAAC,IAAD,CAAMjK,GAAE,kBAAaiK,EAAKrK,IAAMC,UAAU,+CAA1C,UACE,qBAAKA,UAAU,2CAAf,SACE,qBAAK8C,IAAKf,EAAYqI,EAAKrH,aAAa,GAAO/C,UAAU,+BAA+BgD,IAAI,OAE9F,qBAAKhD,UAAU,+BAAf,SAA+CoK,EAAK5I,sB,QC1BrD6I,EAAa,WAAO,IAAD,EACxB1F,EAAQC,YAAc,qBAC5B,EAA8Bb,mBAAS,IAAvC,mBAAOuG,EAAP,KAAgBC,EAAhB,KACA,EAA4BxG,mBAAS,IAArC,mBAAOT,EAAP,KAAekH,EAAf,KACM3K,EAAWC,cAOjB,OALAmE,qBAAU,WTyDqB,IAAClE,ESxD9B6B,EAAU+C,EAAMc,OAAOgF,UAAU3J,MAAK,SAACC,GAAD,OAAcyJ,EAAUzJ,OTwDhChB,ESvDZ4E,EAAMc,OAAOgF,STuDM5J,MAAM,GAAD,OAAIN,EAAJ,kBAAsBR,EAAtB,qCAAqDS,IAC9FM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIA,MSzD2BH,MAAK,SAACC,GAAD,OAAcwJ,EAAWxJ,QACtE,CAAClB,EAAU8E,EAAMc,OAAOgF,WAGzB,qBAAKzK,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,sCAAf,SACE,qBAAK8C,IAAKZ,EAAaoB,EAAOC,cAAevD,UAAU,0BAA0BgD,IAAI,OAEvF,sBAAKhD,UAAU,mBAAf,UACE,oBAAIA,UAAU,oBAAd,SACGsD,EAAO7B,OAEV,sBAAKzB,UAAU,sBAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,4CAGA,wBACA,8BACGsD,EAAOoH,0BAGZ,sBAAK1K,UAAU,qBAAf,UACE,uCAGA,wBACA,8BACGsD,EAAOqH,cAGXrH,EAAOsH,UACN,sBAAK5K,UAAU,qBAAf,UACE,uCAGA,wBACA,8BACGsD,EAAOsH,oBAMlB,sBAAK5K,UAAU,0CAAf,UACE,oBAAIA,UAAU,6BAAd,uBAGA,qBAAKA,UAAU,8BAAf,SACGsD,EAAOuH,eAGZ,sBAAK7K,UAAU,mBAAf,UACE,oBAAIA,UAAU,6BAAd,oBAGA,8BACE,cAAC,EAAD,CAAc2D,WAAY2G,EAAQzF,YAIpCiG,OAAOC,SACL,UAAAT,EAAQrF,YAAR,eAAc+F,QAAO,SAACC,EAAMC,GAAP,MAAgB,CACnCC,SAAS,2BACND,EAAI1H,IAAMyH,EAAKG,KAAKC,QAAO,SAACC,GAAD,OAAOA,EAAE9H,MAAQ0H,EAAI1H,QAC9CyH,EAAKE,UAEVC,KAAMH,EAAKG,KAAKC,QAAO,SAACC,GAAD,OAAOA,EAAE9H,MAAQ0H,EAAI1H,UAC1C,CAAC4H,KAAMd,EAAQrF,OAAOkG,WAAY,IACtCI,MAAK,SAAC5K,EAAG6K,GAAJ,OAAUA,EAAE,GAAGvD,OAAStH,EAAE,GAAGsH,UAAQ9G,KAAI,SAACkB,GAAD,OAC9C,sBAAKrC,UAAU,mBAAf,UACA,oBAAIA,UAAU,6BAAd,SACGqC,EAAM,KAET,8BACE,cAAC,EAAD,CAAcsB,WAAYtB,EAAM,qBCrFnCoJ,ICHM9L,EAAQ,IDGS,SAAC,GAAiB,IAAhB+L,EAAe,EAAfA,UAC9B7L,EAAWC,cACXwC,EAAUC,cACVoJ,EAAe,IAAIC,gBAAgB/L,EAASgM,QAClD,EAA4B9H,mBAAS,IAArC,mBAAO+H,EAAP,KAAeC,EAAf,KACA,EAA4ChI,mBAAS,IAArD,mBAAOiI,EAAP,KAAuBC,EAAvB,KAEMC,EAAWnE,sBAAYC,KAAS,SAACvG,GV6Ef,IAAC0K,KU5EZ1K,EV4EsBZ,MAAM,GAAD,OAAIN,EAAJ,iCAAqCC,EAArC,kBAAsD2L,IAC3FrL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,qBAAEI,YU9ESJ,MAAK,SAACG,GAAD,OAAU8K,GAAW9K,GAAQ,IAAImL,MAAM,EAAG,SAC/D,KAAM,IAETnI,qBAAU,WACRxB,QAAQC,IAAI,SACZqJ,EAAUD,EAAOT,QAAO,SAACjK,GAAD,OAASuK,EAAaU,IAAIX,GAAWY,MAAM,KAAKC,MAAK,SAACxM,GAAD,OAAQA,IAAOqB,EAAGrB,YAC9F,CAAC4L,EAAaU,IAAIX,KAErB,IAAMc,EAAa,uCAAG,8BAAA7L,EAAA,6DACdW,EAAS,GADK,UVsDKmL,GUpDN,UAAAd,EAAaU,IAAIX,UAAjB,eAA6BY,MAAM,OAAQ,GVqD5CG,EAAMtL,IAAN,uCAAU,WAAOpB,GAAP,iBAAAY,EAAA,sEACDE,MAAM,GAAD,OAAIN,EAAJ,kBAAsBR,EAAtB,oBAAoCS,IADxC,cAClBO,EADkB,OAElBO,EAASP,EAASC,OAFA,kBAGjBM,GAHiB,2CAAV,wDUrDgDoL,SAAQ,SAACtL,GAAD,OAAQA,EAAGN,MAAK,SAAC+I,GACpFA,EAAI9J,IACPuB,EAAOqB,KAAKkH,SAJI,uBAOdoC,EAAkB3K,GAPJ,OAQpBmB,QAAQC,IAAI,UARQ,iCVsDI,IAAC+J,IUtDL,OAAH,qDAWbE,EAAiB,uCAAG,WAAO5M,GAAP,SAAAY,EAAA,sEAClBiB,EAAU7B,GAAIe,MAAK,SAACC,GAAckL,EAAkB,GAAD,mBAAKD,GAAL,CAAqBjL,QADtD,OAExB4K,EAAaiB,IAAIlB,EAAW,CAACC,EAAaU,IAAIX,GAAY3L,IAC1DuC,EAAQK,KAAK,CAACkJ,OAAQF,EAAakB,aAHX,2CAAH,sDAMjBC,EAAoB,uCAAG,WAAO/M,GAAP,SAAAY,EAAA,sDAC3BsL,EAAkB,YAAID,GAAgBX,QAAO,SAACjK,GAAD,OAASrB,KAAQqB,EAAGrB,OACjE4L,EAAaiB,IAAIlB,EAAWC,EAAaU,IAAIX,GAAWY,MAAM,KAAKjB,QAAO,SAACjK,GAAD,OAASrB,KAAQqB,MAC3FkB,EAAQK,KAAK,CAACkJ,OAAQF,EAAakB,aAHR,2CAAH,sDAY1B,OANA5I,qBAAU,WACRuI,MACC,IAKD,sBAAKxM,UAAU,gBAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,uBACE+M,SAAU,SAACC,GACTd,EAASc,EAAMC,OAAOC,QAExBlN,UAAU,yBAEZ,qBAAKA,UAAU,+BAAf,SAEI8L,EAAO3K,KAAI,SAACgM,GAAD,OACT,sBAAKnN,UAAU,wBAAf,UACE,qBAAK8C,IAAKZ,EAAaiL,EAAM5J,cAAc,GAAOP,IAAI,GAAGhD,UAAU,8BACnE,qBACEwC,QAAS,kBAAMmK,EAAkBQ,EAAMpN,KACvCC,UAAU,2BAFZ,kCAaV,qBAAKA,UAAU,uCAAf,SACGgM,EAAe7K,KAAI,SAACgM,GAAD,OAClB,sBAAKnN,UAAU,gCAAf,UACE,qBAAK8C,IAAKZ,EAAaiL,EAAM5J,cAAeP,IAAI,GAAGhD,UAAU,sCAC7D,6BAAKmN,EAAM1L,OACX,qBACEe,QAAS,kBAAMsK,EAAqBK,EAAMpN,KAC1CC,UAAU,sDElFlBN,GAAaC,EAAQ,IAEdyN,GAA0B,SAAC,GAAqB,IAApB/B,EAAmB,EAAnBA,OAAQ7J,EAAW,EAAXA,MAC/C,EAAyBuC,oBAAS,GAAlC,mBAAOsJ,EAAP,KAAiBC,EAAjB,KAEA,OACE,sBACEtN,UACEN,GAAW,CACT,yCACA,CAAC,iDAAkD2N,KAJzD,UASE,qBACErN,UACEN,GAAW,CACT,8CACA,CAAC,sDAAuD2N,KAG5D7K,QAAS,kBAAM8K,GAAMD,IAPvB,SASG7L,IAEH,qBACExB,UAAWN,GAAW,CACpB,iDACA,CAAC,yDAA0D2N,KAH/D,SAMGhC,QC5BIkC,GAAa,WACxB,MAA4BxJ,mBAAS,IAArC,mBAAeC,GAAf,WAMA,OAJAC,qBAAU,WACRpC,IAAYf,MAAK,SAACC,GAAD,OAAciD,EAAUjD,QACxC,IAGD,qBAAKf,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,6CAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,GAAD,CACEwB,MAAM,gBACN6J,OAAQ,cAAC,GAAD,CAAsBK,UAAU,iBAW9C,uBAAO9K,KAAK,OAAOZ,UAAU,iDChC1BwN,GAAiB,iBCSxB9N,GAAaC,EAAQ,IAsEZsJ,gBAAQ,SAACC,GAAD,MAAY,CAACC,WAAYD,EAAME,QAAQA,WAAW,CAACqE,aC7E9C,SAACtE,GAE3B,OADAuE,aAAaC,QAAQ,UAAWxE,GACzB,CACLvI,KAAM4M,GACNI,QAASzE,KDyEEF,EApEK,SAAC,GAAgC,IAA/BE,EAA8B,EAA9BA,WAAYsE,EAAkB,EAAlBA,aAC1B5N,EAAWC,cACjB,EAA0BiE,mBAAS,IAAnC,mBAAO8J,EAAP,KAAcC,EAAd,KACA,EAAgC/J,mBAAS,IAAzC,mBAAOgK,EAAP,KAAiBC,EAAjB,KAEM1L,EAAUC,YAAW,IAW3B,OATAE,QAAQC,IAAI,MAAOyG,GACnB1G,QAAQC,IAAI,KAAMqL,GAElB9J,qBAAU,WACU,KAAfkF,GACDzH,EAAWyH,GAAYrI,MAAK,SAACC,GAAD,OAAciN,EAAYjN,QAEvD,CAACoI,IAGF,uBACEpJ,GAAG,QACHkO,OAAO,GACPjO,UAAWN,GAAW,QAAS,CAAC,gBAAmC,WAAlBG,EAASI,OAC1DiO,SAAU,SAAClB,GAES,KAAf7D,EAoBHsE,EAAa,IftCY5M,MAAM,GAAD,OAAIN,EAAJ,6CAAiDC,IAClFM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UekBPF,MAAK,SAAC+I,GAClBpH,QAAQC,IAAI,QAASmH,GACrBiE,EAASjE,EAAIsE,eflBa,SAACrE,EAAUsE,EAAUP,GAArB,OAA+BhN,MAAM,iFAAD,OACeL,GACjF,CACI6N,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,OAAQ,OACRC,KAAOC,KAAKC,UAAU,CAClB3E,WACAsE,WACAD,cAAeN,MAI1B/M,MAAK,SAAC+I,GAAD,OAASA,EAAI7I,UeKX0N,CACE1B,EAAMC,OAAO0B,SAAS7E,SAASoD,MAC/BF,EAAMC,OAAO0B,SAASP,SAASlB,MAC/BW,GAEC/M,MAAK,SAAC+I,IfRQ,SAACgE,GAAD,OAAWhN,MAAM,mEAAD,OAC0BL,GACnE,CACI6N,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,OAAQ,OACRC,KAAOC,KAAKC,UAAU,CAClBN,cAAeN,MAI1B/M,MAAK,SAAC+I,GAAD,OAASA,EAAI7I,WeJH4N,CAAc/E,EAAIsE,eACfrN,MAAK,SAACC,GAAD,OAAc0M,EAAa1M,EAASoI,eAC5C1G,QAAQC,IAAImH,UAnBxB,UA6BE,qBAAK7J,UAAU,eAAf,SACImJ,EAAwB,gBAAX,WAED,KAAfA,EAEG,qCACE,uBAAO0F,QAAQ,WAAW7O,UAAU,eAApC,uBACA,uBAAOY,KAAK,OAAOb,GAAG,WAAWC,UAAU,iBAC3C,uBAAO6O,QAAQ,WAAW7O,UAAU,eAApC,sBACA,uBAAOY,KAAK,WAAWb,GAAG,WAAWC,UAAU,iBAC/C,wBAAQwC,QAAS,kBAAMF,EAAQK,KAAK,CAAC1C,KAAK,OAAOW,KAAK,SAASZ,UAAU,uBAAzE,uBAGF,mCACE,wBAAQG,GAAG,IAAIS,KAAK,SAASZ,UAAU,wBAAvC,uBAGN,cAAC,IAAD,CAAUG,GAAG,IAAIH,UAAU,8BEvE3BN,I,MAAaC,EAAQ,KAEdmP,GAAqB,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAClC,EAA8BhL,oBAAS,GAAvC,mBAAOiL,EAAP,KAAiBC,EAAjB,KAEA,OACE,mCACE,sBACEjP,UAAWN,GACT,uBACA,CAAC,+BAAgCsP,IAEnCxM,QAAS,kBAAMyM,GAAWD,IAC1BE,aAAc,kBAAMD,GAAU,IANhC,UAQE,qBAAKjP,UAAU,wBAAf,SACG+O,IAEH,sBAAK/O,UAAWN,GAAW,qCAAsC,CAAC,8CAA+CsP,IAAjH,UACE,qBAAKhP,UAAU,8BAAf,SACE,qBAAKA,UAAU,wBAAf,4BAIF,qBAAKA,UAAU,8BAAf,SACE,qBAAKA,UAAU,wBAAf,qCCpBNN,GAAaC,EAAQ,IAEdwP,GAAmB,WAC9B,MAA8BpL,oBAAS,GAAvC,mBAAOiL,EAAP,KAAiBC,EAAjB,KACA,EAA8BlL,mBAAS,IAAvC,mBAAO7C,EAAP,KAAgBkO,EAAhB,KACA,EAAwBrL,mBAAS,IAAjC,mBAAOgL,EAAP,KAAaM,EAAb,KAEMC,EAAQxL,iBAAO,IAEfoI,EAAWnE,sBAAYC,KAAS,SAACxG,IlB4ET,SAACA,GAAD,OAAWX,MAAM,GAAD,OAAIN,EAAJ,8BAAkCiB,EAAlC,oBAAmDhB,IAC9FM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,YkB7EnBqO,CAAiB/N,GAAOV,MAAK,SAACG,GAAD,OAAUmO,GAAYnO,GAAQ,IAAImL,MAAM,EAAG,SACvE,KAAM,IAET,OACE,mCACE,sBACEpM,UAAU,qBADZ,UAGE,uBACEuE,IAAK+K,EACLpC,MAAO6B,EACPhC,SAAU,SAACC,GACTqC,EAAQrC,EAAMC,OAAOC,OACrBhB,EAASc,EAAMC,OAAOC,OACtBzK,QAAQC,IAAI,MAEd8M,OAAQ,kBAAMP,GAAU,IACxBjP,UACEN,GACE,2BACA,CAAC,mCAAoCsP,MAK3C,qBACExM,QAAS,YACS,IAAbwM,GACDC,GAAU,GACVK,EAAMpL,QAAQuL,SAEdR,GAAU,IAGdjP,UAAWN,GAAW,0BAA2B,CAAC,kCAAmCsP,IATvF,SAWE,cAAC,IAAD,CACE5O,KAAMsP,QAGV,oBAAI1P,UAAWN,GAAW,mCAAoC,CAAC,2CAA6CqP,GAAQC,IAApH,SAEI,qCAEI9N,EAAQC,KAAI,SAAAG,GAAM,OAChB,6BACE,eAAC,IAAD,CAAMnB,GAAE,WAAMmB,EAAOD,WAAb,YAA2BC,EAAOvB,IAAMC,UAAU,4BAA1D,UACE,qBAAK8C,IAAKf,EAAYT,EAAOyB,aAAa,GAAOC,IAAI,GAAGhD,UAAU,kCAClE,oBAAIA,UAAU,kCAAd,SACGsB,EAAOE,YAJLF,EAAOvB,OAWlBmB,EAAQ+G,OAAS,EACf,oBAAgBjI,UAAU,kCAA1B,4BAAS,OAIT,oBAAgBA,UAAU,gCAA1B,uBAAS,kBCRZiJ,gBAAQ,SAACC,GAAD,MAAY,CAACC,WAAYD,EAAME,QAAQA,WAA/CH,EA7DI,SAAC,GAAkB,IAAD,IAAhBE,EAAgB,EAAhBA,WACnB,EAA8BpF,mBAAS,IAAvC,mBAAO0F,EAAP,KAAgBC,EAAhB,KAQA,OANAzF,qBAAU,WACRvC,EAAWyH,GAAYrI,MAAK,SAAC+I,GAAD,OAASH,EAAWG,QAC/C,CAACV,IAEJ1G,QAAQC,IAAI,MAAO+G,GAGjB,qBAAKzJ,UAAU,aAAf,SACE,sBAAKA,UAAU,sBAAf,UAEE,cAAC,IAAD,CAEE2P,OAAQ,SAACvO,GAAD,OAAQA,EAAGwO,kBACnB5P,UAAU,mBACVG,GAAG,QAJL,SAME,cAAC,IAAD,CACEC,KAAMyP,QAKV,cAAC,IAAD,CAAM1P,GAAG,IAAIH,UAAU,mBAAvB,kBAGA,sBAAKA,UAAU,mBAAf,UACE,cAAC,GAAD,CAAoB+O,KAAK,mBACzB,cAAC,IAAD,CAAM5O,GAAG,QAAQH,UAAU,mBAA3B,SACE,qBAAKA,UAAU,wBAAf,oBAIF,cAAC,IAAD,CAAMG,GAAG,UAAUH,UAAU,mBAA7B,SACE,qBAAKA,UAAU,wBAAf,yBAKJ,sBAAKA,UAAU,+BAAf,UACE,cAAC,GAAD,IACA,cAAC,IAAD,CACEG,GAAG,SACHH,UAAU,mBAFZ,SAIE,qBAAKA,UAAU,wBAAf,SACGmJ,EACG,UACA,aAIR,qBAAKrG,IAAKZ,EAAY,OAACuH,QAAD,IAACA,GAAD,UAACA,EAASqG,cAAV,iBAAC,EAAiBC,YAAlB,aAAC,EAAuBnJ,aAAc5D,IAAI,GAAGhD,UAAU,kCCPxEgQ,OA1Cf,WAAgB,IAAD,MACPrL,EAAQC,YAAc,wBAS5B,OACE,sBAAK5E,UAAU,MAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyB,KAAK,MAAMwO,KAAK,IAAIC,OAAK,EAAhC,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOzO,KAAK,MAAMwO,KAAK,UAAUC,OAAK,EAAtC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,QAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,oBAAoBC,OAAK,EAArC,SACE,cAAC,EAAD,CAAYnQ,GAAE,OAAE4E,QAAF,IAAEA,GAAF,UAAEA,EAAOc,cAAT,aAAE,EAAegF,aAEjC,cAAC,IAAD,CAAOwF,KAAK,qBAAqBC,OAAK,EAAtC,SACgC,iBAAxB,OAALvL,QAAK,IAALA,GAAA,UAAAA,EAAOc,cAAP,eAAeQ,WAEd,cAAC,EAAD,CAAWlG,GAAE,OAAE4E,QAAF,IAAEA,GAAF,UAAEA,EAAOc,cAAT,aAAE,EAAe0K,UAE9B,cAAC,EAAD,SAKN,cAAC,EAAD,QCxCSC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxP,MAAK,YAAkD,IAA/CyP,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCLRO,GAAe,CACnBxH,QAASsE,aAAamD,QAAQ,YAAc,ICAjCC,GAAcC,aAAgB,CACzC3H,QDG4B,WAAmC,IAAlCF,EAAiC,uDAAzB0H,GAAc3C,EAAW,uCAC9D,OAAOA,EAAOrN,MACZ,KAAK4M,GACH,MAAQ,CAACpE,QAAS6E,EAAOL,SAE7B,OAAO1E,K,SEAI8H,GAAQC,aAAYH,GAAaI,aAAgBC,OAE9DC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,IAAMM,WAAP,UACE,cAAC,IAAD,CAAQC,SAAS,IAAjB,SACE,cAAC,GAAD,UAINC,SAASC,eAAe,SAM1BrB,O","file":"static/js/main.916d83e7.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport { HashLink } from 'react-router-hash-link'\nimport { useLocation } from 'react-router-dom'\n\nconst classNames = require(\"classnames\")\n\nexport const Menu = () => {\n  const location = useLocation()\n\n  return (\n    <div id=\"menu\" className={classNames(\"menu\", {\"menu--active\": location.hash === \"#menu\"})}>\n      <div className=\"navigation\">\n        <div className=\"navigation__content\">\n          <HashLink\n            smooth to=\"#\"\n            className=\"menu__close-button\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft}/>\n          </HashLink>\n        </div>\n      </div>\n      <div className=\"container\">\n        <h1 className=\"menu__title\">\n          Menu\n        </h1>\n        <ul className=\"menu__main\">\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/\">\n              home\n            </HashLink>\n          </li>\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/info\">\n              info\n            </HashLink>\n          </li>\n          <li className=\"menu__main-item\">\n            <a className=\"menu__link\" href=\"#info\">\n              adsadfs\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}","const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst api_key = \"a1cacae9e097c731c0046cf30fa3b749\";\n\nexport const getMoviesByYear = async (year, type = \"movie\") => {\n    if(type === \"multi\") {\n        return fetch(`${BASE_URL}discover/movie?year=${year}&api_key=${api_key}`)\n            .then(response => response.json())\n            .then(data => data.results.map((el) => ({...el, media_type: \"movie\"})))\n            .then((result) => getMoviesByYear(\"2021\", 'tv').then((tvResult) => [...result, ...tvResult.map((el) => ({...el, media_type: \"tv\", title: el.name}))]))\n    }\n\n    return fetch(`${BASE_URL}discover/${type}?year=${year}&api_key=${api_key}`)\n        .then(response => response.json())\n        .then(data => data.results.map((el) => ({...el, media_type: type, title: el.name || el.title})))\n}\n\nexport const createToken = () => fetch(`${BASE_URL}/authentication/token/new?api_key=${api_key}`)\n    .then(response => response.json())\n\nexport const createSessionWithLogin = (username, password, token) => fetch(\n        `https://api.themoviedb.org/3/authentication/token/validate_with_login?api_key=${api_key}`,\n        {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body:  JSON.stringify({\n                username,\n                password,\n                request_token: token\n            })\n        }\n    )\n    .then((res) => res.json())\n\nexport const createSession = (token) => fetch(\n    `https://api.themoviedb.org/3/authentication/session/new?api_key=${api_key}`,\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        method: 'POST',\n        body:  JSON.stringify({\n            request_token: token\n        })\n    }\n)\n.then((res) => res.json())\n\n\n\nexport const getAccInfo = (sid) => fetch(`${BASE_URL}account?api_key=${api_key}&session_id=${sid}`)\n    .then(response => response.json())\n\nexport const getCredits = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/credits?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.cast)\n\nexport const getTrailer = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/videos?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.results)\n\nexport const getCrew = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/credits?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.crew)\n\nexport const getPersonsCredits = (id) => fetch(`${BASE_URL}person/${id}/combined_credits?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data)\n\nexport const getPerson = (id) => fetch(`${BASE_URL}person/${id}?api_key=${api_key}`)\n    .then(response => response.json())\n\nexport const getPeopleArr = (idArr) => {\n    const resultArr = idArr.map(async (id) => {\n        const response = await fetch(`${BASE_URL}person/${id}?api_key=${api_key}`)\n        const result = response.json();\n        return result;\n    })\n\n    return resultArr;\n}\n\nexport const getReviews = (id, mediaType) => fetch(`${BASE_URL}${mediaType}/${id}/reviews?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(({results}) => results)\n\nexport const findPerson = (query) => fetch(`${BASE_URL}search/person?api_key=${api_key}&query=${query}`)\n    .then(response => response.json())\n    .then(({results}) => results)\n\nexport const getMoviesByTitle = (title) => fetch(`${BASE_URL}search/multi?query=${title}&api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.results)\n\nexport const getMoviesById = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(response => ({...response, media_type: movieType, title: response.title || response.name}))\n\nexport const getGenres = () => fetch(`${BASE_URL}genre/movie/list?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(response => response.genres)\n\nexport const getSimilar = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/similar?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.results.map((el) => ({...el, media_type: movieType, title: el.title || el.name})))\n\nexport const getCollection = (id) => fetch(`${BASE_URL}collection/${id}?api_key=${api_key}`)\n    .then(response => response.json())\n\nexport const getMovieImg = (img, w500 = false) => `https://image.tmdb.org/t/p/${w500 ? \"w500\" : 'original'}/${img}`\n\nexport const getPersonImg = (img, w500 = false) => `https://image.tmdb.org/t/p/${w500 ? \"w500\" : 'original'}/${img}`\n","import React from 'react'\nimport { getMovieImg } from './api'\nimport { useHistory } from 'react-router';\n\nconst classNames = require(\"classnames\");\n\nexport const MovieCard = ({ last = false, movie, genres}) => {\n  const history = useHistory();\n  return (\n    <div\n      // to={`/${movie.media_type}/${movie.id}`}\n      className={classNames(\"movie-card\", {\"movie-card--last\": last})}\n      onClick={() => {\n        console.log(history)\n        history.push(`/${movie.media_type}/${movie.id}`)\n        window.location.reload()\n      }}\n    >\n      <img src={getMovieImg(movie?.poster_path, true)} alt=\"\" className=\"movie-card__img\" />\n      <div className=\"movie-card__description\">\n        <img className=\"movie-card__description-img\" src={getMovieImg(movie.backdrop_path, true)} alt=\"\" />\n        <div className=\"movie-card__description-content\">\n          <h1 className=\"movie-card__description-title\">{movie?.title}</h1>\n          <ul className=\"movie-card__description-ganres-list\">\n            {movie.genre_ids?.map((genreId) =>\n              <li className=\"movie-card__description-ganre\">\n                {genres.find(({id}) => genreId === id)?.name}\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { getMovieImg } from './api'\n\nconst classNames = require(\"classnames\");\n\nexport const PersonCard = ({person}) => {\n  return (\n    <Link\n      to={`/people/${person.id}`}\n      className={classNames(\"person-card\")}\n    >\n      <img src={getMovieImg(person.profile_path, true)} alt=\"\" className=\"person-card__img\"/>\n      <div className=\"person-card__job\">\n        {person.job || person.character}\n      </div>\n      <div className=\"person-card__name\">\n        {person.name}\n      </div>\n    </Link>\n  )\n}","import React, { useEffect, useRef, useState } from 'react'\nimport { MovieCard } from './MovieCard';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getGenres } from './api';\nimport { PersonCard } from './PersonCard';\n\nconst classNames = require('classnames');\n\nexport const MoviesSlider = ({moviesList = null, peopleList = []}) => {\n  const slider = useRef(null);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n  }, [])\n\n  return (\n    <div\n      className=\"movies-slider\"\n    >\n      {/* <img src={bannerMovie} className=\"movies-slider__banner\"></img> */}\n      <div\n        onClick={() => {\n          slider.current.scrollBy({\n            left: -1 * slider.current.clientWidth * 0.9,\n            behavior: \"smooth\"\n          })\n        }}\n        className={classNames([\"movies-slider__scroll-button\", \"movies-slider__scroll-button--left\", {\"movies-slider--disabled\": moviesList || peopleList}])}\n        >\n        <FontAwesomeIcon icon={faChevronLeft}/>\n      </div>\n      <div\n        ref={slider}\n        className=\"movies-slider__tape\"\n      >\n        <div className=\"movies-slider__content\">\n          {peopleList.map((person) => (\n            <div>\n              <PersonCard person={person} />\n            </div>\n          ))}\n          {!!moviesList ? moviesList?.map((movie, index) => (\n            <div>\n              <MovieCard last={index === 0} movie={movie} genres={genres}/>\n            </div>\n          )) : ''}\n        </div>\n      </div>\n      <div\n        onClick={() => {\n          slider.current.scrollBy({\n            left: slider.current.clientWidth * 0.9,\n            behavior: \"smooth\"\n          })\n        }}\n        className=\"movies-slider__scroll-button movies-slider__scroll-button--right\"\n      >\n        <FontAwesomeIcon icon={faChevronRight}/>\n      </div>\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\nimport { getCredits, getCrew, getMovieImg, getMoviesById, getReviews, getSimilar, getTrailer } from '../components/api';\nimport {MoviesSlider} from '../components/MoviesSlider'\n\nimport \"swiper/swiper-bundle.css\";\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Navigation, Pagination, A11y } from 'swiper';\n// import SwiperCore, {\n//   EffectCards\n// } from 'swiper';\n\n// // install Swiper modules\n// SwiperCore.use([EffectCards]);\n\nexport const MoviePage = () => {\n  const match = useRouteMatch(\"/:movieType/:movieId\");\n  const [cast, setCast] = useState([])\n  const [trailer, setTrailer] = useState([])\n  const [crew, setCrew] = useState([])\n  const [movie, setMovie] = useState({});\n  const [similar, setSimilar] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const location = useLocation();\n\n  console.log(cast)\n\n  useEffect(() => {\n    getTrailer(match.params.movieId, match.params.movieType).then((response) => { setTrailer(response[0]?.key) })\n    getCrew(match.params.movieId, match.params.movieType).then((response) => { setCrew(response.reverse()) })\n    getCredits(match.params.movieId, match.params.movieType).then((response) => { setCast(response.reverse()) })\n    getMoviesById(match.params.movieId, match.params.movieType).then((response) => { setMovie(response) })\n    getSimilar(match.params.movieId, match.params.movieType).then((response) => { setSimilar(response) })\n    getReviews(match.params.movieId, match.params.movieType).then((response) => { setReviews(response) })\n  }, [location, match.params.movieId, match.params.movieType])\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [match])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"movie-page\">\n          <section className=\"page__section grid grid--desktop\">\n            <div className=\"movie-page__poster grid__item--1-4\">\n              <img src={getMovieImg(movie.poster_path)} alt=\"\" className=\"movie-page__poster-img\" />\n            </div>\n            <div className=\"page__description grid__item--5-12 grid grid--desktop\">\n              <div className=\"grid__item--1-12 page__title movie-page__title\">\n                {movie?.title}\n              </div>\n              <div className=\"movie-page__votes grid__item--1-12\">\n                imdb: <span className=\"movie-page__votes-value\">{movie?.vote_average}</span>\n              </div>\n              <div className=\"movie-page__overview grid__item--1-12\">\n                {movie.overview}\n              </div>\n              <div className=\"movie-page__genres-list grid__item-1-12\">\n                {movie.genres?.map(({name}) =>\n                  <div className=\"movie-page__genre\">\n                    {name}\n                  </div>\n                )}\n              </div>\n              {movie.belongs_to_collection &&\n                <div className=\"grid__item--1-12\">\n                  collection:\n                  <Link to={`/collections/${movie.belongs_to_collection.id}`}>\n                    {movie.belongs_to_collection.name}\n                  </Link>\n                </div>\n              }\n            </div>\n          </section>\n          <section className=\"page__section\">\n            <div className=\"movie-page__trailer\">\n              <iframe\n                title=\"trailer\"\n                className=\"movie-page__video\"\n                src={`https://www.youtube.com/embed/${trailer}`}\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              />\n            </div>\n          </section>\n          <section className=\"page__section\">\n            <div className=\"page__title\">\n              reviews\n            </div>\n              {\n                reviews.map((review) => (\n                    <div className=\"review\">\n                      <div className=\"review__author\">\n                        <img\n                          src={\n                            getMovieImg(review.author_details.avatar_path, true)\n                          }\n                          alt=\"\"\n                          className=\"review__author-img\"\n                        />\n                        <div className=\"review__author-nickname\">\n                          {review.author_details.name}\n                        </div>\n                      </div>\n                      <div className=\"review__content\">\n                        {review.content}\n                      </div>\n                      <div className=\"review__footer\">\n                        {new Date(review.created_at).toLocaleString('default', { year: 'numeric', month: 'long' })}\n                      </div>\n                    </div>\n                ))\n              }\n          </section>\n          <section className=\"page__section\">\n            <div className=\"page__title\">\n              Cast\n            </div>\n            <MoviesSlider peopleList={cast} />\n            <div className=\"page__title\">\n              Crew\n            </div>\n            <MoviesSlider peopleList={crew} />\n          </section>\n          <section className=\"page__section\">\n            <div className=\"page__title\">\n              Similar\n            </div>\n            <MoviesSlider moviesList={similar} />\n          </section>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const Info = () => {  \n\n  return (\n    <div className=\"info page\">\n      <div className=\"container\">\n        <div className=\"info__param\">\n          <h1 className=\"info__title\">\n            API:\n          </h1>\n          <a href=\"https://www.themoviedb.org/\">\n            <div className=\"info__api\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}","import React, {useState, useEffect, useCallback} from 'react'\nimport \"swiper/swiper-bundle.css\";\n// import \"swiper/css/effect-flip\"\n// import \"swiper/css/pagination\"\n// import \"swiper/css/navigation\"\n\n// import \"swiper/styles.css\";\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Autoplay } from 'swiper';\nimport { EffectCoverflow } from 'swiper';\n\n\nimport { Navigation, Pagination, A11y, Parallax } from 'swiper';\n\nimport debounce from 'lodash.debounce';\nimport { getMovieImg } from './api';\nimport { Link } from 'react-router-dom';\n\nSwiperCore.use([Autoplay, Pagination, Navigation, EffectCoverflow, Parallax]);\n\nexport const Poster = ({moviesList}) => {\n  const [selectedMovieId, selectMovieId] = useState(0)\n  const moviePicture = new Image(1180, 590);\n  moviePicture.src = `https://image.tmdb.org/t/p/original/${moviesList[selectedMovieId]?.backdrop_path}`\n\n  const nextMovie = () => {\n    if (selectedMovieId === moviesList.length - 1) {\n      selectMovieId(0);\n\n      return\n    }\n\n    selectMovieId(selectedMovieId + 1);\n  }\n\n  const nextMovieWithDebounce = useCallback(debounce(nextMovie, 10000), [selectedMovieId])\n\n  useEffect(() => {\n    nextMovieWithDebounce();\n\n    return nextMovieWithDebounce.cancel;\n  }, [selectedMovieId, nextMovieWithDebounce])\n\n  return (\n    <Swiper\n      modules={[Navigation, Pagination, A11y, EffectCoverflow, Parallax]}\n      effect=\"coverflow\"\n      spaceBetween={0}\n      slidesPerView={1}\n      navigation\n      pagination={{ clickable: true }}\n      loop={true}\n      autoplay={{\n        delay: 5000,\n        disableOnInteraction: false\n      }}\n      onSwiper={(swiper) => console.log(swiper)}\n    >\n        {moviesList?.map((movie) => (\n          <SwiperSlide>\n            <div className=\"poster\">\n              <Link to={`${movie.media_type}/${movie.id}`}>\n                <img src={getMovieImg(movie.backdrop_path)} className=\"poster__img\" alt=\"\"/>\n                <div className=\"poster__title\">\n                  {movie.title}\n                </div>\n              </Link>\n            </div>\n          </SwiperSlide>\n        ))}\n        <div className=\"prev\"></div>\n        <div className=\"next\"></div>\n      </Swiper>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\nimport { getAccInfo, getMoviesByYear } from '../components/api'\nimport { MoviesSlider } from '../components/MoviesSlider';\nimport { Poster } from '../components/Poster';\n\nconst Home = ({session_id}) => {\n  const [moviesOnPoster, setMoviesOnPoster] = useState([]);\n  const [newTv, setNewTv] = useState([]);\n  const [accInfo, setAccInfo] = useState({});\n  const [newMovies, setNewMovies] = useState([]);\n\n  useEffect(() => {\n    getMoviesByYear(\"2021\", 'multi')\n      .then((result) => setMoviesOnPoster(result))\n    getMoviesByYear(\"2021\", 'movie')\n      .then((result) => setNewMovies(result))\n    getMoviesByYear(\"2021\", 'tv')\n      .then((result) => setNewTv(result))\n    // console.log(moviesOnPoster)\n    \n  }, [])\n\n  useEffect(() => {\n    getAccInfo(session_id).then((res) => setAccInfo(res))\n  }, [session_id])\n\n  return (\n    <div className=\"page home\">\n      <div className=\"container\">\n        <h1 className=\"page__title\">\n          {!accInfo.username\n            ? \"Home\"\n            : `Hi, ${accInfo.username}!`\n          }\n        </h1>\n        \n        <section className=\"page__section\">\n          <main>\n            <Poster moviesList={moviesOnPoster}/>\n          </main>\n        </section>\n\n        <section className=\"page__section\">\n          <div className=\"page__title\">\n            Newest tv shows\n          </div>\n          <MoviesSlider moviesList={newTv}/>\n        </section>\n        <section className=\"page__section\">\n          <div className=\"page__title\">\n            Newest movies\n          </div>\n          <MoviesSlider moviesList={newMovies}/>\n        </section>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session}))(Home)\n","import React, { useEffect, useState } from 'react'\nimport { useRouteMatch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { getCollection, getMovieImg } from '../components/api'\n\nexport const CollectionPage = () => {\n  const match = useRouteMatch('/collections/:collectionId')\n  const [collection, setCollection] = useState({})\n\n  useEffect(() => {\n    getCollection(match.params.collectionId).then((response) => setCollection(response))\n  }, [match.params.collectionId])\n  \n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"collections-page grid\">\n          <div className=\"grid grid__item--1-12\">\n            <div className=\"collections-page__poster grid__item--1-3\">\n              <img src={getMovieImg(collection.poster_path, true)} className=\"collections-page__poster-img\" alt=\"\"></img>\n            </div>\n            <div className=\"page__description grid__item--4-12 grid\">\n              <h2 className=\"page__title grid__item--1-12\">{collection.name}</h2>\n              <div className=\"grid__item--1-12\">{collection.overview}</div>\n            </div>\n          </div>\n          {collection?.parts?.map((part) => (\n            <Link to={`/movies/${part.id}`} className=\"collections-page__part grid grid__item--1-12\">\n              <div className=\"collections-page__poster grid__item--1-2\">\n                <img src={getMovieImg(part.poster_path, true)} className=\"collections-page__poster-img\" alt=\"\"></img>\n              </div>\n              <div className=\"page__title grid__item--3-12\">{part.title}</div>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { getPerson, getPersonImg, getPersonsCredits } from '../components/api';\nimport {MoviesSlider} from '../components/MoviesSlider'\n\nexport const PersonPage = () => {\n  const match = useRouteMatch(\"/people/:personId\");\n  const [credits, setCredits] = useState([]);\n  const [person, setPerson] = useState({})\n  const location = useLocation();\n\n  useEffect(() => {\n    getPerson(match.params.personId).then((response) => setPerson(response));\n    getPersonsCredits(match.params.personId).then((response) => setCredits(response));\n  }, [location, match.params.personId])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"person-page grid\">\n          <div className=\"person-page__poster grid__item--1-4\">\n            <img src={getPersonImg(person.profile_path)} className=\"person-page__poster-img\" alt=\"\"></img>\n          </div>\n          <div className=\"grid__item--5-12\">\n            <h1 className=\"person-page__name\">\n              {person.name}\n            </h1>\n            <div className=\"person-page__params\">\n              <div className=\"person-page__param\">\n                <div>\n                  known for\n                </div>\n                <div/>\n                <div>\n                  {person.known_for_department}\n                </div>\n              </div>\n              <div className=\"person-page__param\">\n                <div>\n                  born\n                </div>\n                <div/>\n                <div>\n                  {person.birthday}\n                </div>\n              </div>\n              {person.deathday &&\n                <div className=\"person-page__param\">\n                  <div>\n                    died\n                  </div>\n                  <div/>\n                  <div>\n                    {person.deathday}\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n          <div className=\"person-page__biography grid__item--1-12\">\n            <h2 className=\"person-page__section-title\">\n              Biography\n            </h2>\n            <div className=\"person-page__biography-main\">\n              {person.biography}\n            </div>\n          </div>\n          <div className=\"grid__item--1-12\">\n            <h2 className=\"person-page__section-title\">\n              Acting\n            </h2>\n            <div>\n              <MoviesSlider moviesList={credits.cast} />\n            </div>\n          </div>\n          {\n            Object.entries(\n              credits.crew?.reduce((prev, cur) => ({\n                filtered: {\n                  [cur.job]: prev.full.filter((e) => e.job === cur.job),\n                  ...prev.filtered,\n                },\n                full: prev.full.filter((e) => e.job !== cur.job)\n              }), {full: credits.crew}).filtered || {}\n            ).sort((a, b) => b[1].length - a[1].length).map((movie) => (\n              <div className=\"grid__item--1-12\">\n              <h2 className=\"person-page__section-title\">\n                {movie[0]}\n              </h2>\n              <div>\n                <MoviesSlider moviesList={movie[1]} />\n              </div>\n            </div>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useCallback, useEffect, useState } from 'react'\nimport { useHistory, useLocation } from 'react-router';\nimport { findPerson, getPeopleArr, getPerson, getPersonImg } from './api';\nimport debounce from 'lodash.debounce'\n\nexport const SearchPageCrewFilter = ({queryName}) => {\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const [actors, setActors] = useState([]);\n  const [selectedActors, setSelectedActors] = useState([]);\n\n  const onSearch = useCallback(debounce((name) => {\n    findPerson(name).then((data) => setActors((data || []).slice(0, 7)))\n  }, 500), [])\n\n  useEffect(() => {\n    console.log('works')\n    setActors(actors.filter((el) => !searchParams.get(queryName).split(',').some((id) => id === el.id)))\n  }, [searchParams.get(queryName)])\n\n  const loadPeopleArr = async () => {\n    const result = [];\n    await getPeopleArr(searchParams.get(queryName)?.split(',') || []).forEach((el) => el.then((res) => {\n      if(!!res.id) {\n        result.push(res)\n      }\n    }))\n    await setSelectedActors(result)\n    console.log('loaded')\n  }\n\n  const addSelectedPerson = async (id) => {\n    await getPerson(id).then((response) => {setSelectedActors([...selectedActors, response])})\n    searchParams.set(queryName, [searchParams.get(queryName), id])\n    history.push({search: searchParams.toString()})\n  }\n\n  const deleteSelectedPerson = async (id) => {\n    setSelectedActors([...selectedActors].filter((el) => +id !== +el.id))\n    searchParams.set(queryName, searchParams.get(queryName).split(',').filter((el) => +id !== +el))\n    history.push({search: searchParams.toString()})\n  }\n\n  useEffect(() => {\n    loadPeopleArr()\n  }, [])\n\n\n\n  return (\n    <div className=\"actors-filter\">\n      <div className=\"actors-filter__input-container\">\n        <input\n          onChange={(event) => {\n            onSearch(event.target.value)\n          }}\n          className=\"actors-filter__input\"\n        />\n        <div className=\"actors-filter__results-block\">\n          {\n            actors.map((actor) => (\n              <div className=\"actors-filter__result\">\n                <img src={getPersonImg(actor.profile_path, true)} alt=\"\" className=\"actors-filter__result-img\" />\n                <div\n                  onClick={() => addSelectedPerson(actor.id)}\n                  className=\"actors-filter__add-actor\"\n                >\n                  add actor\n                </div>\n              </div>\n            ))\n          }\n        </div>\n\n      </div>\n\n      <div className=\"actors-filter__selected-actors-block\">\n        {selectedActors.map((actor) => (\n          <div className=\"actors-filter__selected-actor\">\n            <img src={getPersonImg(actor.profile_path)} alt=\"\" className=\"actors-filter__selected-actor-img\" />\n            <h3>{actor.name}</h3>\n            <div\n              onClick={() => deleteSelectedPerson(actor.id)}\n              className=\"actors-filter__unselect-actor-button\"\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\n","import React, { useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom';\nconst classNames = require('classnames');\n\nexport const SearchPageCheckbox = ({text, list}) => {\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const [isOpened, open] = useState(false);\n\n  const selectNewOption = (id) => {\n    searchParams.set(text, [searchParams.get(text), id])\n    history.push({ search: searchParams.toString() })\n  }\n  \n  const cencelOption = (id) => {\n    const result = searchParams.get(text)?.split(',').filter((optionId) => optionId !== '' && +optionId !== id);\n    console.log('result ', result)\n    if(result.length === 0) {\n      searchParams.delete(text)\n    } else {\n      searchParams.set(text, result)\n    }\n    history.push({ search: searchParams.toString() })\n  }\n\n  return (\n    <div className=\"checkbox\">\n      <div\n        onClick={() => { open(!isOpened) }}\n        className={classNames(\"checkbox__options-switcher\", {\"checkbox__options-switcher--active\": isOpened})}\n      >\n        {text}\n      </div>\n      <div className={classNames(\"checkbox__options-block\", {\"checkbox__options-block--active\": isOpened})}>\n        {\n          list.map(({id, name}) => (\n            <div\n              onClick={() => {\n                if(searchParams.get(text)?.split(',').some((optionId) => +optionId === id)) {\n                  cencelOption(id);\n                  return;\n                }\n                selectNewOption(id)\n              }}\n              className={classNames([\"checkbox__option\", {\"checkbox__option--active\": searchParams.get(text)?.split(',').some((optionId) => +optionId === id)}])}\n              key=\"id\"\n            >\n              {name}\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom';\nconst classNames = require('classnames');\n\nexport const FilterVisibilityToggler = ({filter, title}) => {\n  const [isOpened, open] = useState(false);\n\n  return (\n    <div\n      className={\n        classNames([\n          \"search-page__filter-visibility-toggler\",\n          {\"search-page__filter-visibility-toggler--active\": isOpened}\n        ])\n      }\n      \n    >\n      <div\n        className={\n          classNames([\n            \"search-page__filter-visibility-toggler-text\",\n            {\"search-page__filter-visibility-toggler-text--active\": isOpened}\n          ])\n        }\n        onClick={() => open(!isOpened)}\n      >\n        {title}\n      </div>\n      <div\n        className={classNames([\n          \"search-page__filter-visibility-toggler-content\",\n          {\"search-page__filter-visibility-toggler-content--active\": isOpened}\n        ])}\n      >\n        {filter}\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { getGenres } from '../components/api';\nimport { SearchPageCheckbox } from '../components/SearchPageCheckbox';\nimport { SearchPageCrewFilter } from '../components/SearchPageCrewFilter';\nimport { FilterVisibilityToggler } from '../components/FilterVisibilityToggler';\n\nexport const SearchPage = () => {\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n  }, [])\n  \n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"grid\">\n          <div className=\"search-page__filters-block grid__item--1-4\">\n            <div className=\"search-page__filter\">\n              <FilterVisibilityToggler\n                title=\"actors filter\"\n                filter={<SearchPageCrewFilter queryName=\"actors\"/>}\n              />\n            </div>\n            {/* <div className=\"search-page__filter\">\n              fsdla\n              <SearchPageCrewFilter queryName=\"crew\"/>\n            </div>\n            <div className=\"search-page__filter\">\n              <SearchPageCheckbox text=\"genres\" list={genres}/>\n            </div> */}\n          </div>\n          <input type=\"text\" className=\"search-page__search grid__item--5-12\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\n","export const SET_SESSION_ID = \"SESSION/SET_ID\"","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport { HashRouter } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\nimport { createSession, createToken } from '../components/api';\nimport { createSessionWithLogin, getAccInfo } from '../components/api';\nimport { setSessionId } from '../redux/actions';\n\nconst classNames = require('classnames')\n\nconst LoginWindow = ({session_id, setSessionId}) => {\n  const location = useLocation()\n  const [token, setToken] = useState('');\n  const [userData, setUserData] = useState({});\n\n  const history = useHistory({});\n\n  console.log('sid', session_id)\n  console.log('ud', userData)\n\n  useEffect(() => {\n    if(session_id !== '') {\n      getAccInfo(session_id).then((response) => setUserData(response))\n    }\n  }, [session_id])\n\n  return (\n    <form\n      id=\"login\"\n      action=\"\"\n      className={classNames(\"login\", {\"login--active\": location.hash === '#login'})}\n      onSubmit={(event) => {\n        \n        if(session_id === '') {\n          createToken().then((res) => {\n            console.log('token', res);\n            setToken(res.request_token)\n  \n            createSessionWithLogin(\n              event.target.elements.username.value,\n              event.target.elements.password.value,\n              token\n            )\n              .then((res) => {\n                createSession(res.request_token)\n                  .then((response) => setSessionId(response.session_id))            \n                console.log(res)\n            })\n          })\n\n          return\n        }\n\n        setSessionId('')\n      }}\n    >\n      <div className=\"login__title\">\n        {!session_id ? \"Log in\" : \"Are you sure?\"}\n      </div>\n      {session_id === ''\n        ?\n          <>\n            <label htmlFor=\"username\" className=\"login__label\">User name</label>\n            <input type=\"text\" id=\"username\" className=\"login__field\"/>\n            <label htmlFor=\"password\" className=\"login__label\">Password</label>\n            <input type=\"password\" id=\"password\" className=\"login__field\"/>\n            <button onClick={() => history.push({hash:\"#\"})} type=\"submit\" className=\"login__submit-button\" >accept</button>\n          </>\n        :\n          <>\n            <button to=\"#\" type=\"submit\" className=\"login__log-out-button\" >Log out</button>\n          </>\n      }\n      <HashLink to=\"#\" className=\"login__close-button\"></HashLink>\n    </form>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session}), {setSessionId})(LoginWindow)","import { SET_SESSION_ID } from \"./types\"\n\nexport const setSessionId = (session_id) => {\n  localStorage.setItem('session', session_id)\n  return {\n    type: SET_SESSION_ID,\n    payload: session_id\n  }\n}","import React, { useState } from 'react'\nimport \"../styles/blocks/navigation.scss\"\n\nconst classNames = require(\"classnames\");\n\nexport const NavigationDropdown = ({text}) => {\n  const [isActive, setActive] = useState(false); \n\n  return (\n    <>\n      <div\n        className={classNames(\n          \"navigation__dropdown\",\n          {\"navigation__dropdown--active\": isActive}\n        )}\n        onClick={() => setActive(!isActive)}\n        onMouseLeave={() => setActive(false)}\n      >\n        <div className=\"navigation__link-text\">\n          {text}\n        </div>\n        <div className={classNames(\"navigation__dropdown-options-block\", {\"navigation__dropdown-options-block--active\": !isActive})}>\n          <div className=\"navigation__dropdown-option\">\n            <div className=\"navigation__link-text\">\n              aasfadfsdfsa\n            </div>\n          </div>\n          <div className=\"navigation__dropdown-option\">\n            <div className=\"navigation__link-text\">\n              aasfadfsdfsa\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}","import React, { useCallback, useRef, useState } from 'react'\nimport \"../styles/blocks/navigation.scss\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport debounce from 'lodash.debounce'\nimport { getMovieImg, getMoviesByTitle } from './api'\nimport { Link } from 'react-router-dom'\n\nconst classNames = require(\"classnames\")\n\nexport const NavigationSearch = () => {\n  const [isActive, setActive] = useState(false);\n  const [results, setResluts] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  const input = useRef('')\n\n  const onSearch = useCallback(debounce((title) => {\n    getMoviesByTitle(title).then((data) => setResluts((data || []).slice(0, 7)))\n  }, 500), [])\n\n  return (\n    <>\n      <div\n        className=\"navigation__search\"\n      >\n        <input\n          ref={input}\n          value={text}\n          onChange={(event) => {\n            setText(event.target.value)\n            onSearch(event.target.value)\n            console.log(\"a\");\n          }}\n          onBlur={() => setActive(false)}\n          className={\n            classNames(\n              \"navigation__search-input\",\n              {\"navigation__search-input--active\": isActive}\n            )\n          }\n        >\n        </input>\n        <div\n          onClick={() => {\n            if(isActive === false) {\n              setActive(true)\n              input.current.focus()\n            }else {\n              setActive(false)\n            }\n          }}\n          className={classNames(\"navigation__search-icon\", {\"navigation__search-icon--active\": isActive})}\n        >\n          <FontAwesomeIcon\n            icon={faSearch}\n          />\n        </div>\n        <ul className={classNames(\"navigation__search-results-block\", {\"navigation__search-results-block--active\": (text && isActive)})}>\n          {\n            <>\n              {\n                results.map(result => (\n                  <li key={result.id}>\n                    <Link to={`/${result.media_type}/${result.id}`} className=\"navigation__search-result\">\n                      <img src={getMovieImg(result.poster_path, true)} alt=\"\" className=\"navigation__search-result-img\" />\n                      <h2 className=\"navigation__search-result-title\">\n                        {result.title}\n                      </h2>\n                    </Link>\n                  </li>\n                ))\n              }\n              {\n                results.length > 0 ?\n                  <li key={\"end\"} className=\"navigation__search-more-results\">\n                    more results...\n                  </li>\n                :\n                  <li key={\"end\"} className=\"navigation__search-no-results\">\n                    no results\n                  </li>\n              }\n            </>\n          }\n        </ul>\n      </div>\n    </>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { NavigationDropdown } from \"./NavigationDropdown\"\nimport { NavigationSearch } from './NavigationSearch'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { HashLink } from 'react-router-hash-link'\nimport { HashRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getAccInfo, getPersonImg } from './api'\n\nconst Navigation = ({session_id}) => {\n  const [accInfo, setAccInfo] = useState({})\n\n  useEffect(() => {\n    getAccInfo(session_id).then((res) => setAccInfo(res))\n  }, [session_id])\n\n  console.log('acc', accInfo)\n\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation__content\">\n        {/* elements displayed only on mobiles */}\n        <HashLink\n          // smooth\n          scroll={(el) => el.scrollIntoView()}\n          className=\"navigation__menu\"\n          to=\"#menu\"\n        >\n          <FontAwesomeIcon\n            icon={faBars}\n          />\n        </HashLink>\n\n\n        <Link to=\"/\" className=\"navigation__logo\">\n          PMDb\n        </Link>\n        <div className=\"navigation__main\">\n          <NavigationDropdown text=\"film catalogue\"/>\n          <Link to=\"/info\" className=\"navigation__link\">\n            <div className=\"navigation__link-text\">\n              Info\n            </div>\n          </Link>\n          <Link to=\"/search\" className=\"navigation__link\">\n            <div className=\"navigation__link-text\">\n              search\n            </div>\n          </Link>\n        </div>\n        <div className=\"navigation__right-side-block\">\n          <NavigationSearch></NavigationSearch>\n          <HashLink\n            to=\"#login\"\n            className=\"navigation__link\"\n          >\n            <div className=\"navigation__link-text\">\n              {session_id\n                ? 'log out'\n                : 'log in'\n              }\n            </div>\n          </HashLink>\n          <img src={getPersonImg(accInfo?.avatar?.tmdb?.avatar_path)} alt=\"\" className=\"navigation__avatar\"/>\n        </div>\n      </div>  \n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session}))(Navigation)","import './styles/App.scss';\nimport { Menu } from './components/Menu';\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { MoviePage } from './pages/MoviePage';\nimport { Info } from './pages/Info'\nimport Home from './pages/Home'\nimport { CollectionPage } from './pages/CollectionPage';\nimport { PersonPage } from './pages/PersonPage';\nimport {Switch} from 'react-router'\nimport { SearchPage } from './pages/SearchPage';\nimport { useEffect, useState } from 'react';\nimport { getAccInfo } from './components/api';\nimport LoginWindow from './pages/LoginWindow';\nimport Navigation from './components/Navigation'\n\nfunction App() {\n  const match = useRouteMatch('/:mediaType/:mediaId')\n  // const [accInfo, setAccInfo] = useState({});\n\n  // console.log(accInfo)\n\n  // useEffect(() => {\n  //   getAccInfo().then((response) => {setAccInfo(response)})\n  // }, [])\n\n  return (\n    <div className=\"App\">\n      <Navigation/>\n      <LoginWindow/>\n      <Switch>\n        <Route name=\"app\" path=\"/\" exact>\n          <Home/>\n        </Route>\n        <Route name=\"app\" path=\"/search\" exact>\n          <SearchPage/>\n        </Route>\n        <Route path=\"/info\">\n          <Info/>\n        </Route>\n        <Route path=\"/people/:personId\" exact>\n          <PersonPage id={match?.params?.personId}/>\n        </Route>\n        <Route path=\"/:mediaId/:mediaId\" exact>\n          {match?.params?.mediaType !== 'collections'\n            ?\n            <MoviePage id={match?.params?.mediaId}/>\n            :\n            <CollectionPage/>\n          }\n        </Route>\n      </Switch>\n      \n      <Menu />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_SESSION_ID } from \"./types\"\n\nconst initialState = {\n  session: localStorage.getItem('session') || ''\n}\n\n\nexport const sessionReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case SET_SESSION_ID:\n      return ({session: action.payload})\n  }\n  return state\n}","import { combineReducers } from \"redux\";\nimport { sessionReducer } from \"./sessionReducer\";\n\nexport const rootReducer = combineReducers({\n  session: sessionReducer,\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createStore } from 'redux';\nimport { rootReducer } from './redux/rootReducer';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Router basename=\"/\">\n        <App />\n      </Router>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}