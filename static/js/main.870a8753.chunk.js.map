{"version":3,"sources":["components/NavigationDropdown.jsx","components/api.js","components/NavigationSearch.jsx","components/Navigation.jsx","components/Menu.jsx","pages/Info.jsx","pages/Home.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["classNames","require","NavigationDropdown","text","useState","isActive","setActive","className","onClick","onMouseLeave","BASE_URL","api_key","getMoviesByYear","year","fetch","then","response","json","data","results","NavigationSearch","setResluts","setText","input","useRef","onSearch","useCallback","debounce","title","getMoviesByTitle","slice","ref","value","onChange","event","target","console","log","onBlur","current","focus","icon","faSearch","map","result","src","poster_path","alt","id","length","Navigation","scroll","el","scrollIntoView","to","faBars","href","Menu","location","useLocation","hash","smooth","faChevronLeft","Info","Home","movieOnPoster","setMovieOnPoster","selectedMovieId","selectMovieId","moviePicture","Image","backdrop_path","onload","setTimeout","onloadstart","nextMovie","nextMovieWithDebounce","useEffect","reverse","cancel","faChevronRight","movie","App","setMoviesList","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"sPAGMA,EAAaC,EAAQ,IAEdC,EAAqB,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAClC,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACE,mCACE,sBACEC,UAAWP,EACT,uBACA,CAAC,+BAAgCK,IAEnCG,QAAS,kBAAMF,GAAWD,IAC1BI,aAAc,kBAAMH,GAAU,IANhC,UAQE,qBAAKC,UAAU,wBAAf,SACGJ,IAEH,sBAAKI,UAAWP,EAAW,qCAAsC,CAAC,8CAA+CK,IAAjH,UACE,qBAAKE,UAAU,8BAAf,SACE,qBAAKA,UAAU,wBAAf,4BAIF,qBAAKA,UAAU,8BAAf,SACE,qBAAKA,UAAU,wBAAf,qC,iCC5BNG,EAAW,gCACXC,EAAU,mCAEHC,EAAkB,SAACC,GAAD,OAAUC,MAAM,GAAD,OAAIJ,EAAJ,+BAAmCG,EAAnC,oBAAmDF,IAC5FI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,YCEjBnB,EAAaC,EAAQ,IAEdmB,EAAmB,WAC9B,MAA8BhB,oBAAS,GAAvC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOe,EAAP,KAAgBE,EAAhB,KACA,EAAwBjB,mBAAS,IAAjC,mBAAOD,EAAP,KAAamB,EAAb,KAEMC,EAAQC,iBAAO,MAEfC,EAAWC,sBAAYC,KAAS,SAACC,IDTT,SAACA,GAAD,OAAWd,MAAM,GAAD,OAAIJ,EAAJ,8BAAkCkB,EAAlC,oBAAmDjB,IAC9FI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,YCQnBU,CAAiBD,GAAOb,MAAK,SAACG,GAAD,OAAUG,GAAYH,GAAQ,IAAIY,MAAM,EAAG,SACvE,KAAM,IAET,OACE,mCACE,sBACEvB,UAAU,qBADZ,UAGE,uBACEwB,IAAKR,EACLS,MAAO7B,EACP8B,SAAU,SAACC,GACTZ,EAAQY,EAAMC,OAAOH,OACrBP,EAASS,EAAMC,OAAOH,OACtBI,QAAQC,IAAI,MAEdC,OAAQ,kBAAMhC,GAAU,IACxBC,UACEP,EACE,2BACA,CAAC,mCAAoCK,MAK3C,qBACEG,QAAS,YACS,IAAbH,GACDC,GAAU,GACViB,EAAMgB,QAAQC,SAEdlC,GAAU,IAGdC,UAAWP,EAAW,0BAA2B,CAAC,kCAAmCK,IATvF,SAWE,cAAC,IAAD,CACEoC,KAAMC,QAGV,oBAAInC,UAAWP,EAAW,mCAAoC,CAAC,2CAA6CG,GAAQE,IAApH,SAEI,qCAEIc,EAAQwB,KAAI,SAAAC,GAAM,OAChB,qBAAoBrC,UAAU,4BAA9B,UACE,qBAAKsC,IAAG,0CAAqCD,EAAOE,aAAeC,IAAI,GAAGxC,UAAU,kCACpF,oBAAIA,UAAU,kCAAd,SACGqC,EAAOhB,UAHHgB,EAAOI,OASlB7B,EAAQ8B,OAAS,EACf,oBAAgB1C,UAAU,kCAA1B,4BAAS,OAIT,oBAAgBA,UAAU,gCAA1B,uBAAS,kB,eCpEd2C,EAAa,WACxB,OACE,qBAAK3C,UAAU,aAAf,SACE,sBAAKA,UAAU,sBAAf,UAEE,cAAC,IAAD,CAEE4C,OAAQ,SAACC,GAAD,OAAQA,EAAGC,kBACnB9C,UAAU,mBACV+C,GAAG,QAJL,SAME,cAAC,IAAD,CACEb,KAAMc,QAKV,cAAC,IAAD,CAAMD,GAAG,IAAI/C,UAAU,mBAAvB,kBAGA,sBAAKA,UAAU,mBAAf,UACE,cAAC,EAAD,CAAoBJ,KAAK,mBACzB,mBAAGqD,KAAK,IAAIjD,UAAU,mBAAtB,SACE,qBAAKA,UAAU,wBAAf,yBAIF,cAAC,IAAD,CAAM+C,GAAG,QAAQ/C,UAAU,mBAA3B,SACE,qBAAKA,UAAU,wBAAf,uBAKJ,cAAC,EAAD,U,OCnCFP,EAAaC,EAAQ,IAEdwD,EAAO,WAClB,IAAMC,EAAWC,cAEjB,OACE,sBAAKX,GAAG,OAAOzC,UAAWP,EAAW,OAAQ,CAAC,eAAkC,UAAlB0D,EAASE,OAAvE,UACE,qBAAKrD,UAAU,aAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,IAAD,CACEsD,QAAM,EAACP,GAAG,IACV/C,UAAU,qBAFZ,SAIE,cAAC,IAAD,CAAiBkC,KAAMqB,YAI7B,sBAAKvD,UAAU,YAAf,UACE,oBAAIA,UAAU,cAAd,kBAGA,qBAAIA,UAAU,aAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,cAAC,IAAD,CAAUA,UAAU,aAAa+C,GAAG,IAApC,oBAIF,oBAAI/C,UAAU,kBAAd,SACE,cAAC,IAAD,CAAUA,UAAU,aAAa+C,GAAG,QAApC,oBAIF,oBAAI/C,UAAU,kBAAd,SACE,mBAAGA,UAAU,aAAaiD,KAAK,QAA/B,iCCrCCO,EAAO,WAElB,OACE,qBAAKxD,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,cAAd,kBAGA,mBAAGiD,KAAK,8BAAR,SACE,qBAAKjD,UAAU,wBCLrBP,EAAaC,EAAQ,IAEd+D,EAAO,WAAO,IAAD,IACxB,EAA0C5D,mBAAS,IAAnD,mBAAO6D,EAAP,KAAsBC,EAAtB,KACA,EAA8B9D,oBAAS,GAAvC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAyCF,mBAAS,GAAlD,mBAAO+D,EAAP,KAAwBC,EAAxB,KACMC,EAAe,IAAIC,MAAM,KAAM,KACrCD,EAAaxB,IAAb,wDAA0DoB,EAAcE,UAAxE,aAA0D,EAAgCI,eAC1FF,EAAaG,OAAS,kBAAMC,YAC1B,kBAAMnE,GAAU,KAAO,MAEzB+D,EAAaK,YAAc,kBAAMpE,GAAU,IAG3C,IAAMqE,EAAY,WACZR,IAAoBF,EAAchB,OAAS,EAM/CmB,EAAcD,EAAkB,GAL9BC,EAAc,IAQZQ,EAAwBlD,sBAAYC,IAASgD,EAAW,KAAQ,CAACR,IAuBvE,OAXAU,qBAAU,WACRjE,EAAgB,MAAMG,MAAK,SAACC,GAAD,OAAckD,EAAiBlD,EAAS8D,WAAa,CAAC,UAChF,IAGHD,qBAAU,WAGR,OAFAD,IAEOA,EAAsBG,SAC5B,CAACZ,IAGF,qBAAK5D,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,cAAd,kBAIA,yBAASA,UAAU,gBAAnB,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKC,QA9BG,WAOhB4D,EANwB,IAApBD,EAMUA,EAAkB,EALhBF,EAAchB,OAAS,IA4BN1C,UAAU,oCAAnC,SAAuE,cAAC,IAAD,CAAiBkC,KAAMqB,QAC9F,qBACEjB,IAAKwB,EAAaxB,IAClBtC,UAAWP,EAAW,cAAe,CAAC,sBAAuBK,MAE/D,oBAAIE,UAAU,gBAAd,mBACG0D,EAAcE,UADjB,aACG,EAAgCvC,QAEnC,qBAAKrB,UAAWP,EAAW,gBAAiB,MAC5C,qBAAKQ,QAASmE,EAAWpE,UAAU,qCAAnC,SAAwE,cAAC,IAAD,CAAiBkC,KAAMuC,aAInG,yBAASzE,UAAU,gBAAnB,SACE,qBAAKA,UAAU,gBAAf,SACG0D,EAActB,KAAI,SAACsC,iBC9CjBC,MAvBf,WACE,MAAoC9E,mBAAS,IAA7C,mBAAmB+E,GAAnB,WAMA,OAJAN,qBAAU,WACRjE,EAAgB,QAAQG,MAAK,SAACG,GAAD,OAAUiE,EAAcjE,QACpD,IAGD,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,cAAC,IAAD,CAAO6E,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,QAAZ,SACE,cAAC,EAAD,MAGF,cAAC,EAAD,QCfSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzE,MAAK,YAAkD,IAA/C0E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAQC,SAAS,cAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.870a8753.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport \"../styles/blocks/navigation.scss\"\n\nconst classNames = require(\"classnames\");\n\nexport const NavigationDropdown = ({text}) => {\n  const [isActive, setActive] = useState(false); \n\n  return (\n    <>\n      <div\n        className={classNames(\n          \"navigation__dropdown\",\n          {\"navigation__dropdown--active\": isActive}\n        )}\n        onClick={() => setActive(!isActive)}\n        onMouseLeave={() => setActive(false)}\n      >\n        <div className=\"navigation__link-text\">\n          {text}\n        </div>\n        <div className={classNames(\"navigation__dropdown-options-block\", {\"navigation__dropdown-options-block--active\": !isActive})}>\n          <div className=\"navigation__dropdown-option\">\n            <div className=\"navigation__link-text\">\n              aasfadfsdfsa\n            </div>\n          </div>\n          <div className=\"navigation__dropdown-option\">\n            <div className=\"navigation__link-text\">\n              aasfadfsdfsa\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}","const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst api_key = \"a1cacae9e097c731c0046cf30fa3b749\";\n\nexport const getMoviesByYear = (year) => fetch(`${BASE_URL}discover/movie?year=${year}&api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.results)\n\nexport const getMoviesByTitle = (title) => fetch(`${BASE_URL}search/movie?query=${title}&api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.results)\n","import React, { useCallback, useRef, useState } from 'react'\nimport \"../styles/blocks/navigation.scss\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport debounce from 'lodash.debounce'\nimport { getMoviesByTitle } from './api'\n\nconst classNames = require(\"classnames\")\n\nexport const NavigationSearch = () => {\n  const [isActive, setActive] = useState(false);\n  const [results, setResluts] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  const input = useRef(null)\n\n  const onSearch = useCallback(debounce((title) => {\n    getMoviesByTitle(title).then((data) => setResluts((data || []).slice(0, 7)))\n  }, 500), [])\n\n  return (\n    <>\n      <div\n        className=\"navigation__search\"\n      >\n        <input\n          ref={input}\n          value={text}\n          onChange={(event) => {\n            setText(event.target.value)\n            onSearch(event.target.value)\n            console.log(\"a\");\n          }}\n          onBlur={() => setActive(false)}\n          className={\n            classNames(\n              \"navigation__search-input\",\n              {\"navigation__search-input--active\": isActive}\n            )\n          }\n        >\n        </input>\n        <div\n          onClick={() => {\n            if(isActive === false) {\n              setActive(true)\n              input.current.focus()\n            }else {\n              setActive(false)\n            }\n          }}\n          className={classNames(\"navigation__search-icon\", {\"navigation__search-icon--active\": isActive})}\n        >\n          <FontAwesomeIcon\n            icon={faSearch}\n          />\n        </div>\n        <ul className={classNames(\"navigation__search-results-block\", {\"navigation__search-results-block--active\": (text && isActive)})}>\n          {\n            <>\n              {\n                results.map(result => (\n                  <li key={result.id} className=\"navigation__search-result\">\n                    <img src={`https://image.tmdb.org/t/p/w500/${result.poster_path}`} alt=\"\" className=\"navigation__search-result-img\" />\n                    <h2 className=\"navigation__search-result-title\">\n                      {result.title}\n                    </h2>\n                  </li>\n                ))\n              }\n              {\n                results.length > 0 ?\n                  <li key={\"end\"} className=\"navigation__search-more-results\">\n                    more results...\n                  </li>\n                :\n                  <li key={\"end\"} className=\"navigation__search-no-results\">\n                    no results\n                  </li>\n              }\n            </>\n          }\n        </ul>\n      </div>\n    </>\n  )\n}","import React from 'react'\nimport { NavigationDropdown } from \"./NavigationDropdown\"\nimport { NavigationSearch } from './NavigationSearch'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { HashLink } from 'react-router-hash-link'\nimport { Link, useLocation } from 'react-router-dom'\n\nexport const Navigation = () => {\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation__content\">\n        {/* elements displayed only on mobiles */}\n        <HashLink\n          // smooth\n          scroll={(el) => el.scrollIntoView()}\n          className=\"navigation__menu\"\n          to=\"#menu\"\n        >\n          <FontAwesomeIcon\n            icon={faBars}\n          />\n        </HashLink>\n\n\n        <Link to=\"/\" className=\"navigation__logo\">\n          PMDb\n        </Link>\n        <div className=\"navigation__main\">\n          <NavigationDropdown text=\"film catalogue\"/>\n          <a href=\"#\" className=\"navigation__link\">\n            <div className=\"navigation__link-text\">\n              watchlist\n            </div>\n          </a>\n          <Link to=\"/info\" className=\"navigation__link\">\n            <div className=\"navigation__link-text\">\n              Info\n            </div>\n          </Link>\n        </div>\n        <NavigationSearch></NavigationSearch>\n      </div>  \n    </div>\n  )\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport { HashLink } from 'react-router-hash-link'\nimport { useLocation } from 'react-router-dom'\n\nconst classNames = require(\"classnames\")\n\nexport const Menu = () => {\n  const location = useLocation()\n\n  return (\n    <div id=\"menu\" className={classNames(\"menu\", {\"menu--active\": location.hash === \"#menu\"})}>\n      <div className=\"navigation\">\n        <div className=\"navigation__content\">\n          <HashLink\n            smooth to=\"#\"\n            className=\"menu__close-button\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft}/>\n          </HashLink>\n        </div>\n      </div>\n      <div className=\"container\">\n        <h1 className=\"menu__title\">\n          Menu\n        </h1>\n        <ul className=\"menu__main\">\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/\">\n              home\n            </HashLink>\n          </li>\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/info\">\n              info\n            </HashLink>\n          </li>\n          <li className=\"menu__main-item\">\n            <a className=\"menu__link\" href=\"#info\">\n              adsadfs\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nexport const Info = () => {  \n\n  return (\n    <div className=\"info page\">\n      <div className=\"container\">\n        <div className=\"info__param\">\n          <h1 className=\"info__title\">\n            API:\n          </h1>\n          <a href=\"https://www.themoviedb.org/\">\n            <div className=\"info__api\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}","import { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { MovieCard } from '../components/MovieCard';\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { getMoviesByYear } from '../components/api'\nimport debounce from 'lodash.debounce';\n\nconst classNames = require(\"classnames\");\n\nexport const Home = () => {\n  const [movieOnPoster, setMovieOnPoster] = useState([]);\n  const [isActive, setActive] = useState(false);\n  const [selectedMovieId, selectMovieId] = useState(0)\n  const moviePicture = new Image(1180, 590);\n  moviePicture.src = `https://image.tmdb.org/t/p/original/${movieOnPoster[selectedMovieId]?.backdrop_path}`\n  moviePicture.onload = () => setTimeout(\n    () => setActive(true), 1000);\n\n  moviePicture.onloadstart = () => setActive(false)\n    \n\n  const nextMovie = () => {\n    if (selectedMovieId === movieOnPoster.length - 1) {\n      selectMovieId(0);\n\n      return\n    }\n\n    selectMovieId(selectedMovieId + 1);\n  }\n\n  const nextMovieWithDebounce = useCallback(debounce(nextMovie, 10000), [selectedMovieId])\n\n  const prevMovie = () => {\n    if (selectedMovieId === 0) {\n      selectMovieId(movieOnPoster.length - 1);\n\n      return\n    }\n\n    selectMovieId(selectedMovieId - 1);\n  }\n\n  useEffect(() => {\n    getMoviesByYear(2021).then((response) => setMovieOnPoster(response.reverse() || [{}]))\n  }, [])\n\n\n  useEffect(() => {\n    nextMovieWithDebounce();\n\n    return nextMovieWithDebounce.cancel;\n  }, [selectedMovieId])\n\n  return (\n    <div className=\"page home\">\n      <div className=\"container\">\n        <h1 className=\"page__title\">\n          Home\n        </h1>\n        \n        <section className=\"page__section\">\n          <div className=\"poster\">\n            <div onClick={prevMovie} className=\"poster__arrow poster__arrow--left\"><FontAwesomeIcon icon={faChevronLeft}/></div>\n            <img\n              src={moviePicture.src}\n              className={classNames(\"poster__img\", {\"poster__img--active\": isActive})}\n            ></img>\n            <h1 className=\"poster__title\">\n              {movieOnPoster[selectedMovieId]?.title}\n            </h1>\n            <div className={classNames(\"poster__timer\", {})}></div>\n            <div onClick={nextMovie} className=\"poster__arrow poster__arrow--right\"><FontAwesomeIcon icon={faChevronRight}/></div>\n          </div>\n        </section>\n\n        <section className=\"page__section\">\n          <div className=\"movies-slider\">\n            {movieOnPoster.map((movie) => {\n              <MovieCard movie={movie}/>\n            })}\n          </div>\n        </section>\n      </div>\n    </div>\n  )\n}","import './styles/App.scss';\nimport {Navigation} from './components/Navigation'\nimport { Menu } from './components/Menu';\nimport {getMoviesByYear} from './components/api'\nimport { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom'\nimport { Info } from './pages/Info'\nimport { Home } from './pages/Home'\n\nfunction App() {\n  const [moviesList, setMoviesList] = useState([]);\n\n  useEffect(() => {\n    getMoviesByYear(\"2021\").then((data) => setMoviesList(data));\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Navigation/>\n\n      <Route path=\"/\" exact>\n        <Home/>\n      </Route>\n      <Route path=\"/info\">\n        <Info/>\n      </Route>\n      \n      <Menu />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/watchlist/\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}