{"version":3,"sources":["components/translate.js","components/api.js","redux/types.jsx","redux/actions.jsx","components/Menu.jsx","components/Picture.jsx","components/PersonCard.jsx","components/AddToWatchListButton.jsx","components/MarkAsFavoriteButton.jsx","components/AddToListButton.jsx","components/MovieCard.jsx","components/MoviesSlider.jsx","components/Review.jsx","pages/MoviePage.jsx","pages/Info.jsx","components/Poster.jsx","pages/Home.jsx","pages/CollectionPage.jsx","pages/PersonPage.jsx","components/SearchPageCheckbox.jsx","components/FilterVisibilityToggler.jsx","pages/SearchPage.jsx","pages/LoginWindow.jsx","components/NavigationSearch.jsx","components/NavigationDropdown.jsx","components/Navigation.jsx","components/WatchlistTab.jsx","components/WatchlistElement.jsx","components/WatchlistList.jsx","pages/WatchlistPage.jsx","components/FavoritesTab.jsx","components/FavoritesListElement.jsx","components/FavortiesList.jsx","pages/FavoritesPage.jsx","components/DeleteMovieFromList.jsx","components/ListElement.jsx","components/ListSelector.jsx","components/CreateListButton.jsx","components/AddMoviesToListWindow.jsx","components/AddMoviesToList.jsx","pages/ListsPage.jsx","pages/ProfilePage.jsx","components/ConfirmationWindow.jsx","App.jsx","reportWebVitals.js","redux/sessionReducer.jsx","redux/rootReducer.jsx","index.js"],"names":["language","localStorage","getItem","translate","options","BASE_URL","api_key","checkItemStatus","media_id","session_id","fetch","then","response","json","createList","name","description","headers","method","body","JSON","stringify","removeMovieFromList","list_id","addMovieToList","resp","console","log","addToWatchlist","account_id","media_type","watchlist","getWatchlist","res","results","map","movie","title","getFavorites","getTrending","getAccInfo","sid","getPerson","id","getMoviesByTitle","mediaType","data","getGenres","genres","getMovieImg","img","w500","getPersonImg","SET_SESSION_ID","UPDATE_ACCINFO","UPDATE_WATCHLIST","UPDATE_FAVORITES","CLEAN_ACCINFO","CLEAN_WATCHLIST","CLEAN_FAVORITES","UPDATE_LISTS","CHANGE_LANGUAGE","setSessionId","setItem","type","payload","updateAccInfo","dispatch","iso_639_1","cleanAccInfo","updateWatchlist","account","tv","updateFavoritesList","updateLists","getLists","changeLanguage","classNames","require","connect","state","session","location","useLocation","useState","firstload","setFirstLoad","useEffect","window","reload","className","hash","to","onClick","Picture","picture_path","animation","useRef","lottieAnim","setLottieAnim","Lottie","loadAnimation","container","current","animationData","avatar","moviePosterPlug","loop","autoplay","onMouseEnter","play","onMouseLeave","stop","src","alt","ref","PersonCard","person","profile_path","renderer","hover","avatarAnim","onMouseOver","job","character","accInfo","some","active","setActive","theFirstPlay","setTheFirstPlay","lottie","parse","addButton","setSpeed","playSegments","favorites","favorite","markAsFavorite","lists","itemStatus","setItemStatus","toBeAdded","toBeRemoved","changingList","setChangingList","createNewActive","setNewActive","newListData","setNewListData","doesMovieBelongToList","addToListLottie","AnimatePresence","motion","div","initial","opacity","scale","translateX","translateY","animate","exit","transition","duration","onSubmit","event","placeholder","value","onChange","target","list","li","transitionDelay","whileTap","backgroundColor","filter","rotateZ","rotateX","rotateY","style","width","height","objectFit","last","history","useHistory","push","poster_path","backdrop_path","genre_ids","genreId","find","stopPropagation","MoviesSlider","moviesList","peopleList","slider","useInView","inView","useAnimation","start","scaleX","length","scrollBy","left","clientWidth","behavior","icon","faChevronLeft","index","faChevronRight","Review","review","author_details","avatar_path","content","Date","created_at","toLocaleString","year","month","match","useRouteMatch","cast","setCast","trailer","setTrailer","crew","setCrew","setMovie","similar","setSimilar","reviews","setReviews","params","mediaId","movieType","key","getCrew","reverse","getCredits","getMoviesById","el","getSimilar","getReviews","vote_average","overview","belongs_to_collection","frameBorder","allow","allowFullScreen","Info","href","SwiperCore","use","Autoplay","Pagination","Navigation","EffectCoverflow","Parallax","Poster","selectedMovieId","selectMovieId","Image","nextMovieWithDebounce","useCallback","debounce","cancel","modules","A11y","spaceBetween","slidesPerView","navigation","pagination","clickable","delay","disableOnInteraction","onSwiper","swiper","setMoviesOnPoster","trending","setTrending","result","username","CollectionPage","collection","setCollection","collectionId","parts","part","e","PersonPage","credits","setCredits","setPerson","personId","known_for_department","birthday","deathday","biography","Object","entries","reduce","prev","cur","filtered","full","sort","a","b","SearchPageCheckbox","text","searchParams","URLSearchParams","search","isOpened","open","get","split","optionId","delete","set","toString","cencelOption","selectNewOption","SearchPage","setGenres","query","setQuery","selectedMediaType","selectMediaType","resultArr","setResultArr","applyQuery","trim","append","checked","htmlFor","filteredByTitle","selectedGenres","slice","every","genre","cleanWatchlist","password","userData","setUserData","loading","setLoading","isLogged","setLogged","err","setErr","action","tockenRes","token","request_token","createSession","success","status_message","deleteSession","background","speed","margin","onAnimationEnd","NavigationSearch","isActive","setResults","setText","input","onSearch","onBlur","focus","faSearch","ActiveLine","layoutId","right","bottom","position","menuAnimation","avatarAnimation","languageAnim","scroll","scrollIntoView","faBars","AnimateSharedLayout","pathname","onHoverStart","onHoverEnd","tmdb","WatchlistTab","titleInUrl","quality","folder","WatchlistElement","threshold","WatchlistList","Math","random","FavoritesTab","FavoritesListElement","FavortiesList","deleted","setDeleted","isPressed","press","deleteButton","onMouseDown","onMouseUp","media","deleteLottie","heigth","ListSelector","listId","transformOrigin","fontSize","translateDuration","includes","addList","AddMoviesToListSearchResultWithConnect","scaleY","AddMoviesToListWindow","addMoviesToList","DeleteOrClearTheListButtonWithRedux","func","deleteList","clearList","selectedList","selectList","setTitleInputValue","items","display","rotate","ConfirmationWindow","App","path","exact","FavoritesPage","ProfilePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","createHashHistory","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.c4410692.chunk.js","sourcesContent":["const language = localStorage.getItem('language')\n\nexport const translate = (options) => (options[language || \"en\"] )\n","import { store } from \"..\";\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst api_key = \"a1cacae9e097c731c0046cf30fa3b749\";\n\nconst language = localStorage.getItem('language')\n\nexport const checkItemStatus = (media_id, session_id) => fetch(\n    `${BASE_URL}/movie/${media_id}/lists?api_key=${api_key}&session_id=${session_id}&language=${language}`,\n).then((response) => response.json())\n\nexport const createList = (name, description, session_id) => fetch(\n    `${BASE_URL}list?api_key=${api_key}&session_id=${session_id}`,\n    {\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n        },\n        method: 'POST',\n        body: JSON.stringify({\n            name,\n            description,\n            // language,\n        })\n    }    \n)\n\nexport const removeMovieFromList = (list_id, media_id, session_id) => fetch(\n    `${BASE_URL}list/${list_id}/remove_item?api_key=${api_key}&session_id=${session_id}`,\n    {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify({\n            media_id\n        })\n    }    \n)\n\nexport const addMovieToList = (list_id, media_id, session_id) => fetch(\n    `${BASE_URL}list/${list_id}/add_item?api_key=${api_key}&session_id=${session_id}`,\n    {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify({\n            media_id\n        })\n    }    \n).then((resp) => console.log(resp))\n\nexport const deleteList = (list_id, session_id) => fetch(\n    `${BASE_URL}list/${list_id}?api_key=${api_key}&session_id=${session_id}`,\n    {\n        method: 'DELETE',\n    }    \n)\nexport const clearList = (list_id, session_id) => fetch(\n    `${BASE_URL}list/${list_id}/clear?api_key=${api_key}&session_id=${session_id}&confirm=${true}`,\n    {\n        method: 'POST',\n    }    \n)\n\nexport const getLists = (session_id, account_id) => fetch(`${BASE_URL}account/${account_id}/lists?api_key=${api_key}&session_id=${session_id}&language=${language}&include_image_language=${language},null`)\n    .then((res) => res.json())\n    .then((res) => res.results)\n\nexport const getCreatedList = (list_id) => fetch(`${BASE_URL}list/${list_id}?api_key=${api_key}&language=${language}&include_image_language=${language},null`).then((res) => res.json())\n\nexport const getMoviesByYear = async (year, type = \"movie\") => {\n    if(type === \"multi\") {\n        return fetch(`${BASE_URL}discover/movie?api_key=${api_key}&language=${language}&include_image_language=${language},null&year=${year}`)\n            .then(response => response.json())\n            .then(data => data.results.map((el) => ({...el, media_type: \"movie\"})))\n            .then((result) => getMoviesByYear(\"2021\", 'tv').then((tvResult) => [...result, ...tvResult.map((el) => ({...el, media_type: \"tv\", title: el.name}))]))\n    }\n\n    return fetch(`${BASE_URL}discover/${type}?year=${year}&api_key=${api_key}`)\n        .then(response => response.json())\n        .then(data => data.results.map((el) => ({...el, media_type: type, title: el.name || el.title})))\n}\n\nexport const createToken = () => fetch(`${BASE_URL}/authentication/token/new?api_key=${api_key}`)\n    .then(response => response.json())\n\nexport const createSessionWithLogin = (username, password, token) => fetch(\n        `${BASE_URL}authentication/token/validate_with_login?api_key=${api_key}`,\n        {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body:  JSON.stringify({\n                username,\n                password,\n                request_token: token\n            })\n        }\n    )\n    .then((res) => res.json())\n\nexport const createSession = (token) => fetch(\n    `${BASE_URL}authentication/session/new?api_key=${api_key}`,\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        method: 'POST',\n        body:  JSON.stringify({\n            request_token: token\n        })\n    }\n)\n.then((res) => res.json())\n\nexport const deleteSession = (session_id) => fetch(\n    `${BASE_URL}authentication/session?api_key=${api_key}`,\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        method: 'DELETE',\n        body:  JSON.stringify({\n            session_id\n        })\n    }\n)\n\nexport const addToWatchlist = ({session_id, account_id, media_type, media_id, watchlist}) => {\n    return fetch(\n    `${BASE_URL}account/${account_id}/watchlist?api_key=${api_key}&session_id=${session_id}`,\n    {\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Accept': 'application/json'\n        },\n        method: 'POST',\n        body:  JSON.stringify({\n            media_type,\n            media_id,\n            watchlist,\n        })\n    })\n}\n\nexport const markAsFavorite = ({session_id, account_id, media_type, media_id, favorite}) => {\n    return fetch(\n    `${BASE_URL}account/${account_id}/favorite?api_key=${api_key}&session_id=${session_id}`,\n    {\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Accept': 'application/json'\n        },\n        method: 'POST',\n        body:  JSON.stringify({\n            media_type,\n            media_id,\n            favorite,\n        })\n    })\n}\n\nexport const getWatchlist = ({session_id, account_id, media_type}) => fetch(\n    `${BASE_URL}account/${account_id}/watchlist/${media_type === 'movie' ? 'movies' : 'tv'}?api_key=${api_key}&session_id=${session_id}&language=${language}&include_image_language=${language},null`\n)\n    .then((res) => res.json())\n    .then((res) => res.results.map((movie) => ({...movie, title: movie.title || movie.name})))\n\nexport const getFavorites = ({session_id, account_id, media_type}) => fetch(\n    `${BASE_URL}account/${account_id}/favorite/${media_type === 'movie' ? 'movies' : 'tv'}?api_key=${api_key}&session_id=${session_id}&language=${language}&include_image_language=${language},null`\n)\n    .then((res) => res.json())\n    .then((res) => res.results.map((movie) => ({...movie, title: movie.title || movie.name})))\n\nexport const getTrending = () => fetch(\n    `${BASE_URL}trending/all/day?api_key=${api_key}&language=${language}&include_image_language=${language},null`\n)\n    .then((res) => res.json())\n    .then((res) => res.results.map((movie) => ({...movie, title: movie.title || movie.name})))\n\nexport const getAccInfo = (sid) => fetch(`${BASE_URL}account?api_key=${api_key}&session_id=${sid}&language=${language}`)\n    .then(response => response.json())\n\nexport const getCredits = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/credits?api_key=${api_key}&language=${language}`)\n    .then(response => {\n        console.log(`${BASE_URL}${movieType}/${id}/credits?api_key=${api_key}&language=${language}`)\n        return response.json()\n    })\n    .then(data => data.cast)\n\nexport const getTrailer = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/videos?api_key=${api_key}&language=${language}`)\n    .then(response => response.json())\n    .then(data => data.results)\n\nexport const getCrew = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/credits?api_key=${api_key}&language=${language}`)\n    .then(response => response.json())\n    .then(data => data.crew)\n\nexport const getPersonsCredits = (id) => fetch(`${BASE_URL}person/${id}/combined_credits?api_key=${api_key}&language=${language}&include_image_language=${language},null`)\n    .then(response => response.json())\n    .then(data => data)\n\nexport const getPerson = (id) => fetch(`${BASE_URL}person/${id}?api_key=${api_key}&language=${language}`)\n    .then(response => response.json())\n\nexport const getPeopleArr = (idArr) => {\n    const resultArr = idArr.map(async (id) => {\n        const response = await fetch(`${BASE_URL}person/${id}?api_key=${api_key}&language=${language}`)\n        const result = response.json();\n        return result;\n    })\n\n    return resultArr;\n}\n\nexport const getReviews = (id, mediaType) => fetch(`${BASE_URL}${mediaType}/${id}/reviews?api_key=${api_key}&language=${language}`)\n    .then(response => response.json())\n    .then(({results}) => results)\n\nexport const findPerson = (query) => fetch(`${BASE_URL}search/person?api_key=${api_key}&query=${query}&language=${language}`)\n    .then(response => response.json())\n    .then(({results}) => results)\n\nexport const getMoviesByTitle = (title, mediaType = 'multi') => fetch(`${BASE_URL}search/${mediaType}?query=${title}&api_key=${api_key}&language=${language}&include_image_language=${language},null`)\n    .then(response => response.json())\n    .then(data => data.results?.map((movie) => ({...movie, title: movie.title || movie.name})))\n\nexport const getMoviesById = (id, media_type) => fetch(`${BASE_URL}${media_type}/${id}?api_key=${api_key}&language=${language}&include_image_language=${language},null`)\n    .then(response => response.json())\n    .then(response => {\n        console.log(response)\n        return ({...response, media_type, title: response.title || response.name})\n    })\n\nexport const discoverMedia = ({ with_people, media_type = 'tv'}) => {\n    return fetch(`${BASE_URL}discover/${media_type}?api_key=${api_key}${with_people ?`&with_people=${with_people}` : ''}&language=${language}&include_image_language=${language},null`)\n    .then(response => response.json())\n    .then(response => response.results)\n}\n\nexport const getGenres = () => fetch(`${BASE_URL}genre/movie/list?api_key=${api_key}&language=${language}`)\n    .then(response => response.json())\n    .then(response => response.genres)\n\nexport const getSimilar = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/similar?api_key=${api_key}&language=${language}&include_image_language=${language},null`)\n    .then(response => response.json())\n    .then(data => data.results.map((el) => ({...el, media_type: movieType, title: el.title || el.name})))\n\nexport const getCollection = (id) => fetch(`${BASE_URL}collection/${id}?api_key=${api_key}&language=${language}&include_image_language=${language},null`)\n    .then(response => response.json())\n\nexport const getMovieImg = (img, w500 = false) => `https://image.tmdb.org/t/p/${w500 ? \"w500\" : 'original'}/${img}`\n\nexport const getPersonImg = (img, w500 = false) => img ? `https://image.tmdb.org/t/p/${w500 ? \"w500\" : 'original'}/${img}` : 'guestAvatar.png'\n","export const SET_SESSION_ID = \"SESSION/SET_ID\"\nexport const UPDATE_ACCINFO = \"SESSION/UPDATE_ACCINFO\"\nexport const UPDATE_WATCHLIST = \"SESSION/UPDATE_WATCHLIST\"\nexport const UPDATE_FAVORITES = \"SESSION/UPDATE_FAVORITES\"\nexport const GET_WATCHLIST = \"SESSION/GET_WATCHLIST\"\nexport const CLEAN_ACCINFO = \"SESSION/CLEAN_ACCINFO\"\nexport const CLEAN_WATCHLIST = \"SESSION/CLEAN_WATCHLIST\"\nexport const CLEAN_FAVORITES = \"SESSION/CLEAN_FAVORITES\"\n\nexport const UPDATE_LISTS = \"SESSION/UPDATE_LISTS\"\nexport const ADD_TO_LIST = \"SESSION/ADD_TO_LIST\"\nexport const REMOVE_FROM_LIST = \"SESSION/REMOVE_FROM_LIST\"\nexport const CREATE_LIST = \"SESSION/CREATE_LIST\"\nexport const DELETE_LIST = \"SESSION/CREATE_LIST\"\n\nexport const CHANGE_LANGUAGE = \"SESSION/CHANGE_LANGUAGE\"\n","import { getAccInfo, getFavorites, getLists, getMoviesById, getWatchlist } from \"../components/api\"\nimport { CHANGE_LANGUAGE, CLEAN_ACCINFO, CLEAN_FAVORITES, CLEAN_WATCHLIST, GET_WATCHLIST, SET_SESSION_ID, UPDATE_ACCINFO, UPDATE_FAVORITES, UPDATE_LISTS, UPDATE_WATCHLIST } from \"./types\"\n\nexport const setSessionId = (session_id) => {\n  localStorage.setItem('session', session_id)\n  return {\n    type: SET_SESSION_ID,\n    payload: session_id\n  }\n}\n\nexport const updateAccInfo = (session_id) => {\n  console.log('res.iso_639_1')\n  return dispatch => {\n    getAccInfo(session_id).then((res) => {\n      localStorage.setItem('accInfo', JSON.stringify(res))\n      dispatch({\n        type: UPDATE_ACCINFO,\n        payload: res,\n        language: res.iso_639_1,\n      })\n    })\n  }\n}\n\nexport const cleanAccInfo = () => {\n  localStorage.setItem('accInfo', '{}')\n  return ({type: CLEAN_ACCINFO})\n}\n\nexport const cleanWatchlist = () => {\n  localStorage.setItem('watchlist', '{}')\n  return ({type: CLEAN_WATCHLIST})\n}\n\nexport const updateWatchlist = (session_id) => {\n  return dispatch => {\n    getAccInfo(session_id).then((account) => {\n      getWatchlist({session_id, account_id: account.id, media_type: 'tv'}).then((res) => {\n        return res\n      }).then((res) => getWatchlist({session_id,  account_id: account.id, media_type: 'movie'}).then((response) => {\n        localStorage.setItem('watchlist', JSON.stringify({movie: response, tv: res}))\n        return (dispatch({\n          type: UPDATE_WATCHLIST,\n          payload: {movie: response, tv: res},\n        }))\n      }))\n    })\n  }\n}\n\nexport const updateFavoritesList = (session_id) => {\n  return dispatch => {\n    getAccInfo(session_id).then((account) => {\n      getFavorites({session_id, account_id: account.id, media_type: 'tv'}).then((res) => {\n        return res\n      }).then((res) => getFavorites({session_id,  account_id: account.id, media_type: 'movie'}).then((response) => {\n        localStorage.setItem('favorites', JSON.stringify({movie: response, tv: res}))\n        return (dispatch({\n          type: UPDATE_FAVORITES,\n          payload: {movie: response, tv: res},\n        }))\n      }))\n    })\n  }\n}\n\nexport const updateLists = (session_id) => {\n  return dispatch => {\n    getAccInfo(session_id).then((account) => {\n      getLists(session_id, account.id).then((res) => {\n        localStorage.setItem('lists', JSON.stringify(res))\n        return (dispatch({\n          type: UPDATE_LISTS,\n          payload: res,\n        }))\n      })\n    })\n  }\n}\n\nexport const cleanFavoritesList = () => {\n  localStorage.setItem('favorites', '{}')\n  return ({type: CLEAN_FAVORITES})\n}\n\nexport const changeLanguage = (language) => {\n  localStorage.setItem('language', language)\n  return ({type: CHANGE_LANGUAGE, payload: language})\n}","import React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport { HashLink } from 'react-router-hash-link'\nimport { useLocation } from 'react-router-dom'\nimport { motion } from 'framer-motion';\nimport { translate } from './translate';\nimport { changeLanguage } from '../redux/actions';\nimport { connect } from 'react-redux';\n\nconst classNames = require(\"classnames\")\n\nconst Menu = ({language}) => {\n  const location = useLocation()\n  const [firstload, setFirstLoad] = useState(true);\n\n  useEffect(() => {\n    console.log('changed')\n    if(!firstload) {\n      window.location.reload()\n    }\n\n    setFirstLoad(false)\n  }, [language]);\n\n  return (\n    <div id=\"menu\" className={classNames(\"menu\", {\"menu--active\": location.hash === \"#menu\"})}>\n    \n      {/* <div className=\"navigation\">\n        <div className=\"navigation__content\">\n          <HashLink\n            smooth to=\"#\"\n            className=\"menu__close-button\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft}/>\n          </HashLink>\n        </div>\n      </div> */}\n      <div className=\"container\">\n        <h1 className=\"menu__title\">\n          Menu\n        </h1>\n        <ul className=\"menu__main\">\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/\">\n              home\n            </HashLink>\n          </li>\n          <div className=\"menu__section\">\n            <div className=\"menu__section-title\">lists</div>\n            <li className=\"menu__main-item\">\n              <HashLink className=\"menu__link\" to=\"/watchlist/tv\">\n                watchlist\n              </HashLink>\n            </li>\n            <li className=\"menu__main-item\">\n              <HashLink className=\"menu__link\" to=\"/favorites/tv\">\n                favorites\n              </HashLink>\n            </li>\n            <li className=\"menu__main-item\">\n              <HashLink className=\"menu__link\" to=\"/lists\">\n                lists\n              </HashLink>\n            </li>\n          </div>\n          <div className=\"menu__section\">\n            <div className=\"menu__section-title\">account</div>\n            <HashLink to='/profile' className=\"menu__link\">\n              {translate({\n                'en': \"profile\",\n                \"uk\": 'профіль'\n              })}\n            </HashLink>\n            <HashLink to='#login'className=\"menu__link\">\n              {translate({\n                'en': \"log out\",\n                \"uk\": 'вийти'\n              })}\n            </HashLink>\n          </div>\n          <div className=\"menu__section\">\n            <div\n              onClick={() => {\n                changeLanguage('en')\n                window.location.reload()\n              }} className=\"menu__link\">\n              english {language === 'en' && \"✓\"}\n            </div>\n            <div onClick={() => {\n              changeLanguage('uk')\n              window.location.reload()\n            }}className=\"menu__link\">\n              українська {language === 'uk' && \"✓\"}\n            </div>\n          </div>\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/info\">\n              info\n            </HashLink>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({language: state.session.language}))(Menu)\n","import Lottie from 'lottie-web';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { getMovieImg } from './api';\nimport moviePosterPlug from '../lottie/moviePosterPlug.json'\nimport avatar from '../lottie/avatar.json'\n\nexport const Picture = ({picture_path, w500 = false, mediaType}) => {\n  const animation = useRef(null)\n  const [lottieAnim, setLottieAnim] = useState(null);\n\n  useEffect(() => {\n    setLottieAnim(Lottie.loadAnimation({\n      container: animation.current,\n      animationData: mediaType === 'person' ? avatar : moviePosterPlug,\n      loop: true,\n      autoplay: false,\n    }))\n  }, [])\n\n  return (\n    <div\n      onMouseEnter={() => lottieAnim?.play()}\n      onMouseLeave={() => lottieAnim?.stop()}\n      className='picture'\n    >\n      {picture_path\n        ?\n          <img className={'picture__img'} src={getMovieImg(picture_path, w500)} alt=\"\" />\n        :\n          <div className={'picture__img'} ref={animation}/>\n      }\n    </div>\n  )\n}\n","import Lottie from 'lottie-web';\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { getMovieImg } from './api'\nimport avatarAnim from '../lottie/avatar.json'\nimport { Picture } from './Picture';\n\nconst classNames = require(\"classnames\");\n\nexport const PersonCard = ({person}) => {\n  const avatar = useRef({})\n  const [lottieAnim, setLottieAnim] = useState(null)\n\n  useEffect(() => {\n    if(!person.profile_path) {\n      setLottieAnim(Lottie.loadAnimation({\n        container: avatar.current,\n        renderer: 'svg',\n        loop: true,\n        autoplay: false,\n        hover: false,\n        \n        animationData: avatarAnim\n      }))\n    }\n  }, [])\n  return (\n    <Link\n      to={`/person/${person.id}`}\n      onMouseOver={() => lottieAnim?.play()}\n      onMouseLeave={() => lottieAnim?.stop()}\n      className={classNames(\"person-card\")}\n    >\n      <Picture mediaType=\"person\" picture_path={person.profile_path} w500/>\n      <div className=\"person-card__job\">\n        {person.job || person.character}\n      </div>\n      <div className=\"person-card__name\">\n        {person.name}\n      </div>\n    </Link>\n  )\n}","import React, { useEffect, useRef, useState } from 'react'\nimport addButton from '../lottie/addButton.json'\nimport lottie from 'lottie-web';\nimport { connect } from 'react-redux';\nimport { addToWatchlist, getWatchlist } from './api';\nimport { updateWatchlist } from '../redux/actions';\nimport { Link } from 'react-router-dom';\n\nconst classNames = require('classnames')\n\nconst AddToWatchListButton = ({session_id, accInfo, media_id, media_type, watchlist, updateWatchlist}) => {\n  const [active, setActive] = useState(!watchlist[media_type]?.some(({id}) => +media_id === id));\n  const [lottieAnim, setLottieAnim] = useState({})\n  const animation = useRef(null)\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\n\n  useEffect(() => {\n    setLottieAnim(lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: JSON.parse(JSON.stringify(addButton))\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim?.setSpeed(2.5)\n    }\n  }, [])\n  useEffect(() => {\n    if(lottieAnim.playSegments && theFirstPlay) {\n      if(active) {\n        console.log('s')\n        lottieAnim?.playSegments([194, 195], true)\n      } else {\n        console.log('b')\n        lottieAnim?.playSegments([115, 116], true)\n      }\n      setTheFirstPlay(false)\n    }\n  }, [lottieAnim])\n\n  useEffect(() => {\n    if(lottieAnim.playSegments) {\n      if(active) {\n        lottieAnim?.playSegments([141, 195], true)\n      } else {\n        lottieAnim?.playSegments([46, 116], true)\n      }\n    }\n  }, [active])\n\n  return (\n    <div\n      onClick={() => {\n        setActive(!active)\n        addToWatchlist({session_id, account_id: accInfo.id, media_type, media_id, watchlist: active})\n        .then(() => {\n          updateWatchlist(session_id)\n        })\n      }}\n      className=\"addToWatchListButton\"\n      ref={animation}\n    >\n    </div>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    session_id: state.session.session,\n    accInfo: state.session.accInfo,\n    watchlist: state.session.watchlist\n  }),\n  {updateWatchlist}\n)(AddToWatchListButton)\n","import React, { useEffect, useRef, useState } from 'react'\nimport favorite from '../lottie/favorite.json'\nimport lottie from 'lottie-web';\nimport { connect } from 'react-redux';\nimport { markAsFavorite } from './api';\nimport { updateFavoritesList } from '../redux/actions';\n\nconst MarkAsFavoriteButton = ({session_id, accInfo, media_id, media_type, favorites, updateFavoritesList}) => {\n  const [active, setActive] = useState(!favorites[media_type]?.some(({id}) => +media_id === id));\n  const [lottieAnim, setLottieAnim] = useState({})\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\n  const animation = useRef(null)\n\n  useEffect(() => {\n    setLottieAnim(lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: JSON.parse(JSON.stringify(favorite)),\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim?.setSpeed(2.5)\n    }\n  }, [])\n\n  useEffect(() => {\n    if(lottieAnim.playSegments && theFirstPlay) {\n      if(active) {\n        lottieAnim.playSegments([0, 1], true)\n      } else {\n        lottieAnim.playSegments([33, 34], true)\n      }\n      setTheFirstPlay(false)\n    }\n  }, [lottieAnim])\n\n  useEffect(() => {\n    if(lottieAnim.playSegments) {\n      if(active) {\n        lottieAnim?.playSegments([0, 1], true)\n      } else {\n        lottieAnim?.playSegments([0, 34], true)\n      }\n    }\n  }, [active])\n\n  return (\n    <div\n      onClick={() => {\n        setActive(!active)\n        markAsFavorite({session_id, account_id: accInfo.id, media_type, media_id, favorite: active})\n          .then(() => {\n            updateFavoritesList(session_id)\n          })\n      }}\n      className=\"mark-as-favorite\"\n      ref={animation}\n    >\n    </div>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    session_id: state.session.session,\n    accInfo: state.session.accInfo,\n    favorites: state.session.favorites\n  }),\n  {updateFavoritesList}\n)(MarkAsFavoriteButton)\n","import React, { useEffect, useRef, useState } from 'react'\nimport addToListLottie from '../lottie/addToListLottie.json'\nimport lottie from 'lottie-web';\nimport { connect } from 'react-redux';\nimport { addMovieToList, checkItemStatus, createList, getLists, removeMovieFromList } from './api';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { updateLists } from '../redux/actions';\n\nconst classNames = require('classnames')\n\nconst AddToListButton = ({session_id, lists, media_id, updateLists}) => {\n  const [active, setActive] = useState(false);\n  const [lottieAnim, setLottieAnim] = useState({})\n  const [itemStatus, setItemStatus] = useState({})\n  const [changingList, setChangingList] = useState({toBeAdded: [], toBeRemoved: []})\n  const animation = useRef(null)\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\n  const [createNewActive, setNewActive] = useState(false);\n  const [newListData, setNewListData] = useState({});\n\n  const setMovieToBeAdded = () => {\n    setChangingList({...changingList, toBeAdded: [...changingList.toBeAdded, media_id]})\n  }\n\n  const setMovieToBeRemoved = () => {\n    setChangingList({...changingList, toBeRemoved: [...changingList.toBeRemoved, media_id]})\n  }\n\n  const deleteMovieFromChanging = () => {\n    setChangingList({\n      ...changingList,\n      toBeAdded:[...changingList.toBeAdded].filter(({id}) => id !== media_id),\n      toBeRemoved: [...changingList.toBeRemoved].filter(({id}) => id !== media_id)\n    })\n  }\n\n  const doesMovieBelongToList = (list_id) => {\n    if(changingList.toBeRemoved.some(({id}) => list_id === id)) {\n      return false;      \n    }\n    if(changingList.toBeAdded.some(({id}) => list_id === id)) {\n      return true\n    }\n    return itemStatus?.some(({id}) => list_id === id)\n  }\n\n  useEffect(() => {\n    setLottieAnim(lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: JSON.parse(JSON.stringify(addToListLottie))\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim?.setSpeed(2.5)\n    }\n  }, [])\n\n  useEffect(() => {\n    checkItemStatus(media_id, session_id).then((response) => {\n      console.log('status', response)\n      setItemStatus(response.results)\n    });\n  }, [lists])\n\n  useEffect(() => {\n    if(lottieAnim.playSegments && theFirstPlay) {\n      if(active) {\n        console.log('s')\n        lottieAnim?.playSegments([79, 125], true)\n      } else {\n        console.log('b')\n        lottieAnim?.playSegments([0, 1], true)\n      }\n      setTheFirstPlay(false)\n    }\n  }, [lottieAnim])\n\n  useEffect(() => {\n    \n  }, [])\n\n  useEffect(() => {\n    \n  }, [active])\n\n  return (\n    <>\n      <div\n        onClick={() => {\n          console.log(lists)\n          if(lottieAnim?.playSegments) {\n            lottieAnim?.playSegments([0, 125], true)\n          }\n          setActive(!active)\n          // addMovieToList(1, media_id, session_id)\n          // .then(() => {\n          //   updateLists(session_id)\n          // })\n        }}\n        className=\"addToWatchListButton\"\n        ref={animation}\n      >\n      </div>\n      <AnimatePresence>\n        {active &&\n          <motion.div\n            initial={{opacity: 0, scale: 0, translateX: '-50%', translateY: '-50%'}}\n            animate={{opacity: 1, scale: 1, translateX: '-50%', translateY: '-50%'}}\n            exit={{opacity: 0, scale: 0, translateX: '-50%', translateY: '-50%'}}\n            transition={{ duration: 0.1}}\n            className=\"action-window\"\n          >\n            <div className=\"action-window__header\">\n              <div className=\"action-window__close-button\" onClick={() => setActive(false)}></div>\n              <a\n                className=\"action-window__create-list-button\"\n                onClick={() => setNewActive(!createNewActive)}\n              >\n                {!createNewActive ? \"create new list\" : '< back'}\n              </a>\n            </div>\n            <div className=\"action-window__content\">\n              <div className=\"action-window__title\">\n                {!createNewActive\n                  ? \"select list\"\n                  : \"create list\"\n                }\n              </div>\n              {createNewActive\n                ?\n                  <motion.div\n                    initial={{opacity: 0, translateX: -100}}\n                    animate={{opacity: 1, translateX: 0}}\n                    transition={{ duration: 0.2}}\n                  >\n                    <form onSubmit={(event) => {\n                      console.log(newListData)\n                      createList(newListData.name, newListData.description, session_id).then(() => {\n                        updateLists(session_id)\n                        setNewActive(false);\n                      })\n                      \n                    }}>\n                      Your custom list name*\n                      <input\n                        placeholder='Movies for my mom'\n                        value={newListData.name}\n                        onChange={(event) => {\n                          setNewListData({...newListData, name: event.target.value})\n                        }}\n                        className=\"action-window__input\"\n                        type=\"text\"\n                      />\n                      Your custom list description*\n                      <input\n                        placeholder='Only those she loves'\n                        value={newListData.description}\n                        onChange={(event) => {\n                          setNewListData({...newListData, description: event.target.value})\n                        }}\n                        className=\"action-window__input\"\n                        type=\"textfield\"\n                      />\n                      <button className=\"action-window__submit-button\" type=\"submit\">Create</button>\n                    </form>\n                  </motion.div>\n                :\n                  <ul className=\"action-window__list\">\n                    {lists.map((list) => (\n                      <motion.li\n                        initial={{translateX: '-100%', opacity: 0, transitionDelay: 0.1}}\n                        animate={{translateX: 0, opacity: 1}}\n                        whileTap={{backgroundColor: 'lightgreen', scale: 1.1}}\n                        onClick={() => {\n                          if(doesMovieBelongToList(list.id)){\n                            setMovieToBeRemoved();\n                            removeMovieFromList(list.id, media_id, session_id)\n                          } else {\n                            setMovieToBeAdded()\n                            addMovieToList(list.id, media_id, session_id)\n                            deleteMovieFromChanging()\n                          }\n\n                          updateLists(session_id)\n                          \n                          checkItemStatus(media_id, session_id).then((response) => {\n                            console.log('status', response)\n                            setItemStatus(response.results)\n                          });\n                          return\n                        }}\n                        key={list.id}\n                        className=\"action-window__list-element\"\n                      >\n                        {list.name}\n                        {doesMovieBelongToList(list.id) &&\n                          <motion.img\n                            initial={{rotateZ: '-45deg', rotateX: '-45deg', rotateY: '-45deg'}}\n                            animate={{rotateZ: 0, rotateX: 0, rotateY: 0}}\n                            style={{width: '25px', height: '25px', objectFit: 'contain'}}\n                            src={'checkmark.png'}\n                            alt=\"added\"\n                          />\n                        }\n                      </motion.li>\n                    ))}\n                  </ul>\n              }\n            </div>\n          </motion.div>\n        }\n      </AnimatePresence>\n    </>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    session_id: state.session.session,\n    accInfo: state.session.accInfo,\n    lists: state.session.lists\n  }),\n  {updateLists}\n)(AddToListButton)\n","import React from 'react'\nimport { getMovieImg } from './api'\nimport { Picture } from './Picture';\nimport AddToWatchListButton from './AddToWatchListButton';\nimport MarkAsFavoriteButton from './MarkAsFavoriteButton';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AddToListButton from './AddToListButton';\n\nconst classNames = require(\"classnames\");\n\nconst MovieCard = ({ last = false, movie, genres}) => {\n  const history = useHistory();\n\n  return (\n    <div\n      className={classNames(\"movie-card\", {\"movie-card--last\": last})}\n      onClick={() => {\n        history.push(`/${movie.media_type}/${movie.id}`)\n        window.location.reload();\n      }}\n    >\n      <div\n        className=\"movie-card__img-container\"\n      >\n        <Picture picture_path={movie?.poster_path} w500/>\n      </div>\n      <div className=\"movie-card__description\">\n        {movie.backdrop_path\n          ?\n            <img className=\"movie-card__description-img\" src={getMovieImg(movie.backdrop_path, true)} alt=\"\" />\n          :\n            ''\n        }\n        <div className=\"movie-card__description-content\">\n          <h1 className=\"movie-card__description-title\">{movie?.title}</h1>\n          <ul className=\"movie-card__description-ganres-list\">\n            {movie.genre_ids?.map((genreId) =>\n              <li key={genreId} className=\"movie-card__description-ganre\">\n                {genres.find(({id}) => genreId === id)?.name}\n              </li>\n            )}\n          </ul>\n          <div onClick={(event) => {event.stopPropagation()}} className=\"movie-card__actions-container\">\n            <AddToWatchListButton media_id={movie.id} media_type={movie.media_type}/>\n            <MarkAsFavoriteButton media_id={movie.id} media_type={movie.media_type}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({genres: state.session.genres}))(MovieCard)\n","import React, { useEffect, useRef, useState } from 'react'\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { PersonCard } from './PersonCard';\nimport MovieCard from './MovieCard';\nimport { motion, useAnimation, useTrnsform, useViewportScroll } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\n\nconst classNames = require('classnames');\n\nexport const MoviesSlider = ({moviesList = [], peopleList = []}) => {\n  const slider = useRef(null);\n  const {ref, inView} = useInView()\n  const animation = useAnimation();\n\n  useEffect(() => {\n    if(inView) {\n      animation.start({\n        scaleX: 1\n      })\n    } else {\n      animation.start({\n        scaleX: 0\n      })\n    }\n  }, [inView])\n\n  return (\n    <motion.div\n      ref={ref}\n      animate={animation}\n      className={classNames(\"movies-slider\", {\"movies-slider--disabled\": [...moviesList, ...peopleList].length === 0})}\n    >\n      <div\n        onClick={() => {\n          slider.current.scrollBy({\n            left: -1 * slider.current.clientWidth * 0.9,\n            behavior: \"smooth\"\n          })\n        }}\n        className={classNames([\"movies-slider__scroll-button\", \"movies-slider__scroll-button--left\", {\"movies-slider--disabled\": moviesList || peopleList}])}\n        >\n        <FontAwesomeIcon icon={faChevronLeft}/>\n      </div>\n      <div\n        ref={slider}\n        className=\"movies-slider__tape\"\n      >\n        <div className=\"movies-slider__content\">\n          {peopleList.map((person) => (\n            <div>\n              <PersonCard key={person.id} person={person} />\n            </div>\n          ))}\n          {!!moviesList ? moviesList?.map((movie, index) => (\n            <div>\n              <MovieCard key={movie.id} last={index === 0} movie={movie} />\n            </div>\n          )) : ''}\n        </div>\n      </div>\n      <div\n        onClick={() => {\n          slider.current.scrollBy({\n            left: slider.current.clientWidth * 0.9,\n            behavior: \"smooth\"\n          })\n        }}\n        className=\"movies-slider__scroll-button movies-slider__scroll-button--right\"\n      >\n        <FontAwesomeIcon icon={faChevronRight}/>\n      </div>\n    </motion.div>\n  )\n}","import React, { useState } from 'react'\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport { getPersonImg } from './api';\n\nconst classNames = require('classnames')\n\nexport const Review = ({review}) => {\n  const [active, setActive] = useState(false);\n  const ref = useRef(null)\n\n  return (\n    <div\n      ref={ref}\n      onClick={() => {\n        setActive(!active)\n      }}\n      id={review.id}\n      className={classNames([\"review\", {'review--active': active}])}\n    >\n      <div className={classNames([\"review__author\", {'review__author--active': active}])}>\n        <img\n          src={getPersonImg(review.author_details.avatar_path)}\n          alt=\"\"\n          className=\"review__author-img\"\n        />\n        <div className=\"review__author-nickname\">\n          {review.author_details.name}\n        </div>\n      </div>\n      <div className={classNames([\"review__content\", {'review__content--active': active}])}>\n        {review.content}\n      </div>\n      <div className=\"review__footer\">\n        {new Date(review.created_at).toLocaleString('default', { year: 'numeric', month: 'long' })}\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\nimport { getCredits, getCrew, getMovieImg, getMoviesById, getReviews, getSimilar, getTrailer } from '../components/api';\nimport {MoviesSlider} from '../components/MoviesSlider'\nimport AddToWatchListButton from '../components/AddToWatchListButton';\n\nimport { motion } from 'framer-motion';\nimport { connect } from 'react-redux';\nimport MarkAsFavoriteButton from '../components/MarkAsFavoriteButton';\nimport { Picture } from '../components/Picture';\nimport AddToListButton from '../components/AddToListButton';\nimport { translate } from '../components/translate';\nimport { Review } from '../components/Review';\n\nconst MoviePage = ({accInfo}) => {\n  console.log('перейшов')\n  const match = useRouteMatch(\"/:mediaType/:mediaId\");\n  const [cast, setCast] = useState([])\n  const [trailer, setTrailer] = useState([])\n  const [crew, setCrew] = useState([])\n  const [movie, setMovie] = useState({});\n  const [similar, setSimilar] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  // const location = useLocation();\n  const mediaType = match.params.mediaType\n  const mediaId = match.params.mediaId\n\n  // console.log(accInfo)\n\n  useEffect(() => {\n    getTrailer(mediaId, mediaType).then((response) => { setTrailer(response[0]?.key) })\n    getCrew(mediaId, mediaType).then((response) => { setCrew(response.reverse()) })\n    getCredits(mediaId, mediaType).then((response) => { setCast(response.reverse()) })\n    getMoviesById(mediaId, mediaType).then((response) => { setMovie(response) })\n    getSimilar(mediaId, mediaType).then((response) => { setSimilar(response.reverse()) })\n    getReviews(mediaId, mediaType).then((response) => { setReviews(response) })\n  }, [mediaId, mediaType])\n\n  useEffect(() => {\n    // window.scrollTo(0, 0);\n  }, [match])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"movie-page\">\n          <section className=\"page__section grid grid--desktop\">\n            <motion.div\n              initial={{opacity: 0, translateX: -100}}\n              animate={{opacity: 1, translateX: 0}}\n              transition={{ duration: 0.5}}\n              className=\"movie-page__poster grid__item--1-4\"\n            >\n              <div className=\"movie-page__poster-img\">\n                <Picture mediaType={mediaType} picture_path={movie.poster_path}/>\n              </div>\n            </motion.div>\n            <div className=\"page__description grid__item--5-12 grid--desktop\">\n              <motion.div\n                initial={{opacity: 0, translateX: -200}}\n                animate={{opacity: 1, translateX: 0}}\n                transition={{ duration: 0.7}}\n                className=\"grid\"\n              >\n                <div key=\"poster\" className=\"grid__item--1-12 movie-page__title\">\n                  {movie?.title}\n                  <div className=\"movie-page__media-type\">{movie.media_type}</div>\n                </div>\n                <div key=\"selected-movie-description\" className=\"movie-page__votes grid__item--1-12\">\n                  rating: <span className=\"movie-page__votes-value\">{movie?.vote_average}</span>\n                </div>\n                <div key=\"selected-movie-overview\" className=\"movie-page__overview grid__item--1-12\">\n                  {movie.overview}\n                </div>\n                <div key=\"selected-movie-genres\" className=\"movie-page__genres-list grid__item-1-12\">\n                  {movie.genres?.map(({name}) =>\n                    <div className=\"movie-page__genre\">\n                      {name}\n                    </div>\n                  )}\n                </div>\n                {movie.belongs_to_collection &&\n                  <div key=\"selected-movie-collection\" className=\"grid__item--1-12\">\n                    collection:\n                    <Link className=\"movie-page__action-title-link\" to={`/collections/${movie.belongs_to_collection.id}`}>\n                      {movie.belongs_to_collection.name}\n                    </Link>\n                  </div>\n                }\n                <div key=\"selected-movie-action-buttons\" className=\"grid__item--1-12\">\n                  <div className=\"movie-page__action\">\n                    {accInfo.id && \n                      <>\n                        <AddToWatchListButton\n                          media_id={mediaId}\n                          media_type={mediaType}\n                        />\n                        <MarkAsFavoriteButton\n                          media_id={mediaId}\n                          media_type={mediaType}\n                        />\n                        {mediaType === 'movie' &&\n                          <AddToListButton\n                            media_id={mediaId}\n                            media_type={mediaType}\n                          />\n                        }\n                      </>\n                    }\n                  </div>\n                </div>\n              </motion.div>\n            </div>\n          </section>\n          <section className=\"page__section\">\n            <div className=\"movie-page__trailer\">\n              <iframe\n                title=\"trailer\"\n                className=\"movie-page__video\"\n                src={`https://www.youtube.com/embed/${trailer}`}\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              />\n            </div>\n          </section>\n          <section className=\"page__section\">\n            <div className=\"reviews-section\">\n              {reviews.length > 0 &&\n                <div className=\"reviews-section__title\">\n                  {translate({\n                    'en': \"Reviews\",\n                    \"uk\": 'Відгуки'\n                  })}\n                </div>\n              }\n                {\n                  reviews.map((review) => (\n                      <Review review={review}/>\n                  ))\n                }\n            </div>\n          </section>\n          <section className=\"page__section\">\n            {cast.length > 0\n              ?\n                <>\n                  <div className=\"page__title\">\n                    {translate({\n                      'en': \"Cast\",\n                      \"uk\": 'Акторський склад'\n                    })}\n                  </div>\n                  <MoviesSlider key=\"cast-slider\" peopleList={cast} />\n                </>\n              : ''\n            }\n          </section>\n          <section className=\"page__section\">\n            {crew.length > 0\n              ?\n                <>\n                  <div className=\"page__title\">\n                    {translate({\n                      'en': \"Crew\",\n                      \"uk\": 'Знімальна група'\n                    })}\n                  </div>\n                  <MoviesSlider key=\"crew-slider\" peopleList={crew} />\n                </>\n              : ''\n            }\n          </section>\n          <section className=\"page__section\">\n            <div className=\"page__title\">\n              {translate({\n                'en': \"Similar\",\n                \"uk\": 'Схоже'\n              })}\n            </div>\n            <MoviesSlider key=\"similar-slider\" moviesList={similar} />\n          </section>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({accInfo: state.session.accInfo}))(MoviePage)","import React from 'react'\n\nexport const Info = () => {  \n\n  return (\n    <div className=\"info page\">\n      <div className=\"container\">\n        <div className=\"info__param\">\n          <h1 className=\"info__title\">\n            API:\n          </h1>\n          <a href=\"https://www.themoviedb.org/\">\n            <div className=\"info__api\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}","import React, {useState, useEffect, useCallback} from 'react'\nimport \"swiper/swiper-bundle.css\";\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Autoplay } from 'swiper';\nimport { EffectCoverflow } from 'swiper';\n\n\nimport { Navigation, Pagination, A11y, Parallax } from 'swiper';\n\nimport debounce from 'lodash.debounce';\nimport { getMovieImg } from './api';\nimport { Link } from 'react-router-dom';\n\nSwiperCore.use([Autoplay, Pagination, Navigation, EffectCoverflow, Parallax]);\n\nexport const Poster = ({moviesList}) => {\n  const [selectedMovieId, selectMovieId] = useState(0)\n  const moviePicture = new Image(1180, 590);\n  moviePicture.src = `https://image.tmdb.org/t/p/original/${moviesList[selectedMovieId]?.backdrop_path}`\n\n  const nextMovie = () => {\n    if (selectedMovieId === moviesList.length - 1) {\n      selectMovieId(0);\n\n      return\n    }\n\n    selectMovieId(selectedMovieId + 1);\n  }\n\n  const nextMovieWithDebounce = useCallback(debounce(nextMovie, 10000), [selectedMovieId])\n\n  useEffect(() => {\n    nextMovieWithDebounce();\n\n    return nextMovieWithDebounce.cancel;\n  }, [selectedMovieId, nextMovieWithDebounce])\n\n  return (\n    <Swiper\n      modules={[Navigation, Pagination, A11y, EffectCoverflow, Parallax]}\n      // effect=\"coverflow\"\n      spaceBetween={200}\n      slidesPerView={1}\n      navigation\n      pagination={{ clickable: true }}\n      loop={true}\n      autoplay={{\n        delay: 5000,\n        disableOnInteraction: false\n      }}\n      onSwiper={(swiper) => console.log(swiper)}\n    >\n        {moviesList?.map((movie) => (\n          <SwiperSlide key={movie.id}>\n            <div className=\"poster\">\n              <Link to={`${movie.media_type}/${movie.id}`}>\n                <img src={getMovieImg(movie.backdrop_path)} className=\"poster__img\" alt=\"\"/>\n                <div className=\"poster__title\">\n                  {movie.title}\n                </div>\n              </Link>\n            </div>\n          </SwiperSlide>\n        ))}\n        <div className=\"prev\"></div>\n        <div className=\"next\"></div>\n      </Swiper>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\nimport { getMoviesByYear, getTrending } from '../components/api'\nimport { MoviesSlider } from '../components/MoviesSlider';\nimport { Poster } from '../components/Poster';\nimport { translate } from '../components/translate';\n\nconst Home = ({accInfo}) => {\n  const [moviesOnPoster, setMoviesOnPoster] = useState([]);\n  const [trending, setTrending] = useState([]);\n\n  useEffect(() => {\n    getTrending()\n      .then((result) => setMoviesOnPoster(result))\n    getTrending()\n      .then((result) => setTrending(result))\n  }, [])\n\n  return (\n    <div className=\"page home\">\n      <div className=\"container\">\n        <h1 className=\"page__title\">\n          {!accInfo?.username\n            ? translate({\n              'en': \"Home\",\n              \"uk\": 'Домашня сторінка'\n            })\n            : `${translate({\n              'en': \"Ні,\",\n              \"uk\": 'Привіт,'\n            })} ${accInfo?.username}!`\n          }\n        </h1>\n        \n        <section className=\"page__section\">\n          <main>\n            <Poster moviesList={trending}/>\n          </main>\n        </section>\n        <section className=\"page__section\">\n          <div className=\"page__title\">\n            {translate({\n              'en': \"Trending\",\n              \"uk\": 'У тренді'\n            })}\n          </div>\n          <MoviesSlider moviesList={trending}/>\n        </section>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session, accInfo: state.session.accInfo}))(Home)\n","import React, { useEffect, useState } from 'react'\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport AddToWatchListButton from '../components/AddToWatchListButton';\nimport { getCollection, getMovieImg } from '../components/api'\nimport MarkAsFavoriteButton from '../components/MarkAsFavoriteButton';\nimport { Picture } from '../components/Picture';\n\nexport const CollectionPage = () => {\n  const match = useRouteMatch('/collections/:collectionId')\n  const history = useHistory();\n  const [collection, setCollection] = useState({})\n\n  useEffect(() => {\n    getCollection(match.params.collectionId).then((response) => setCollection(response))\n  }, [match.params.collectionId])\n  \n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"collections-page grid\">\n          <div className=\"grid grid__item--1-12\">\n            <div className=\"collections-page__poster grid__item--1-3\">\n              <div className=\"collections-page__poster-img\">\n                <Picture picture_path={collection.poster_path} mediaType=\"movie\"/>\n              </div>\n            </div>\n            <div className=\"page__description grid__item--4-12 grid\">\n              <h2 className=\"page__title grid__item--1-12\">{collection.name}</h2>\n              <div className=\"grid__item--1-12\">{collection.overview}</div>\n            </div>\n          </div>\n          {collection?.parts?.map((part) => (\n            <div\n              onClick={() => {\n                history.push(`/movie/${part.id}`)\n              }}\n              className=\"collections-page__part grid grid__item--1-12\"\n            >\n              <div className=\"collections-page__poster grid__item--1-2\">\n                <div className=\"collections-page__poster-img\">\n                  <Picture picture_path={part.poster_path} mediaType=\"movie\"/>\n                </div>\n              </div>\n              <div className=\"page__title grid__item--3-12\">{part.title}</div>\n              <div\n                onClick={(e) => e.stopPropagation()}\n                className=\"collections-page__actions-block\"\n              >\n                <AddToWatchListButton media_id={part.id} media_type=\"movie\"/>\n                <MarkAsFavoriteButton media_id={part.id} media_type=\"movie\"/>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { getPerson, getPersonImg, getPersonsCredits } from '../components/api';\nimport {MoviesSlider} from '../components/MoviesSlider'\nimport { Picture } from '../components/Picture';\n\nexport const PersonPage = () => {\n  const match = useRouteMatch(\"/person/:personId\");\n  const [credits, setCredits] = useState([]);\n  const [person, setPerson] = useState({})\n  const location = useLocation();\n\n  useEffect(() => {\n    getPerson(match.params.personId).then((response) => setPerson(response));\n    getPersonsCredits(match.params.personId).then((response) => setCredits(response));\n  }, [location, match.params.personId])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"person-page grid\">\n          <div className=\"person-page__poster grid__item--1-4\">\n            <Picture mediaType='person' picture_path={person.profile_path}/>\n          </div>\n          <div className=\"grid__item--5-12\">\n            <h1 className=\"person-page__name\">\n              {person.name}\n            </h1>\n            <div className=\"person-page__params\">\n              <div className=\"person-page__param\">\n                <div>\n                  known for\n                </div>\n                <div/>\n                <div>\n                  {person.known_for_department}\n                </div>\n              </div>\n              <div className=\"person-page__param\">\n                <div>\n                  born\n                </div>\n                <div/>\n                <div>\n                  {person.birthday}\n                </div>\n              </div>\n              {person.deathday &&\n                <div className=\"person-page__param\">\n                  <div>\n                    died\n                  </div>\n                  <div/>\n                  <div>\n                    {person.deathday}\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n          <div className=\"person-page__biography grid__item--1-12\">\n            <h2 className=\"person-page__section-title\">\n              Biography\n            </h2>\n            <div className=\"person-page__biography-main\">\n              {person.biography}\n            </div>\n          </div>\n          <div className=\"grid__item--1-12\">\n            <h2 className=\"person-page__section-title\">\n              Acting\n            </h2>\n            <div>\n              <MoviesSlider moviesList={credits.cast} />\n            </div>\n          </div>\n          {\n            Object.entries(\n              credits.crew?.reduce((prev, cur) => ({\n                filtered: {\n                  [cur.job]: prev.full.filter((e) => e.job === cur.job),\n                  ...prev.filtered,\n                },\n                full: prev.full.filter((e) => e.job !== cur.job)\n              }), {full: credits.crew}).filtered || {}\n            ).sort((a, b) => b[1].length - a[1].length).map((movie) => (\n              <div className=\"grid__item--1-12\">\n              <h2 className=\"person-page__section-title\">\n                {movie[0]}\n              </h2>\n              <div>\n                <MoviesSlider moviesList={movie[1]} />\n              </div>\n            </div>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom';\nconst classNames = require('classnames');\n\nexport const SearchPageCheckbox = ({text, list}) => {\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const [isOpened, open] = useState(false);\n\n  const selectNewOption = (id) => {\n    searchParams.set(text, [searchParams.get(text), id])\n    history.push({ search: searchParams.toString() })\n  }\n  \n  const cencelOption = (id) => {\n    const result = searchParams.get(text)?.split(',').filter((optionId) => optionId !== '' && +optionId !== id);\n    console.log('result ', result)\n    if(result.length === 0) {\n      searchParams.delete(text)\n    } else {\n      searchParams.set(text, result)\n    }\n    history.push({ search: searchParams.toString() })\n  }\n\n  return (\n    <div className=\"checkbox\">\n      <div\n        onClick={() => { open(!isOpened) }}\n        className=\"checkbox__options-switcher\"\n      >\n        <div className={classNames(\"checkbox__options-switcher-text\", {\"checkbox__options-switcher-text--active\": isOpened})}>\n          {text}\n        </div>\n      </div>\n      <div className={\"checkbox__options-block\"}>\n        {\n          list.map(({id, name}) => (\n            <div\n              onClick={() => {\n                if(searchParams.get(text)?.split(',').some((optionId) => +optionId === id)) {\n                  cencelOption(id);\n                  return;\n                }\n                selectNewOption(id)\n              }}\n              className={classNames([\"checkbox__option\", {\"checkbox__option--active\": searchParams.get(text)?.split(',').some((optionId) => +optionId === id)}])}\n              key={id}\n            >\n              {name}\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom';\nconst classNames = require('classnames');\n\nexport const FilterVisibilityToggler = ({filter, title}) => {\n  const [isOpened, open] = useState(false);\n\n  return (\n    <div\n      className={\n        classNames([\n          \"search-page__filter-visibility-toggler\",\n          {\"search-page__filter-visibility-toggler--active\": isOpened}\n        ])\n      }\n      \n    >\n      <div\n        className={\n          classNames([\n            \"search-page__filter-visibility-toggler-text\",\n            {\"search-page__filter-visibility-toggler-text--active\": isOpened}\n          ])\n        }\n        onClick={() => open(!isOpened)}\n      >\n        {title}\n      </div>\n      <div\n        className={classNames([\n          \"search-page__filter-visibility-toggler-content\",\n          {\"search-page__filter-visibility-toggler-content--active\": isOpened}\n        ])}\n      >\n        {filter}\n      </div>\n    </div>\n  )\n}\n","import { debounce } from \"lodash\";\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { discoverMedia, getGenres, getMoviesByTitle } from '../components/api';\nimport { SearchPageCheckbox } from '../components/SearchPageCheckbox';\nimport { SearchPageCrewFilter } from '../components/SearchPageCrewFilter';\nimport { FilterVisibilityToggler } from '../components/FilterVisibilityToggler';\nimport Lottie from 'lottie-web';\nimport search from '../lottie/search.json'\nimport { useHistory, useLocation } from 'react-router';\nimport MovieCard from \"../components/MovieCard\";\n\nexport const SearchPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const [genres, setGenres] = useState([]);\n  const animation = useRef(null)\n  const [lottieAnim, setLottieAnim] = useState({})\n  const [query, setQuery] = useState(searchParams.get('with_keywords') || '')\n  const [selectedMediaType, selectMediaType] = useState(searchParams.get('media_type') || '')\n\n  const [resultArr, setResultArr] = useState([])\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n  }, [])\n\n  const applyQuery = useCallback(debounce((value) => {\n    if(value.trim() !== '') {\n      if(!searchParams.get('with_keywords')) {\n        searchParams.append('with_keywords', value);\n      }else {\n        searchParams.set('with_keywords', value);\n      }\n    } else {\n      searchParams.delete('with_keywords');\n    }\n    history.push({search: searchParams.toString()})\n  }, 500), [location]);\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n    setLottieAnim(Lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: search\n    }))\n  }, [])\n  \n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"grid\">\n          <div className=\"search-page__filters-block grid__item--1-4\">\n            <fieldset className=\"search-page__media-type-select-fieldset\">\n              <div className=\"search-page__media-type-select\">\n                <input\n                  type=\"radio\"\n                  id=\"tv\"\n                  name=\"mediaType\"\n                  checked={selectedMediaType === 'tv'}\n                  className=\"search-page__media-type-radio\"\n                  onChange={() => {\n                    searchParams.set('media_type', 'tv')\n                    selectMediaType('tv')\n                    history.push({search: searchParams.toString()})\n                  }}\n                />\n                <label className=\"search-page__media-type-radio-label\" htmlFor=\"tv\"> TV series</label>\n              </div>\n              <div className=\"search-page__media-type-select\">\n                <input\n                  type=\"radio\"\n                  id=\"movie\"\n                  name=\"mediaType\"\n                  checked={selectedMediaType === 'movie'}\n                  className=\"search-page__media-type-radio\"\n                  onChange={() => {\n                    searchParams.set('media_type', 'movie')\n                    selectMediaType('movie')\n                    history.push({search: searchParams.toString()})\n                  }}\n                />\n                <label className=\"search-page__media-type-radio-label\" htmlFor=\"movie\">Movie</label>\n              </div>\n            </fieldset>\n            <div className=\"search-page__filter\">\n            </div>\n            <div className=\"search-page__filter\">\n              <SearchPageCheckbox text=\"genres\" list={genres}/>\n            </div>\n          </div>\n          <div className=\"grid__item--5-12\">\n            <div className=\"search-page__search\">\n              <input\n                value={query}\n                onChange={(event) => {\n                  setQuery(event.target.value)\n                  applyQuery(event.target.value)\n                }}\n                type=\"text\"\n                className=\"search-page__search-input\"\n              />\n              <div\n                onClick={() => {\n                  if(lottieAnim.playSegments) {\n                    lottieAnim.playSegments([0, 21], true)\n                  }\n                    console.log('genres', query.split(' '))\n                    getMoviesByTitle(query, selectedMediaType)\n                      .then((filteredByTitle) => {\n                        const selectedGenres =  searchParams?.get('genres')?.split(',')?.slice(1);\n                        console.log(filteredByTitle, selectedGenres)\n                        if(selectedGenres) {\n                          setResultArr(filteredByTitle?.filter((el) => selectedGenres.slice(1).every((genre) => el.genre_ids.some((id) => +genre === +id))))\n                        } else {\n                          setResultArr(filteredByTitle)\n                        }\n                      })\n\n                    console.log(resultArr)\n                }}\n                ref={animation}\n                className=\"search-page__search-button\"\n              ></div>\n            </div>\n            <div className=\"search-page__results-container\">\n              {resultArr?.map((movie) => (\n                <MovieCard movie={{...movie, media_type: selectedMediaType}} genres={genres}/>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport { createSession, createToken, deleteSession } from '../components/api';\nimport { createSessionWithLogin, getAccInfo } from '../components/api';\nimport { cleanAccInfo, setSessionId, updateAccInfo, cleanWatchlist, updateWatchlist, updateLists } from '../redux/actions';\nimport { motion } from 'framer-motion';\nimport { translate } from '../components/translate';\n\nconst classNames = require('classnames')\n\nconst LoginWindow = ({ session_id, setSessionId, updateAccInfo, cleanAccInfo, cleanWatchlist, updateWatchlist, updateLists}) => {\n  const location = useLocation()\n  const [userData, setUserData] = useState({username: '', password: ''});\n  const [loading, setLoading] = useState(false);\n  const [isLogged, setLogged] = useState(!!session_id)\n  const [err, setErr] = useState('')\n  const history = useHistory({});\n\n  useEffect(() => {\n    setLogged(!!session_id);\n  }, [location.hash])\n\n  return (\n    <motion.div\n      initial={{opacity: 0, translateX: -100}}\n      animate={{opacity: 1, translateX: 0}}\n      transition={{ duration: 0.2}}\n      className={classNames(\"login\", {\"login--active\": location.hash === '#login'})}\n    >\n      <form\n        id=\"login\"\n        action=\"\"\n        className=\"login__container\"\n        onSubmit={(event) => {\n          \n          if(!session_id) {\n            setLoading(true);\n            createToken().then((tockenRes) => {\n              createSessionWithLogin(\n                userData.username,\n                userData.password,\n                tockenRes.request_token,\n              )\n                .then((res) => {\n                  createSession(res.request_token)\n                    .then((response) => {\n                      if(response.success) {\n                        history.push({hash:\"#\"})\n                        setSessionId(response.session_id)\n                        updateLists(response.session_id)\n                        updateAccInfo(response.session_id)\n                        updateWatchlist(response.session_id)\n                        \n                      } else {\n                        setErr(response.status_message)\n                      }\n\n                      setLoading(false)\n                    })\n              })\n            })\n\n            return\n          }\n          deleteSession(session_id)\n          cleanAccInfo()\n          cleanWatchlist()\n          setSessionId('')\n        }}\n      >\n        <div className=\"login__title\">\n          {!isLogged ? translate({\"en\": \"Log in\", \"uk\": \"Увійти\"}) : translate({\"en\": \"Are you sure?\", \"uk\": \"Ви впевнені?\"})}\n        </div>\n        <div className=\"login__err\">\n          {err}\n        </div>\n        {!isLogged\n          ?\n            <>\n              {loading &&\n                <lottie-player\n                  src={'https://assets8.lottiefiles.com/packages/lf20_knpXLX.json'}\n                  background=\"transparent\"\n                  speed=\"2\"\n                  style={{\n                    width: \"100px\",\n                    height: \"100px\",\n                    margin: \"0 auto\",\n                    }} \n                  autoplay\n                  onAnimationEnd={() => console.log('end')}\n                />\n              }\n              {!loading &&\n                <>\n                  <label htmlFor=\"username\" className=\"login__label\">{translate({\"en\": \"Username\", \"uk\": \"Ім'я користувача\"})}</label>\n                  <input\n                    value={userData.username}\n                    onChange={(event) => setUserData({\n                      ...userData,\n                      username: event.target.value\n                    })}\n                    type=\"text\"\n                    id=\"username\"\n                    className=\"login__field\"\n                  />\n                  <label htmlFor=\"password\" className=\"login__label\">{translate({\"en\": \"Password\", \"uk\": \"Пароль\"})}</label>\n                  <input\n                    value={userData.password}\n                    onChange={(event) => setUserData({\n                      ...userData,\n                      password: event.target.value\n                    })}\n                    type=\"password\"\n                    id=\"password\"\n                    className=\"login__field\"\n                  />\n                  <button\n                    onClick={() => setErr('')}\n                    type=\"submit\"\n                    className=\"login__submit-button\"\n                  >\n                    {translate({\n                      'en': \"accept\",\n                      \"uk\": 'прийняти'\n                    })}\n                  </button>\n                </>\n              }\n            </>\n          :\n            <>\n              <button\n                onClick={() => history.push({hash: '#'})}\n                type=\"submit\"\n                className=\"login__log-out-button\"\n              >\n                {translate({\n                  'en': \"Log out\",\n                  \"uk\": 'вийти'\n                })}\n              </button>\n            </>\n        }\n        <a onClick={() => history.push({hash: '#'})} className=\"login__close-button\"></a>\n        {!isLogged &&\n          <span className=\"login__sign-up-field\">\n            {translate({\n              'en': \"Don't have an account?\",\n              \"uk\": 'Не маєте аккаунта?'\n            })} <a href=\"https://www.themoviedb.org/signup\" className=\"login__sign-up-link\">{translate({\n              'en': \"Sign up!\",\n              \"uk\": 'Зареєструйтесь!'\n            })}</a>\n          </span>\n        }\n      </form>\n    </motion.div>\n  )\n}\n\nexport default connect(\n  (state) => ({session_id: state.session.session}),\n  {\n    cleanWatchlist,\n    cleanAccInfo,\n    setSessionId,\n    updateAccInfo,\n    updateWatchlist,\n    updateLists\n  }\n)(LoginWindow)","import React, { useCallback, useRef, useState } from 'react'\nimport \"../styles/blocks/navigation.scss\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport debounce from 'lodash.debounce'\nimport { getMovieImg, getMoviesByTitle } from './api'\nimport { Link } from 'react-router-dom'\nimport { Picture } from './Picture'\n\nconst classNames = require(\"classnames\")\n\nexport const NavigationSearch = () => {\n  const [isActive, setActive] = useState(false);\n  const [results, setResults] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  const input = useRef('')\n\n  const onSearch = useCallback(debounce((title) => {\n    getMoviesByTitle(title).then((data) => setResults((data || []).slice(0, 7)))\n  }, 500), [])\n\n  return (\n    <>\n      <div\n        className={\n          classNames(\n            \"navigation__search\",\n            {\"navigation__search--active\": isActive}\n          )\n        }\n      >\n        <input\n          ref={input}\n          value={text}\n          onChange={(event) => {\n            setText(event.target.value)\n            onSearch(event.target.value)\n          }}\n          onBlur={() => setActive(false)}\n          className={\n            classNames(\n              \"navigation__search-input\",\n              {\"navigation__search-input--active\": isActive}\n            )\n          }\n        >\n        </input>\n        <div\n          onClick={() => {\n            if(isActive === false) {\n              setActive(true)\n              input.current.focus()\n            }else {\n              setActive(false)\n            }\n          }}\n          className={classNames(\"navigation__search-icon\", {\"navigation__search-icon--active\": isActive})}\n        >\n          <FontAwesomeIcon\n            icon={faSearch}\n          />\n        </div>\n        <ul className={classNames(\"navigation__search-results-block\", {\"navigation__search-results-block--active\": (text && isActive)})}>\n          {\n            <>\n              {\n                results.map(result => (\n                  <li key={result.id}>\n                    {\n                      <Link to={`/${result.media_type}/${result.id}`} className=\"navigation__search-result\">\n                        <div className=\"navigation__search-result-img\">\n                          <Picture mediaType={result.media_type} picture_path={result.profile_path || result.poster_path} w500/>\n                        </div>\n                        <h2 className=\"navigation__search-result-title\">\n                          {result.title}\n                        </h2>\n                      </Link>\n                    }\n                  </li>\n                ))\n              }\n              {\n                results.length > 0 ?\n                  <li key={\"end\"}>\n                    <Link to=\"/search\" className=\"navigation__search-more-results\">\n                      more results...\n                    </Link>\n                  </li>\n                :\n                  <li key={\"end\"} className=\"navigation__search-no-results\">\n                    no results\n                  </li>\n              }\n            </>\n          }\n        </ul>\n      </div>\n    </>\n  )\n}","import React, { useState } from 'react'\nimport \"../styles/blocks/navigation.scss\"\nimport { Link } from 'react-router-dom';\n\nconst classNames = require(\"classnames\");\n\nexport const NavigationDropdown = ({text}) => {\n  const [isActive, setActive] = useState(false); \n\n  return (\n    <>\n      <div\n        className={classNames(\n          \"navigation__dropdown\",\n          {\"navigation__dropdown--active\": isActive}\n        )}\n        onClick={() => setActive(!isActive)}\n        onMouseLeave={() => setActive(false)}\n      >\n        <div className=\"navigation__link-text\">\n          {text}\n        </div>\n        <div className={classNames(\"navigation__dropdown-options-block\", {\"navigation__dropdown-options-block--active\": !isActive})}>\n          <Link to='/watchlist/tv'className=\"navigation__dropdown-option\">\n            <div className=\"navigation__link-text\">\n              watchlist\n            </div>\n          </Link>\n          <Link to='/favorites/tv'className=\"navigation__dropdown-option\">\n            <div className=\"navigation__link-text\">\n              favorites\n            </div>\n          </Link>\n          <Link to='/lists'className=\"navigation__dropdown-option\">\n            <div className=\"navigation__link-text\">\n              lists\n            </div>\n          </Link>\n        </div>\n      </div>\n    </>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { NavigationDropdown } from \"./NavigationDropdown\"\nimport { NavigationSearch } from './NavigationSearch'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { HashLink } from 'react-router-hash-link'\nimport { useLocation } from 'react-router'\nimport { HashRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getAccInfo, getPersonImg } from './api'\nimport { AnimateSharedLayout, motion, useAnimation } from 'framer-motion'\n\nimport { changeLanguage } from '../redux/actions'\nimport { translate } from './translate'\n\nconst Navigation = ({accInfo, language, changeLanguage}) => {\n  const location = useLocation();\n  const menuAnimation = useAnimation();\n  const avatarAnimation = useAnimation();\n  const languageAnim = useAnimation();\n  console.log(location)\n  const [firstload, setFirstLoad] = useState(true);\n\n  useEffect(() => {\n    if(!firstload) {\n      window.location.reload()\n    }\n\n    setFirstLoad(false)\n  }, [language]);\n\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation__content\">\n        {/* elements displayed only on mobiles */}\n        <HashLink\n          // smooth\n          scroll={(el) => el.scrollIntoView()}\n          className=\"navigation__menu\"\n          to=\"#menu\"\n        >\n          <FontAwesomeIcon\n            icon={faBars}\n          />\n        </HashLink>\n\n        <AnimateSharedLayout>\n          <Link to=\"/\" className=\"navigation__logo\">\n            PMDB\n            {location.pathname === '/' && <ActiveLine/>}\n          </Link>\n          <div className=\"navigation__main\">\n            <Link to=\"/info\" className=\"navigation__link\">\n              <div className=\"navigation__link-text\">\n                {translate({\n                  'en': \"info\",\n                  \"uk\": 'інформація'\n                })}\n              </div>\n              {location.pathname === '/info' && <ActiveLine/>}\n            </Link>\n            <Link to=\"/search\" className=\"navigation__link\">\n              <div className=\"navigation__link-text\">\n                {translate({\n                  'en': \"search\",\n                  \"uk\": 'пошук'\n                })}\n              </div>\n              {location.pathname === '/search' && <ActiveLine/>}\n            </Link>\n          </div>\n        </AnimateSharedLayout>\n        <div className=\"navigation__right-side-block\">\n          <NavigationSearch></NavigationSearch>\n          {!accInfo.id &&\n            <HashLink   \n              to=\"#login\"\n              className=\"navigation__link--paddingless\"\n            >\n              <div className=\"navigation__link-text\">\n                {translate({\n                  'en': \"log in\",\n                  \"uk\": 'увійти'\n                })}\n              </div>\n            </HashLink>\n          }\n          {accInfo.id &&\n            <motion.div\n              className=\"navigation__avatar-container\"\n              onHoverStart={() => {\n                menuAnimation.start({scale: '100%', opacity: 1})\n                avatarAnimation.start({scale: '120%'})\n              }}\n              onHoverEnd={() => {\n                menuAnimation.start({scale: 0, opacity: 0})\n                avatarAnimation.start({scale: '100%'})\n              }}\n            >\n              <motion.div\n                initial={{scale: 0, opacity: 0}}\n                className=\"profile-settings\"\n                animate={menuAnimation}\n              >\n                <div className=\"profile-settings__header\">\n                  {accInfo.username}\n                </div>\n                <motion.div\n                  onHoverStart={() => {languageAnim.start({scale: \"100%\"})}}\n                  onHoverEnd={() => {languageAnim.start({scale: 0})}}\n                  to='/watchlist/tv'\n                  className=\"profile-settings__option\"\n                >\n                  ‹ {translate({\n                    'en': \"language\",\n                    \"uk\": 'мова'\n                  })}\n                  <motion.div\n                    initial={{scale: 0, translateX: \"-100%\"}}\n                    animate={languageAnim}\n                    className=\"profile-settings__backdrop-content\"\n                  >\n                    <div onClick={() => {changeLanguage('en')}} className=\"profile-settings__option\">\n                      english {language === 'en' && \"✓\"}\n                    </div>\n                    <div onClick={() => {changeLanguage('uk')}}className=\"profile-settings__option\">\n                      українська {language === 'uk' && \"✓\"}\n                    </div>\n                  </motion.div>\n                </motion.div>\n                <div className=\"profile-settings__label\">\n                  {translate({\n                    'en': \"account\",\n                    \"uk\": 'аккаунт'\n                  })}\n                </div>\n                <Link to='/profile'className=\"profile-settings__option\">\n                  {translate({\n                    'en': \"profile\",\n                    \"uk\": 'профіль'\n                  })}\n                </Link>\n                <HashLink to='#login'className=\"profile-settings__option\">\n                  {translate({\n                    'en': \"log out\",\n                    \"uk\": 'вийти'\n                  })}\n                </HashLink>\n                <div className=\"profile-settings__label\">\n                  {translate({\n                    'en': \"film catalogues\",\n                    \"uk\": 'каталоги фільмів'\n                  })}\n                </div>\n                <Link to='/watchlist/tv'className=\"profile-settings__option\">\n                  {translate({\n                    'en': \"watchlist\",\n                    \"uk\": '\"до перегляду\"'\n                  })}\n                </Link>\n                <Link to='/favorites/tv'className=\"profile-settings__option\">\n                  {translate({\n                    'en': \"favorites\",\n                    \"uk\": 'улюблені'\n                  })}\n                </Link>\n                <Link to='/lists'className=\"profile-settings__option profile-settings__option--last\">\n                  {translate({\n                    'en': \"lists\",\n                    \"uk\": 'списки'\n                  })}\n                </Link>\n              </motion.div>\n              <motion.img\n                initial={{ scale: '100%' }}\n                animate={avatarAnimation}\n                src={getPersonImg(accInfo?.avatar?.tmdb?.avatar_path)}\n                alt=\"\"\n                className=\"navigation__avatar\"\n              />\n            </motion.div>\n          }\n        </div>\n      </div>  \n    </div>\n  )\n}\n\nfunction ActiveLine() {\n  return (\n    <motion.div\n      layoutId=\"activeLine\"\n      style={{\n        width: '100%',\n        height: '4px',\n        left: 0,\n        right: 0,\n        bottom: 0,\n        position: 'absolute',\n        backgroundColor: 'rgb(255, 0, 0)'\n      }}\n      transition={{duration: 0.2}}\n    />\n  )\n}\n\nexport default connect((state) => ({accInfo: state.session.accInfo, language: state.session.language}), {changeLanguage})(Navigation)","import folder from '../lottie/folder.json'\nimport Lottie from 'lottie-web';\nimport { useRouteMatch } from 'react-router';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst classNames = require('classnames')\n\nexport const WatchlistTab = ({title, titleInUrl}) => {\n  const [lottieAnim, setLottieAnim] = useState({})\n  const animation = useRef(null)\n\n  const match = useRouteMatch('/watchlist/:mediaType')\n\n  useEffect(() => {\n    setLottieAnim(Lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      quality: 'hight',\n      loop: false,\n      autoplay: false,\n      animationData: folder\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim.setSpeed(2.5)\n    }\n\n  }, [])\n  \n  useEffect(() => {\n    if(match.params.mediaType === titleInUrl && lottieAnim.playSegments) {\n      lottieAnim?.playSegments([34, 90], true)\n    }\n    if(match.params.mediaType !== titleInUrl && lottieAnim.playSegments) {\n      lottieAnim?.playSegments([0, 1], true)\n    }\n  }, [match.params.mediaType])\n  return (\n    <Link\n      to={`/watchlist/${titleInUrl}`}\n      onMouseOver={() => {\n        if(match.params.mediaType !== titleInUrl) {\n          lottieAnim?.playSegments([21, 34], true)\n        }\n      }}\n      onMouseLeave={() => {\n        if(match.params.mediaType !== titleInUrl) {\n          lottieAnim?.playSegments([0, 1], true)\n        }\n      }}\n      className={classNames(\"watchlist__list-select-link\", {\"watchlist__list-select-link--active\": match.params.mediaType === titleInUrl})}\n    >\n      <div className=\"watchlist__folder-lottie\" ref={animation}></div>\n      {title}\n    </Link>\n  )\n}","import React, { useEffect } from 'react'\nimport { getMovieImg } from './api'\nimport { useHistory } from 'react-router';\nimport AddToWatchListButton from './AddToWatchListButton';\nimport { motion, useAnimation } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\n\nconst classNames = require(\"classnames\");\n\nexport const WatchlistElement = ({ movie, genres, media_type}) => {\n  const history = useHistory();\n  const {ref, inView} = useInView({threshold: 0.2});\n  const animation = useAnimation()\n\n  useEffect(() => {\n    if(inView) {\n      animation.start({\n        opacity: 1,\n        transition: {\n          duration: 0.2\n        }\n      })\n    } else {\n      animation.start({\n        opacity: 0,\n        transition: {\n          duration: 0.2\n        }\n      })\n    }\n  }, [inView])\n\n  return (\n    <motion.div\n      ref={ref}\n      // initial=\"hidden\"\n      animate={animation}\n      // transition={{ duration: 0.3 }}\n      // variants={{\n      //   hidden: { opacity: 0, scale: 0 }\n      // }}\n      className={classNames(\"watchlist__card\")}\n    >\n      <img\n        onClick={() => {\n          console.log(history)\n          history.push(`/${movie.media_type}/${movie.id}`)\n        }}\n        src={getMovieImg(movie?.poster_path, true)}\n        alt=\"\"\n        className=\"watchlist__card-img\"\n      />\n      <div className=\"watchlist__description\">\n        <div className=\"watchlist__description-content\">\n          <h1 className=\"watchlist__description-title\">{movie?.title}</h1>\n          <ul className=\"watchlist__description-genres-list\">\n            {movie.genre_ids?.map((genreId) =>\n              <li className=\"watchlist__description-genre\">\n                {genres.find(({id}) => genreId === id)?.name}\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n      <div className=\"watchlist__remove-from-watchlist-block\">\n        <AddToWatchListButton media_id={movie.id} media_type={media_type} />\n      </div>\n    </motion.div>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { getGenres } from './api';\nimport { WatchlistElement } from './WatchlistElement';\n\nconst classNames = require('classnames');\n\nexport const WatchlistList = ({moviesList, media_type}) => {\n  const slider = useRef(null);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n  }, [])\n\n  return (\n    <div className=\"watchlist__list\">\n      {moviesList?.map((movie) => (\n        <WatchlistElement key={Math.random()}movie={movie} media_type={media_type} genres={genres}/>\n      ))}\n    </div>\n  )\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux';\n\nimport { cleanAccInfo, setSessionId, updateAccInfo, updateWatchlist } from '../redux/actions';\nimport { WatchlistTab } from '../components/WatchlistTab';\nimport { WatchlistList } from '../components/WatchlistList';\nimport { useRouteMatch } from 'react-router';\n\nconst classNames = require('classnames')\n\nconst WatchlistPage = ({session_id, watchlist, updateWatchlist}) => {\n  const match = useRouteMatch('/watchlist/:mediaType')\n\n  useEffect(() => updateWatchlist(session_id), [])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"watchlist\">\n          <div className=\"watchlist__list-select-block\">\n            <WatchlistTab title=\"tv series\" titleInUrl=\"tv\"/>\n            <WatchlistTab title=\"movies\" titleInUrl=\"movie\"/>\n          </div>\n          {match?.params?.mediaType === 'movie'\n            ? <WatchlistList moviesList={watchlist.movie?.map((movie) => ({...movie, media_type: 'movie'}))} media_type=\"movie\"/>\n            : <WatchlistList moviesList={watchlist.tv?.map((movie) => ({...movie, media_type: 'tv'}))} media_type=\"tv\"/>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session ,watchlist: state.session.watchlist}), {cleanAccInfo, setSessionId, updateAccInfo, updateWatchlist})(WatchlistPage)","import folder from '../lottie/folder.json'\nimport Lottie from 'lottie-web';\nimport { useRouteMatch } from 'react-router';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst classNames = require('classnames')\n\nexport const FavoritesTab = ({title, titleInUrl}) => {\n  const [lottieAnim, setLottieAnim] = useState({})\n  const animation = useRef(null)\n\n  const match = useRouteMatch('/favorites/:mediaType')\n\n  useEffect(() => {\n    setLottieAnim(Lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      quality: 'hight',\n      loop: false,\n      autoplay: false,\n      animationData: folder\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim.setSpeed(2.5)\n    }\n\n  }, [])\n  \n  useEffect(() => {\n    if(match.params.mediaType === titleInUrl && lottieAnim.playSegments) {\n      lottieAnim?.playSegments([34, 90], true)\n    }\n    if(match.params.mediaType !== titleInUrl && lottieAnim.playSegments) {\n      lottieAnim?.playSegments([0, 1], true)\n    }\n  }, [match.params.mediaType])\n  return (\n    <Link\n      to={`/favorites/${titleInUrl}`}\n      onMouseOver={() => {\n        if(match.params.mediaType !== titleInUrl) {\n          lottieAnim?.playSegments([21, 34], true)\n        }\n      }}\n      onMouseLeave={() => {\n        if(match.params.mediaType !== titleInUrl) {\n          lottieAnim?.playSegments([0, 1], true)\n        }\n      }}\n      className={classNames(\"watchlist__list-select-link\", {\"watchlist__list-select-link--active\": match.params.mediaType === titleInUrl})}\n    >\n      <div className=\"watchlist__folder-lottie\" ref={animation}></div>\n      {title}\n    </Link>\n  )\n}","import React from 'react'\nimport { getMovieImg } from './api'\nimport { useHistory } from 'react-router';\nimport MarkAsFavoriteButton from './MarkAsFavoriteButton';\n\nconst classNames = require(\"classnames\");\n\nexport const FavoritesListElement = ({ movie, genres, media_type}) => {\n  const history = useHistory();\n  return (\n    <div\n      className={classNames(\"watchlist__card\")}\n    >\n      <img\n        onClick={() => {\n          console.log(history)\n          history.push(`/${movie.media_type}/${movie.id}`)\n        }}\n        src={getMovieImg(movie?.poster_path, true)}\n        alt=\"\"\n        className=\"watchlist__card-img\"\n      />\n      <div className=\"watchlist__description\">\n        <div className=\"watchlist__description-content\">\n          <h1 className=\"watchlist__description-title\">{movie?.title}</h1>\n          <ul className=\"watchlist__description-genres-list\">\n            {movie.genre_ids?.map((genreId) =>\n              <li className=\"watchlist__description-genre\">\n                {genres.find(({id}) => genreId === id)?.name}\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n      <div className=\"watchlist__remove-from-watchlist-block\">\n        <MarkAsFavoriteButton key={movie.id} media_id={movie.id} media_type={media_type} />\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { getGenres } from './api';\nimport { FavoritesListElement } from './FavoritesListElement';\n\nconst classNames = require('classnames');\n\nexport const FavortiesList = ({moviesList, media_type}) => {\n  const slider = useRef(null);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n  }, [])\n\n  return (\n    <div className=\"watchlist__list\">\n      {moviesList?.map((movie) => (\n        <FavoritesListElement key={Math.random()} movie={movie} media_type={media_type} genres={genres}/>\n      ))}\n    </div>\n  )\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux';\n\nimport { cleanAccInfo, setSessionId, updateAccInfo, updateFavoritesList } from '../redux/actions';\nimport { WatchlistList } from '../components/WatchlistList';\nimport { useRouteMatch } from 'react-router';\nimport { FavoritesTab } from '../components/FavoritesTab';\nimport { FavortiesList } from '../components/FavortiesList';\n\nconst classNames = require('classnames')\n\nconst Favorites = ({session_id, favorites, updateFavoritesList}) => {\n  const match = useRouteMatch('/favorites/:mediaType')\n\n  useEffect(() => updateFavoritesList(session_id), [])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"watchlist\">\n          <div className=\"watchlist__list-select-block\">\n            <FavoritesTab title=\"tv series\" titleInUrl=\"tv\"/>\n            <FavoritesTab title=\"movies\" titleInUrl=\"movie\"/>\n          </div>\n          {match?.params?.mediaType === 'movie'\n            ? <FavortiesList moviesList={favorites.movie?.map((movie) => ({...movie, media_type: 'movie'}))} media_type=\"movie\"/>\n            : <FavortiesList moviesList={favorites.tv?.map((movie) => ({...movie, media_type: 'tv'}))} media_type=\"tv\"/>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session, favorites: state.session.favorites}), {cleanAccInfo, setSessionId, updateAccInfo, updateFavoritesList})(Favorites)","import React, { useEffect, useRef, useState } from 'react'\nimport deleteButton from '../lottie/deleteButton.json'\nimport lottie from 'lottie-web';\nimport { connect } from 'react-redux';\nimport { updateLists } from '../redux/actions';\nimport { removeMovieFromList } from './api';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst classNames = require('classnames')\n\nconst DeleteMovieFromList = ({session_id, media_id, list_id, updateLists}) => {\n  const [lottieAnim, setLottieAnim] = useState({})\n  const animation = useRef(null)\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\n  const [deleted, setDeleted] = useState(false);\n\n  const history = useHistory();\n  const location = useLocation();\n  const [isPressed, press] = useState(false)\n  \n  useEffect(() => {\n    if(location.hash === '#action_submited' && isPressed) {\n      removeMovieFromList(list_id, media_id, session_id).then(() => {\n        console.log('trying to remove')\n        updateLists(session_id)\n      })\n  \n      history.push({hash: '#'})\n      press(false)\n    }\n  }, [location, isPressed])\n\n  useEffect(() => {\n    setLottieAnim(lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: JSON.parse(JSON.stringify(deleteButton))\n    }))\n    // if(lottieAnim.setSpeed) {\n    //   lottieAnim?.setSpeed(2.5)\n    // }\n  }, [])\n  useEffect(() => {\n    if(lottieAnim.playSegments && theFirstPlay) {\n      lottieAnim.playSegments([1, 2], true)\n      setTheFirstPlay(false)\n    }\n  }, [lottieAnim])\n\n\n  return (\n    <div\n      onMouseEnter={() => {\n        if(lottieAnim.playSegments) {\n          lottieAnim.playSegments([0, 5], true)\n        }\n      }}\n\n      onMouseLeave={() => {\n        if(lottieAnim.playSegments && !deleted) {\n          lottieAnim.playSegments([1, 2], true)\n        }\n      }}\n\n      onMouseDown={() => {\n        if(lottieAnim.playSegments) {\n          lottieAnim.playSegments([5, 18], true)\n        }\n      }}\n\n      onMouseUp={() => {\n        if(lottieAnim.playSegments) {\n          lottieAnim.playSegments([18, 32])\n          setDeleted(true)\n        }\n      }}\n      onClick={() => {\n        history.push({hash: '#conf-window'})\n        press(true)\n      }}\n      className=\"addToWatchListButton\"\n      ref={animation}\n    >\n    </div>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    session_id: state.session.session,\n  }),\n  {updateLists}\n)(DeleteMovieFromList)\n","import React, { useEffect, useRef } from 'react'\nimport { getMovieImg } from './api'\nimport { useHistory } from 'react-router';\nimport AddToWatchListButton from './AddToWatchListButton';\nimport { connect } from 'react-redux';\nimport { Picture } from './Picture';\nimport { AnimatePresence, motion, useAnimation } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\nimport DeleteMovieFromList from './DeleteMovieFromList';\nimport { random } from 'lodash';\n\nconst classNames = require(\"classnames\");\n\nconst ListElement = ({ media, genres, list_id}) => {\n  const history = useHistory();\n  const {ref, inView} = useInView()\n  const animation = useAnimation();\n  const deleteLottie = useRef(null)\n\n  useEffect(() => {\n    \n  })\n\n  useEffect(() => {\n    if(inView) {\n      animation.start({\n        scale: 1,\n      })\n    } else {\n      animation.start({\n        scale: 0.4,\n      })\n    }\n  }, [inView])\n  return (\n    <div style={{heigth: 'max-size', width: '100%'}}>\n      <motion.div\n        key={`${list_id}-${media.id}`}\n        // initial={{scale: 0.1}}\n        ref={ref}\n        animate={animation}\n        className={classNames(\"list-card\")}\n      >\n        <div\n          onClick={() => {\n            history.push(`/${media.media_type}/${media.id}`)\n            window.location.reload();\n          }}\n          className=\"list-card__img\"\n        >\n          <Picture picture_path={media.poster_path}/>\n        </div>\n        <div className=\"list-card__title\">\n          {media.title}\n        </div>\n        {/* <div className=\"watchlist__remove-from-watchlist-block\">\n          <AddToWatchListButton media_id={movie.id} media_type={media_type} />\n        </div> */}\n        <div className=\"list-card__action-button-container\">\n          <div ref={deleteLottie} className=\"list-card__delete-button\">\n            <DeleteMovieFromList media_id={media.id} list_id={list_id}/>\n          </div>\n        </div>\n      </motion.div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({genres: state.session.genres}))(ListElement)","import { motion, useAnimation } from \"framer-motion\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router\";\nimport { getCreatedList } from \"./api\";\nimport lottie from \"lottie-web\";\n\nexport const ListSelector = ({ id, name }) => {\n  const history = useHistory();\n  const match = useRouteMatch('/lists/:listId?')\n  const animation = useAnimation();\n\n  useEffect(() => {\n    console.log(match.params.listId, id)\n    if(+match.params.listId === id) {\n      animation.start({\n        transformOrigin: \"left bottom\",\n        height: \"75px\",\n        fontSize: \"30px\",\n        backgroundColor: \"red\",\n        transition: {duration: 0.01},\n      })\n    } else {\n      animation.start({\n        transformOrigin: \"left bottom\",\n        height: \"50px\",\n        fontSize: \"20px\",\n        backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n        transition: {duration: 0.01},\n      })\n    }\n  }, [match.params.listId])\n\n  return (\n    <div style={{heigth: 'max-size', width: '100%'}}>\n      <motion.div\n        animate={animation}\n        exit={{translateX: '-100%', opacity: 0, translateDuration: 0.1}}\n        key={id}\n        className=\"lists-page__list-option\"\n        onClick={() => {\n          if(window.location.href.includes(`${id}`)) {\n            history.push(`/lists`)\n            return;  \n          }\n          history.push(`/lists/${id}`)\n        }}\n      >\n        {name}\n      </motion.div>\n    </div>\n  )\n}","import React, { useEffect, useRef, useState } from 'react'\nimport lottie from 'lottie-web';\nimport { connect } from 'react-redux';\nimport { addMovieToList, checkItemStatus, createList, getLists, removeMovieFromList } from './api';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { updateLists } from '../redux/actions';\nimport addList from '../lottie/addList.json'\n\nconst classNames = require('classnames')\n\nconst CreateListButton = ({session_id, lists, media_id, updateLists}) => {\n  const [active, setActive] = useState(false);\n  const [lottieAnim, setLottieAnim] = useState({})\n  const [itemStatus, setItemStatus] = useState({})\n  const [changingList, setChangingList] = useState({toBeAdded: [], toBeRemoved: []})\n  const animation = useRef(null)\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\n  const [newListData, setNewListData] = useState({});\n\n  const setMovieToBeAdded = () => {\n    setChangingList({...changingList, toBeAdded: [...changingList.toBeAdded, media_id]})\n  }\n\n  const setMovieToBeRemoved = () => {\n    setChangingList({...changingList, toBeRemoved: [...changingList.toBeRemoved, media_id]})\n  }\n\n  const deleteMovieFromChanging = () => {\n    setChangingList({\n      ...changingList,\n      toBeAdded:[...changingList.toBeAdded].filter(({id}) => id !== media_id),\n      toBeRemoved: [...changingList.toBeRemoved].filter(({id}) => id !== media_id)\n    })\n  }\n\n  const doesMovieBelongToList = (list_id) => {\n    if(changingList.toBeRemoved.some(({id}) => list_id === id)) {\n      return false;      \n    }\n    if(changingList.toBeAdded.some(({id}) => list_id === id)) {\n      return true\n    }\n    return itemStatus?.some(({id}) => list_id === id)\n  }\n\n  useEffect(() => {\n    setLottieAnim(lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: JSON.parse(JSON.stringify(addList))\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim?.setSpeed(2.5)\n    }\n  }, [])\n\n  useEffect(() => {\n    checkItemStatus(media_id, session_id).then((response) => {\n      console.log('status', response)\n      setItemStatus(response.results)\n    });\n  }, [lists])\n\n  useEffect(() => {\n    if(lottieAnim.playSegments && theFirstPlay) {\n        lottieAnim?.playSegments([0, 1], true)\n        setTheFirstPlay(false)\n    }\n  }, [lottieAnim])\n\n\n  return (\n    <>\n      <div\n        onClick={() => {\n          console.log(lists)\n          if(lottieAnim?.playSegments) {\n            lottieAnim?.playSegments([0, 62], true)\n          }\n          setActive(!active)\n          // addMovieToList(1, media_id, session_id)\n          // .then(() => {\n          //   updateLists(session_id)\n          // })\n        }}\n        className=\"create-list-button\"\n        ref={animation}\n      >\n      </div>\n      <AnimatePresence>\n        {active &&\n          <motion.div\n            initial={{opacity: 0, scale: 0, translateX: '-50%', translateY: '-50%'}}\n            animate={{opacity: 1, scale: 1, translateX: '-50%', translateY: '-50%'}}\n            exit={{opacity: 0, scale: 0, translateX: '-50%', translateY: '-50%'}}\n            transition={{ duration: 0.1}}\n            className=\"action-window\"\n          >\n            <div className=\"action-window__header\">\n              <div className=\"action-window__close-button\" onClick={() => setActive(false)}></div>\n            </div>\n            <div className=\"action-window__content\">\n              <div className=\"action-window__title\">\n                  create list\n              </div>\n              <motion.div\n                initial={{opacity: 0, translateX: -100}}\n                animate={{opacity: 1, translateX: 0}}\n                transition={{ duration: 0.2}}\n              >\n                <form onSubmit={(event) => {\n                  console.log(newListData)\n                  createList(newListData.name, newListData.description, session_id).then(() => {\n                    updateLists(session_id)\n                  })\n                  \n                }}>\n                  Your custom list name*\n                  <input\n                    placeholder='Movies for my mom'\n                    value={newListData.name}\n                    onChange={(event) => {\n                      setNewListData({...newListData, name: event.target.value})\n                    }}\n                    className=\"action-window__input\"\n                    type=\"text\"\n                  />\n                  Your custom list description*\n                  <input\n                    placeholder='Only those she loves'\n                    value={newListData.description}\n                    onChange={(event) => {\n                      setNewListData({...newListData, description: event.target.value})\n                    }}\n                    className=\"action-window__input\"\n                    type=\"textfield\"\n                  />\n                  <button className=\"action-window__submit-button\" type=\"submit\">Create</button>\n                </form>\n              </motion.div>\n            </div>\n          </motion.div>\n        }\n      </AnimatePresence>\n    </>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    session_id: state.session.session,\n    accInfo: state.session.accInfo,\n    lists: state.session.lists\n  }),\n  {updateLists}\n)(CreateListButton)\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport lottie from 'lottie-web';\nimport { connect } from 'react-redux';\nimport { addMovieToList, checkItemStatus, createList, getLists, getMovieImg, getMoviesByTitle, removeMovieFromList } from './api';\nimport { AnimatePresence, motion, useAnimation } from 'framer-motion';\nimport { updateLists } from '../redux/actions';\nimport addList from '../lottie/addList.json'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport debounce from 'lodash.debounce'\nimport { Picture } from './Picture';\nimport { useRouteMatch } from 'react-router-dom';\n\nconst classNames = require('classnames')\n\nconst AddMoviesToListSearchResult = ({movie, session_id, updateLists}) => {\n  const animation = useAnimation()\n  const match = useRouteMatch('/lists/:listId?')\n\n  return (\n    <motion.div\n      onHoverStart={() => {\n        animation.start({scaleY: 1})\n      }}\n      onHoverEnd={() => {\n        animation.start({scaleY: 0})\n      }}\n      className=\"action-window__search-result\"\n    >\n      <Picture\n        picture_path={getMovieImg(movie.poster_path)}\n        w500\n        mediaType=\"media\"\n      />\n      <motion.div\n        onClick={() => {\n          addMovieToList(match.params.listId, movie.id, session_id)\n          updateLists(session_id)\n        }}\n        initial={{scaleY: 0, transitionDelay: 0.1}}\n        animate={animation}\n        className=\"action-window__search-result-add-button\"\n      >\n        add\n      </motion.div>\n    </motion.div>\n  )\n}\n\nconst AddMoviesToListSearchResultWithConnect = connect(\n  (state) => ({\n    session_id: state.session.session,\n  }),\n  {updateLists}\n)(AddMoviesToListSearchResult)\n\nexport const AddMoviesToListWindow = ({setActive, session_id, updateLists}) => {\n  const [lottieAnim, setLottieAnim] = useState({})\n  const [itemStatus, setItemStatus] = useState({})\n  const [changingList, setChangingList] = useState({toBeAdded: [], toBeRemoved: []})\n  const animation = useRef(null)\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\n  const [newListData, setNewListData] = useState({});\n\n  const [results, setResults] = useState([])\n\n  const onSearch = useCallback(debounce((title) => {\n    getMoviesByTitle(title, 'movie').then((data) => setResults((data || []).slice(0, 7)))\n  }, 500), [])\n\n  const doesMovieBelongToList = (list_id) => {\n    if(changingList.toBeRemoved.some(({id}) => list_id === id)) {\n      return false;      \n    }\n    if(changingList.toBeAdded.some(({id}) => list_id === id)) {\n      return true\n    }\n    return itemStatus?.some(({id}) => list_id === id)\n  }\n\n  useEffect(() => {\n    setLottieAnim(lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: JSON.parse(JSON.stringify(addList))\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim?.setSpeed(2.5)\n    }\n  }, [])\n\n  useEffect(() => {\n    if(lottieAnim.playSegments && theFirstPlay) {\n        lottieAnim?.playSegments([0, 1], true)\n        setTheFirstPlay(false)\n    }\n  }, [lottieAnim])\n\n\n  return (\n    <motion.div\n      initial={{opacity: 0, scale: 0, translateX: '-50%', translateY: '-50%'}}\n      animate={{opacity: 1, scale: 1, translateX: '-50%', translateY: '-50%'}}\n      exit={{opacity: 0, scale: 0, translateX: '-50%', translateY: '-50%'}}\n      transition={{ duration: 0.1}}\n      className=\"action-window action-window--big\"\n    >\n      <div className=\"action-window__header\">\n        <div className=\"action-window__close-button\" onClick={() => setActive(false)}></div>\n      </div>\n      <div className=\"action-window__content\">\n        <div className=\"action-window__title\">\n          add movies to list\n        </div>\n        <div className=\"action-window__search-container\">\n          <input\n            onChange={(event) => {\n              onSearch(event.target.value)\n              console.log(results)\n            }}\n            className=\"action-window__search\"\n          />\n          <div className=\"action-window__search-icon\">\n            <FontAwesomeIcon\n              icon={faSearch}\n            />\n          </div>\n        </div>\n        <div className=\"action-window__search-results-block\">\n          {results.length > 0\n            ?\n              results.map((movie) => <AddMoviesToListSearchResultWithConnect key={movie.id} movie={movie}/>)\n            :\n              <div className=\"action-window__default-result\"> \n                results...\n              </div>\n          }\n        </div>\n      </div>\n    </motion.div>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    session_id: state.session.session,\n  }),\n  {updateLists}\n)(AddMoviesToListWindow)\n","import React, { useEffect, useRef, useState } from 'react'\nimport addMoviesToList from '../lottie/addMoviesToList.json'\nimport lottie from 'lottie-web';\nimport { connect } from 'react-redux';\nimport { addToWatchlist, getWatchlist } from './api';\nimport { updateWatchlist } from '../redux/actions';\nimport { Link } from 'react-router-dom';\nimport { AddMoviesToListWindow } from './AddMoviesToListWindow';\n\nconst classNames = require('classnames')\n\nconst AddMoviesToList = ({session_id, accInfo, media_id, media_type, watchlist, updateWatchlist}) => {\n  const [active, setActive] = useState(false);\n  const [lottieAnim, setLottieAnim] = useState({})\n  const animation = useRef(null)\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\n\n  useEffect(() => {\n    setLottieAnim(lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: JSON.parse(JSON.stringify(addMoviesToList))\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim?.setSpeed(2.5)\n    }\n  }, [])\n  useEffect(() => {\n    if(lottieAnim.playSegments && theFirstPlay) {\n      lottieAnim?.playSegments([0, 1], true)\n      setTheFirstPlay(false)\n    }\n  }, [lottieAnim])\n\n  return (\n    <>\n      <div\n        onMouseEnter={() => {\n          if(lottieAnim.playSegments) {\n            lottieAnim.playSegments([1, 59], true)\n          }\n        }}\n        onMouseLeave={() => {\n          if(lottieAnim.playSegments) {\n            lottieAnim.playSegments([0, 1], true)\n          }\n        }}\n        onMouseDown={() => {\n          if(lottieAnim.playSegments) {\n            lottieAnim.playSegments([59, 91], true)\n          }\n        }}\n        onMouseUp={() => {\n          if(lottieAnim.playSegments) {\n            lottieAnim.playSegments([0, 1], true)\n          }\n        }}\n        onClick={() => {\n          setActive(!active)\n          addToWatchlist({session_id, account_id: accInfo.id, media_type, media_id, watchlist: active})\n          .then(() => {\n            updateWatchlist(session_id)\n          })\n        }}\n        className=\"lists-page__add-movies-to-list-button\"\n      >\n        <div\n          className=\"add-movies-to-list\"\n          ref={animation}\n        />\n      </div>\n      {active && <AddMoviesToListWindow setActive={setActive}/>}\n    </>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    session_id: state.session.session,\n    accInfo: state.session.accInfo,\n    watchlist: state.session.watchlist\n  }),\n  {updateWatchlist}\n)(AddMoviesToList)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\n\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { clearList, deleteList, getCreatedList } from '../components/api';\nimport ListElement from '../components/ListElement';\nimport { AnimatePresence, motion, useAnimation } from 'framer-motion';\nimport { ListSelector } from '../components/ListSelector';\nimport { updateLists } from '../redux/actions';\nimport add from '../lottie/add.json'\nimport Lottie from 'react-lottie';\nimport CreateListButton from '../components/CreateListButton';\nimport { AddMoviesToListWindow } from '../components/AddMoviesToListWindow';\nimport AddMoviesToList from '../components/AddMoviesToList';\nimport { Link, useLocation } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\n\nconst classNames = require('classnames')\n\nconst DeleteOrClearTheListButton = ({func, session_id, updateLists}) => {\n  const match = useRouteMatch('/lists/:listId?')\n  const history = useHistory();\n  const location = useLocation();\n  const [isPressed, press] = useState(false)\n  \n  useEffect(() => {\n    if(location.hash === '#action_submited' && isPressed) {\n      if(func === 'delete') {\n        history.push('/lists')\n        deleteList(match.params.listId, session_id).then(() => {\n          updateLists(session_id)\n        })\n      } else {\n        clearList(match.params.listId, session_id).then(() => {\n          updateLists(session_id)\n        })\n      }\n    }\n  }, [location, isPressed])\n\n  return (\n    <div\n      onClick={() => {\n        history.push({hash: '#conf-window'})\n        press(true)  \n      }}\n      className={classNames([{\"lists-page__delete-button\": func === 'delete', \"lists-page__clear-button\": func === 'clear'}])}\n    >\n      {func === 'delete' ? 'delete the list' : 'clear the list'}\n    </div>\n  )\n}\n\nconst DeleteOrClearTheListButtonWithRedux = connect((state) => ({session_id: state.session.session}), {updateLists})(DeleteOrClearTheListButton)\n\nconst ListsPage = ({lists, session_id, updateLists}) => {\n  const match = useRouteMatch('/lists/:listId?')\n  const [selectedList, selectList] = useState({});\n  const animation = useAnimation();\n  const [titleInputValue, setTitleInputValue] = useState('')\n  const history = useHistory();\n\n  \n\n  useEffect(() => {\n    if(match.params.listId) {\n      getCreatedList(match.params.listId).then((res) => {\n        selectList(res)\n      })\n    } else {\n      selectList(false)\n    }\n    console.log('a', selectedList)\n    if(match.params.listId === selectedList.id) {\n      animation.start({\n        translateX: 20\n      })\n    } else {\n      animation.start({\n        translateX: 0\n      })\n    }\n  }, [match.params.listId, lists])\n\n  useEffect(() => {\n    setTitleInputValue(selectedList.name)\n  }, [selectedList])\n\n\n\n  return (\n    <>\n      <div className=\"page\">\n        <div className=\"container\">\n          <div className=\"lists-page grid\">\n            <div className=\"lists-page__select-section grid__item--1-4\">\n              <AnimatePresence>\n                {lists.map((list) => (\n                  <ListSelector key={list.id} id={list.id} name={list.name}/>\n                ))}\n              </AnimatePresence>\n            </div>\n            <div className=\"lists-page__list grid__item--5-12\">\n              <h1 className=\"lists-page__title\">\n                {selectedList ? selectedList.name : 'This is list page'}\n                {/* <input value={titleInputValue} type=\"text\" className=\"lists-page__title-input\" /> */}\n                {selectedList && <AddMoviesToList/>}\n              </h1>\n              <p className=\"lists-page__description\">{selectedList ? selectedList.description : 'select one list to see its elements'}</p>\n              <div className=\"lists-page__list\">\n                <AnimatePresence>\n                  {selectedList.items?.map((movie) => (\n                    <ListElement key={`${selectedList.id}-${movie.id}`} media={movie} list_id={selectedList.id}/>\n                  ))}\n                </AnimatePresence>\n              </div>\n              <div style={{display: 'flex'}}>\n                {selectedList &&\n                  <DeleteOrClearTheListButtonWithRedux func=\"delete\"/>\n                }\n                {(selectedList && selectedList.items?.length > 0) &&\n                  <DeleteOrClearTheListButtonWithRedux func=\"clear\"/>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <CreateListButton />\n    </>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session, lists: state.session.lists}), {updateLists})(ListsPage)","import { motion } from 'framer-motion';\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { getPerson, getPersonImg, getPersonsCredits } from '../components/api';\n\nconst PersonPage = ({accInfo}) => {\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"grid\">\n          <div className=\"grid__item--1-3 profile-page__avatar-container\">\n            <motion.img\n              initial={{ scale: 0, rotate: 180 }}\n              animate={{ scale: 1, rotate: 0 }}\n              src={getPersonImg(accInfo?.avatar?.tmdb?.avatar_path)}\n              alt=\"\"\n              className=\"profile-page__avatar\"\n            >\n            </motion.img>\n          </div>\n          <motion.div\n            initial={{scaleX: 0}}\n            animate={{scaleX: 1}}\n            className=\"grid__item--4-12 profile-page__description\"\n          >\n            <motion.div\n              className=\"profile-page__username grid\"\n            >\n              {accInfo.username}\n            </motion.div>\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({accInfo: state.session.accInfo}))(PersonPage)\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport lottie from 'lottie-web';\nimport { connect } from 'react-redux';\nimport { addMovieToList, checkItemStatus, createList, getLists, getMovieImg, getMoviesByTitle, removeMovieFromList } from './api';\nimport { AnimatePresence, motion, useAnimation } from 'framer-motion';\nimport { updateLists } from '../redux/actions';\nimport addList from '../lottie/addList.json'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport debounce from 'lodash.debounce'\nimport { Picture } from './Picture';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\n\nconst classNames = require('classnames')\n\nexport const ConfirmationWindow = ({ session_id, updateLists}) => {\n  const [lottieAnim, setLottieAnim] = useState({})\n  const [itemStatus, setItemStatus] = useState({})\n  const [changingList, setChangingList] = useState({toBeAdded: [], toBeRemoved: []})\n  const animation = useRef(null)\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\n  const [newListData, setNewListData] = useState({});\n  const location = useLocation()\n  const [active, setActive] = useState(false);\n\n  const history = useHistory();\n\n\n  const [results, setResults] = useState([])\n\n  const onSearch = useCallback(debounce((title) => {\n    getMoviesByTitle(title, 'movie').then((data) => setResults((data || []).slice(0, 7)))\n  }, 500), [])\n\n  const doesMovieBelongToList = (list_id) => {\n    if(changingList.toBeRemoved.some(({id}) => list_id === id)) {\n      return false;      \n    }\n    if(changingList.toBeAdded.some(({id}) => list_id === id)) {\n      return true\n    }\n    return itemStatus?.some(({id}) => list_id === id)\n  }\n\n  useEffect(() => {\n    setLottieAnim(lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: JSON.parse(JSON.stringify(addList))\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim?.setSpeed(2.5)\n    }\n  }, [])\n\n  useEffect(() => {\n    if(lottieAnim.playSegments && theFirstPlay) {\n        lottieAnim?.playSegments([0, 1], true)\n        setTheFirstPlay(false)\n    }\n  }, [lottieAnim])\n\n  useEffect(() => {\n    if(location.hash === '#conf-window') {\n      setActive(true)\n    } else {\n      setActive(false)\n    }\n  }, [location])\n\n\n  return (\n    <div\n      id=\"conf-window\"\n      key=\"conf-window\"\n      // exit={{opacity: 0, scale: 0, translateX: '-50%', translateY: '-50%'}}\n      // transition={{ duration: 0.1}}\n      className={classNames([\"action-window\", \"action-window--for-confirmation\", {\"action-window--for-confirmation--active\": active}])}\n      \n    >\n      <div className=\"action-window__header\">\n        <div className=\"action-window__close-button\" onClick={() => history.push({hash: '#'})}></div>\n      </div>\n      <div className=\"action-window__content\">\n        <div className=\"action-window__title\">\n          Are you sure?\n        </div>\n        <button onClick={() => history.push({hash: 'action_submited'})} className=\"action-window__submit-button\">\n          Yes\n        </button>\n      </div>\n    </div>\n  )\n}\n","import './styles/App.scss';\nimport Menu from './components/Menu';\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport MoviePage from './pages/MoviePage';\nimport { Info } from './pages/Info'\nimport Home from './pages/Home'\nimport { CollectionPage } from './pages/CollectionPage';\nimport { PersonPage } from './pages/PersonPage';\nimport {Switch} from 'react-router'\nimport { SearchPage } from './pages/SearchPage';\nimport LoginWindow from './pages/LoginWindow';\nimport Navigation from './components/Navigation'\nimport WatchlistPage from './pages/WatchlistPage';\nimport FavoritesPage from './pages/FavoritesPage';\nimport ListsPage from './pages/ListsPage';\nimport ProfilePage from './pages/ProfilePage';\nimport { ConfirmationWindow } from './components/ConfirmationWindow';\n\nfunction App() {\n  const match = useRouteMatch('/:mediaType/:mediaId')\n  // const [accInfo, setAccInfo] = useState({});\n\n  // console.log(accInfo)\n\n  // useEffect(() => {\n  //   getAccInfo().then((response) => {setAccInfo(response)})\n  // }, [])\n\n  return (\n    <div className=\"App\">\n      <Navigation/>\n      <Switch>\n        <Route name=\"app\" path=\"/\" exact>\n          <Home/>\n        </Route>\n        <Route name=\"app\" path=\"/search\" exact>\n          <SearchPage/>\n        </Route>\n        <Route path=\"/info\">\n          <Info/>\n        </Route>\n        <Route path=\"/person/:personId\" exact>\n          <PersonPage key={Math.random()} id={match?.params?.personId}/>\n        </Route>\n        <Route path=\"/watchlist/:mediaType\" exact>\n          <WatchlistPage/>\n        </Route>\n        <Route path=\"/favorites/:mediaType\" exact>\n          <FavoritesPage/>\n        </Route>\n        <Route path=\"/lists/:listId?\" exact>\n          <ListsPage/>\n        </Route>\n        <Route path=\"/:mediaId/:mediaId\" exact>\n          {match?.params?.mediaType !== 'collections'\n            ?\n            <MoviePage id={match?.params?.mediaId} key={`moviePage${match?.params?.mediaId}`}/>\n            :\n            <CollectionPage/>\n          }\n        </Route>\n        <Route path=\"/profile\" exact>\n          <ProfilePage/>\n        </Route>\n      </Switch>\n        \n      <ConfirmationWindow/>\n      <LoginWindow/>\n      <Menu />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { getAccInfo } from \"../components/api\"\nimport { CHANGE_LANGUAGE, CLEAN_ACCINFO, CLEAN_FAVORITES, CLEAN_WATCHLIST, SET_SESSION_ID, UPDATE_ACCINFO, UPDATE_FAVORITES, UPDATE_LISTS, UPDATE_WATCHLIST } from \"./types\"\n\nconst initialState = {\n  session: localStorage.getItem('session') || '',\n  accInfo: JSON.parse(localStorage.getItem('accInfo') || '{}') || {},\n  watchlist: JSON.parse(localStorage.getItem('watchlist') || '{}') || {},\n  favorites: JSON.parse(localStorage.getItem('favorites') || '{}') || {},\n  lists: JSON.parse(localStorage.getItem('lists') || '[]') || [],\n  genres: [\n    {\"id\":28,\"name\":\"Action\"}, {\"id\":12,\"name\":\"Adventure\"},\n    {\"id\":16,\"name\":\"Animation\"}, {\"id\":35,\"name\":\"Comedy\"},\n    {\"id\":80,\"name\":\"Crime\"}, {\"id\":99,\"name\":\"Documentary\"},\n    {\"id\":18,\"name\":\"Drama\"}, {\"id\":10751,\"name\":\"Family\"},\n    {\"id\":14,\"name\":\"Fantasy\"}, {\"id\":36,\"name\":\"History\"},\n    {\"id\":27,\"name\":\"Horror\"}, {\"id\":10402,\"name\":\"Music\"},\n    {\"id\":9648,\"name\":\"Mystery\"}, {\"id\":10749,\"name\":\"Romance\"},\n    {\"id\":878,\"name\":\"Science Fiction\"},{\"id\":10770,\"name\":\"TV Movie\"},\n    {\"id\":53,\"name\":\"Thriller\"}, {\"id\":10752,\"name\":\"War\"},\n    {\"id\":37,\"name\":\"Western\"}\n  ],\n  language: localStorage.getItem('language'),\n}\n\nexport const sessionReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case SET_SESSION_ID:\n      return ({...state, session: action.payload})\n    case UPDATE_ACCINFO:\n      return ({...state, accInfo: action.payload})\n    case UPDATE_WATCHLIST:\n      console.log(action.payload)\n      return ({...state, watchlist: action.payload})\n    case CLEAN_ACCINFO:\n      return ({...state, accInfo: {}})\n    case CLEAN_WATCHLIST:\n      return ({...state, watchlist: {}})\n    case UPDATE_FAVORITES:\n      console.log(action.payload)\n      return ({...state, favorites: action.payload})\n    case UPDATE_LISTS:\n      return ({...state, lists: action.payload})\n    case CLEAN_FAVORITES:\n      return ({...state, favorites: {}})\n    case CHANGE_LANGUAGE:\n      return ({...state, language: action.payload})\n  }\n  return state\n}\n","import { combineReducers } from \"redux\";\nimport { sessionReducer } from \"./sessionReducer\";\n\nexport const rootReducer = combineReducers({\n  session: sessionReducer,\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createStore } from 'redux';\nimport { rootReducer } from './redux/rootReducer';\nimport { createHashHistory } from 'history';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport const history = createHashHistory();\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Router basename=\"/\" history={history}>\n        <App />\n      </Router>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}