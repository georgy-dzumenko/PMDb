{"version":3,"sources":["components/Menu.jsx","components/api.js","components/Picture.jsx","components/MovieCard.jsx","components/PersonCard.jsx","components/MoviesSlider.jsx","redux/types.jsx","redux/actions.jsx","components/AddToWatchListButton.jsx","components/MarkAsFavoriteButton.jsx","pages/MoviePage.jsx","pages/Info.jsx","components/Poster.jsx","pages/Home.jsx","pages/CollectionPage.jsx","pages/PersonPage.jsx","components/SearchPageCheckbox.jsx","components/FilterVisibilityToggler.jsx","pages/SearchPage.jsx","pages/LoginWindow.jsx","components/NavigationDropdown.jsx","components/NavigationSearch.jsx","components/Navigation.jsx","components/WatchlistTab.jsx","components/WatchlistElement.jsx","components/WatchlistList.jsx","pages/WatchlistPage.jsx","components/FavoritesTab.jsx","components/FavoritesListElement.jsx","components/FavortiesList.jsx","pages/FavoritesPage.jsx","App.jsx","reportWebVitals.js","redux/sessionReducer.jsx","redux/rootReducer.jsx","index.js"],"names":["classNames","require","Menu","location","useLocation","id","className","hash","smooth","to","icon","faChevronLeft","BASE_URL","api_key","getMoviesByYear","year","a","type","fetch","then","response","json","data","results","map","el","media_type","result","tvResult","title","name","getWatchlist","session_id","account_id","res","movie","getFavorites","getAccInfo","sid","getPerson","getMoviesByTitle","mediaType","getGenres","genres","getMovieImg","img","w500","getPersonImg","Picture","picture_path","animation","useRef","useState","lottieAnim","setLottieAnim","useEffect","Lottie","loadAnimation","container","current","animationData","avatar","moviePosterPlug","loop","autoplay","onMouseEnter","play","onMouseLeave","stop","src","alt","ref","MovieCard","last","history","useHistory","onClick","console","log","push","window","reload","poster_path","backdrop_path","genre_ids","genreId","find","PersonCard","person","profile_path","renderer","hover","avatarAnim","onMouseOver","job","character","MoviesSlider","moviesList","peopleList","slider","setGenres","length","scrollBy","left","clientWidth","behavior","index","faChevronRight","SET_SESSION_ID","UPDATE_ACCINFO","UPDATE_WATCHLIST","UPDATE_FAVORITES","CLEAN_ACCINFO","CLEAN_WATCHLIST","CLEAN_FAVORITES","setSessionId","localStorage","setItem","payload","updateAccInfo","dispatch","JSON","stringify","cleanAccInfo","updateWatchlist","account","tv","updateFavoritesList","connect","state","session","accInfo","watchlist","media_id","some","active","setActive","theFirstPlay","setTheFirstPlay","lottie","addButton","setSpeed","playSegments","headers","method","body","addToWatchlist","favorites","favorite","markAsFavorite","match","useRouteMatch","cast","setCast","trailer","setTrailer","crew","setCrew","setMovie","similar","setSimilar","reviews","setReviews","params","mediaId","movieType","key","getCrew","reverse","getCredits","getMoviesById","getSimilar","getReviews","pathname","scrollTo","motion","div","initial","opacity","translateX","animate","transition","duration","vote_average","overview","belongs_to_collection","username","frameBorder","allow","allowFullScreen","review","author_details","avatar_path","content","Date","created_at","toLocaleString","month","Info","href","SwiperCore","use","Autoplay","Pagination","Navigation","EffectCoverflow","Parallax","Poster","selectedMovieId","selectMovieId","Image","nextMovieWithDebounce","useCallback","debounce","cancel","modules","A11y","effect","spaceBetween","slidesPerView","navigation","pagination","clickable","delay","disableOnInteraction","onSwiper","swiper","moviesOnPoster","setMoviesOnPoster","newTv","setNewTv","newMovies","setNewMovies","CollectionPage","collection","setCollection","collectionId","parts","part","PersonPage","credits","setCredits","setPerson","personId","known_for_department","birthday","deathday","biography","Object","entries","reduce","prev","cur","filtered","full","filter","e","sort","b","SearchPageCheckbox","text","list","searchParams","URLSearchParams","search","isOpened","open","get","split","optionId","delete","set","toString","cencelOption","selectNewOption","SearchPage","query","setQuery","selectedMediaType","selectMediaType","resultArr","setResultArr","applyQuery","value","trim","append","checked","onChange","htmlFor","event","target","filteredByTitle","selectedGenres","slice","every","genre","cleanWatchlist","password","userData","setUserData","loading","setLoading","isLogged","setLogged","err","setErr","action","onSubmit","tockenRes","token","request_token","createSession","success","status_message","deleteSession","background","speed","style","width","height","margin","onAnimationEnd","NavigationDropdown","isActive","NavigationSearch","setResluts","setText","input","onSearch","onBlur","focus","faSearch","setAccInfo","scroll","scrollIntoView","faBars","tmdb","WatchlistTab","titleInUrl","quality","folder","WatchlistElement","WatchlistList","Math","random","FavoritesTab","FavoritesListElement","FavortiesList","App","path","exact","FavoritesPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","getItem","parse","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.2d08d50c.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport { HashLink } from 'react-router-hash-link'\nimport { useLocation } from 'react-router-dom'\n\nconst classNames = require(\"classnames\")\n\nexport const Menu = () => {\n  const location = useLocation()\n\n  return (\n    <div id=\"menu\" className={classNames(\"menu\", {\"menu--active\": location.hash === \"#menu\"})}>\n    \n      <div className=\"navigation\">\n        <div className=\"navigation__content\">\n          <HashLink\n            smooth to=\"#\"\n            className=\"menu__close-button\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft}/>\n          </HashLink>\n        </div>\n      </div>\n      <div className=\"container\">\n        <h1 className=\"menu__title\">\n          Menu\n        </h1>\n        <ul className=\"menu__main\">\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/\">\n              home\n            </HashLink>\n          </li>\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/watchlist/tv\">\n              watchlist\n            </HashLink>\n          </li>\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/favorites/tv\">\n              favorites\n            </HashLink>\n          </li>\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/info\">\n              info\n            </HashLink>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}","const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst api_key = \"a1cacae9e097c731c0046cf30fa3b749\";\n\nexport const getMoviesByYear = async (year, type = \"movie\") => {\n    if(type === \"multi\") {\n        return fetch(`${BASE_URL}discover/movie?year=${year}&api_key=${api_key}`)\n            .then(response => response.json())\n            .then(data => data.results.map((el) => ({...el, media_type: \"movie\"})))\n            .then((result) => getMoviesByYear(\"2021\", 'tv').then((tvResult) => [...result, ...tvResult.map((el) => ({...el, media_type: \"tv\", title: el.name}))]))\n    }\n\n    return fetch(`${BASE_URL}discover/${type}?year=${year}&api_key=${api_key}`)\n        .then(response => response.json())\n        .then(data => data.results.map((el) => ({...el, media_type: type, title: el.name || el.title})))\n}\n\nexport const createToken = () => fetch(`${BASE_URL}/authentication/token/new?api_key=${api_key}`)\n    .then(response => response.json())\n\nexport const createSessionWithLogin = (username, password, token) => fetch(\n        `${BASE_URL}authentication/token/validate_with_login?api_key=${api_key}`,\n        {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body:  JSON.stringify({\n                username,\n                password,\n                request_token: token\n            })\n        }\n    )\n    .then((res) => res.json())\n\nexport const createSession = (token) => fetch(\n    `${BASE_URL}authentication/session/new?api_key=${api_key}`,\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        method: 'POST',\n        body:  JSON.stringify({\n            request_token: token\n        })\n    }\n)\n.then((res) => res.json())\n\nexport const deleteSession = (session_id) => fetch(\n    `${BASE_URL}authentication/session?api_key=${api_key}`,\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        method: 'DELETE',\n        body:  JSON.stringify({\n            session_id\n        })\n    }\n)\n\nexport const addToWatchlist = ({session_id, account_id, media_type, media_id, watchlist}) => {\n    return fetch(\n    `${BASE_URL}account/${account_id}/watchlist?api_key=${api_key}&session_id=${session_id}`,\n    {\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Accept': 'application/json'\n        },\n        method: 'POST',\n        body:  JSON.stringify({\n            media_type,\n            media_id,\n            watchlist,\n        })\n    })\n}\n\nexport const markAsFavorite = ({session_id, account_id, media_type, media_id, favorite}) => {\n    return fetch(\n    `${BASE_URL}account/${account_id}/favorite?api_key=${api_key}&session_id=${session_id}`,\n    {\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Accept': 'application/json'\n        },\n        method: 'POST',\n        body:  JSON.stringify({\n            media_type,\n            media_id,\n            favorite,\n        })\n    })\n}\n\nexport const getWatchlist = ({session_id, account_id, media_type}) => fetch(\n    `${BASE_URL}account/${account_id}/watchlist/${media_type === 'movie' ? 'movies' : 'tv'}?api_key=${api_key}&session_id=${session_id}`\n)\n    .then((res) => res.json())\n    .then((res) => res.results.map((movie) => ({...movie, title: movie.title || movie.name})))\n\nexport const getFavorites = ({session_id, account_id, media_type}) => fetch(\n    `${BASE_URL}account/${account_id}/favorite/${media_type === 'movie' ? 'movies' : 'tv'}?api_key=${api_key}&session_id=${session_id}`\n)\n    .then((res) => res.json())\n    .then((res) => res.results.map((movie) => ({...movie, title: movie.title || movie.name})))\n\nexport const getAccInfo = (sid) => fetch(`${BASE_URL}account?api_key=${api_key}&session_id=${sid}`)\n    .then(response => response.json())\n\nexport const getCredits = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/credits?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.cast)\n\nexport const getTrailer = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/videos?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.results)\n\nexport const getCrew = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/credits?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.crew)\n\nexport const getPersonsCredits = (id) => fetch(`${BASE_URL}person/${id}/combined_credits?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data)\n\nexport const getPerson = (id) => fetch(`${BASE_URL}person/${id}?api_key=${api_key}`)\n    .then(response => response.json())\n\nexport const getPeopleArr = (idArr) => {\n    const resultArr = idArr.map(async (id) => {\n        const response = await fetch(`${BASE_URL}person/${id}?api_key=${api_key}`)\n        const result = response.json();\n        return result;\n    })\n\n    return resultArr;\n}\n\nexport const getReviews = (id, mediaType) => fetch(`${BASE_URL}${mediaType}/${id}/reviews?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(({results}) => results)\n\nexport const findPerson = (query) => fetch(`${BASE_URL}search/person?api_key=${api_key}&query=${query}`)\n    .then(response => response.json())\n    .then(({results}) => results)\n\nexport const getMoviesByTitle = (title, mediaType = 'multi') => fetch(`${BASE_URL}search/${mediaType}?query=${title}&api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.results?.map((movie) => ({...movie, title: movie.title || movie.name})))\n\nexport const getMoviesById = (id, media_type) => fetch(`${BASE_URL}${media_type}/${id}?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(response => {\n        console.log(response)\n        return ({...response, media_type, title: response.title || response.name})\n    })\n\nexport const discoverMedia = ({ with_people, media_type = 'tv'}) => {\n    return fetch(`${BASE_URL}discover/${media_type}?api_key=${api_key}${with_people ?`&with_people=${with_people}` : ''}`)\n    .then(response => response.json())\n    .then(response => response.results)\n}\n\nexport const getGenres = () => fetch(`${BASE_URL}genre/movie/list?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(response => response.genres)\n\nexport const getSimilar = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/similar?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.results.map((el) => ({...el, media_type: movieType, title: el.title || el.name})))\n\nexport const getCollection = (id) => fetch(`${BASE_URL}collection/${id}?api_key=${api_key}`)\n    .then(response => response.json())\n\nexport const getMovieImg = (img, w500 = false) => `https://image.tmdb.org/t/p/${w500 ? \"w500\" : 'original'}/${img}`\n\nexport const getPersonImg = (img, w500 = false) => `https://image.tmdb.org/t/p/${w500 ? \"w500\" : 'original'}/${img}`\n","import Lottie from 'lottie-web';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { getMovieImg } from './api';\nimport moviePosterPlug from '../lottie/moviePosterPlug.json'\nimport avatar from '../lottie/avatar.json'\n\nexport const Picture = ({picture_path, w500 = false, mediaType}) => {\n  const animation = useRef(null)\n  const [lottieAnim, setLottieAnim] = useState(null);\n\n  useEffect(() => {\n    setLottieAnim(Lottie.loadAnimation({\n      container: animation.current,\n      animationData: mediaType === 'person' ? avatar : moviePosterPlug,\n      loop: true,\n      autoplay: false,\n    }))\n  }, [])\n\n  return (\n    <div\n      onMouseEnter={() => lottieAnim?.play()}\n      onMouseLeave={() => lottieAnim?.stop()}\n      className='picture'\n    >\n      {picture_path\n        ?\n          <img className={'picture__img'} src={getMovieImg(picture_path, w500)} alt=\"\" />\n        :\n          <div className={'picture__img'} ref={animation}/>\n      }\n    </div>\n  )\n}\n","import React from 'react'\nimport { getMovieImg } from './api'\nimport { useHistory } from 'react-router';\nimport { Picture } from './Picture';\n\nconst classNames = require(\"classnames\");\n\nexport const MovieCard = ({ last = false, movie, genres}) => {\n  const history = useHistory();\n  return (\n    <div\n      // to={`/${movie.media_type}/${movie.id}`}\n      className={classNames(\"movie-card\", {\"movie-card--last\": last})}\n      onClick={() => {\n        console.log(history)\n        history.push(`/${movie.media_type}/${movie.id}`)\n        window.location.reload()\n      }}\n    >\n\n      <div className=\"movie-card__img-container\">\n        <Picture picture_path={movie?.poster_path} w500/>\n      </div>\n      <div className=\"movie-card__description\">\n        {movie.backdrop_path\n          ?\n            <img className=\"movie-card__description-img\" src={getMovieImg(movie.backdrop_path, true)} alt=\"\" />\n          :\n            ''\n        }\n        <div className=\"movie-card__description-content\">\n          <h1 className=\"movie-card__description-title\">{movie?.title}</h1>\n          <ul className=\"movie-card__description-ganres-list\">\n            {movie.genre_ids?.map((genreId) =>\n              <li key={genreId} className=\"movie-card__description-ganre\">\n                {genres.find(({id}) => genreId === id)?.name}\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import Lottie from 'lottie-web';\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { getMovieImg } from './api'\nimport avatarAnim from '../lottie/avatar.json'\nimport { Picture } from './Picture';\n\nconst classNames = require(\"classnames\");\n\nexport const PersonCard = ({person}) => {\n  const avatar = useRef({})\n  const [lottieAnim, setLottieAnim] = useState(null)\n\n  useEffect(() => {\n    if(!person.profile_path) {\n      setLottieAnim(Lottie.loadAnimation({\n        container: avatar.current,\n        renderer: 'svg',\n        loop: true,\n        autoplay: false,\n        hover: false,\n        \n        animationData: avatarAnim\n      }))\n    }\n  }, [])\n  return (\n    <Link\n      to={`/person/${person.id}`}\n      onMouseOver={() => lottieAnim?.play()}\n      onMouseLeave={() => lottieAnim?.stop()}\n      className={classNames(\"person-card\")}\n    >\n      <Picture mediaType=\"person\" picture_path={person.profile_path} w500/>\n      <div className=\"person-card__job\">\n        {person.job || person.character}\n      </div>\n      <div className=\"person-card__name\">\n        {person.name}\n      </div>\n    </Link>\n  )\n}","import React, { useEffect, useRef, useState } from 'react'\nimport { MovieCard } from './MovieCard';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getGenres } from './api';\nimport { PersonCard } from './PersonCard';\n\nconst classNames = require('classnames');\n\nexport const MoviesSlider = ({moviesList = [], peopleList = []}) => {\n  const slider = useRef(null);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n  }, [])\n\n  return (\n    <div\n      className={classNames(\"movies-slider\", {\"movies-slider--disabled\": [...moviesList, ...peopleList].length === 0})}\n    >\n      <div\n        onClick={() => {\n          slider.current.scrollBy({\n            left: -1 * slider.current.clientWidth * 0.9,\n            behavior: \"smooth\"\n          })\n        }}\n        className={classNames([\"movies-slider__scroll-button\", \"movies-slider__scroll-button--left\", {\"movies-slider--disabled\": moviesList || peopleList}])}\n        >\n        <FontAwesomeIcon icon={faChevronLeft}/>\n      </div>\n      <div\n        ref={slider}\n        className=\"movies-slider__tape\"\n      >\n        <div className=\"movies-slider__content\">\n          {peopleList.map((person) => (\n            <div key={person.id}>\n              <PersonCard key={person.id} person={person} />\n            </div>\n          ))}\n          {!!moviesList ? moviesList?.map((movie, index) => (\n            <div key={movie.id}>\n              <MovieCard key={movie.id} last={index === 0} movie={movie} genres={genres}/>\n            </div>\n          )) : ''}\n        </div>\n      </div>\n      <div\n        onClick={() => {\n          slider.current.scrollBy({\n            left: slider.current.clientWidth * 0.9,\n            behavior: \"smooth\"\n          })\n        }}\n        className=\"movies-slider__scroll-button movies-slider__scroll-button--right\"\n      >\n        <FontAwesomeIcon icon={faChevronRight}/>\n      </div>\n    </div>\n  )\n}","export const SET_SESSION_ID = \"SESSION/SET_ID\"\nexport const UPDATE_ACCINFO = \"SESSION/UPDATE_ACCINFO\"\nexport const UPDATE_WATCHLIST = \"SESSION/UPDATE_WATCHLIST\"\nexport const UPDATE_FAVORITES = \"SESSION/UPDATE_FAVORITES\"\nexport const GET_WATCHLIST = \"SESSION/GET_WATCHLIST\"\nexport const CLEAN_ACCINFO = \"SESSION/CLEAN_ACCINFO\"\nexport const CLEAN_WATCHLIST = \"SESSION/CLEAN_WATCHLIST\"\nexport const CLEAN_FAVORITES = \"SESSION/CLEAN_FAVORITES\"\n","import { getAccInfo, getFavorites, getMoviesById, getWatchlist } from \"../components/api\"\nimport { CLEAN_ACCINFO, CLEAN_FAVORITES, CLEAN_WATCHLIST, GET_WATCHLIST, SET_SESSION_ID, UPDATE_ACCINFO, UPDATE_FAVORITES, UPDATE_WATCHLIST } from \"./types\"\n\nexport const setSessionId = (session_id) => {\n  localStorage.setItem('session', session_id)\n  return {\n    type: SET_SESSION_ID,\n    payload: session_id\n  }\n}\n\nexport const updateAccInfo = (session_id) => {\n  console.log('upd')\n  return dispatch => {\n    getAccInfo(session_id).then((res) => {\n      localStorage.setItem('accInfo', JSON.stringify(res))\n      dispatch({\n        type: UPDATE_ACCINFO,\n        payload: res,\n      })\n    })\n  }\n}\n\nexport const cleanAccInfo = () => {\n  localStorage.setItem('accInfo', '{}')\n  return ({type: CLEAN_ACCINFO})\n}\n\nexport const cleanWatchlist = () => {\n  localStorage.setItem('watchlist', '{}')\n  return ({type: CLEAN_WATCHLIST})\n}\n\nexport const updateWatchlist = (session_id) => {\n  return dispatch => {\n    getAccInfo(session_id).then((account) => {\n      getWatchlist({session_id, account_id: account.id, media_type: 'tv'}).then((res) => {\n        return res\n      }).then((res) => getWatchlist({session_id,  account_id: account.id, media_type: 'movie'}).then((response) => {\n        localStorage.setItem('watchlist', JSON.stringify({movie: response, tv: res}))\n        return (dispatch({\n          type: UPDATE_WATCHLIST,\n          payload: {movie: response, tv: res},\n        }))\n      }))\n    })\n  }\n}\n\nexport const updateFavoritesList = (session_id) => {\n  return dispatch => {\n    getAccInfo(session_id).then((account) => {\n      getFavorites({session_id, account_id: account.id, media_type: 'tv'}).then((res) => {\n        return res\n      }).then((res) => getFavorites({session_id,  account_id: account.id, media_type: 'movie'}).then((response) => {\n        localStorage.setItem('favorites', JSON.stringify({movie: response, tv: res}))\n        return (dispatch({\n          type: UPDATE_FAVORITES,\n          payload: {movie: response, tv: res},\n        }))\n      }))\n    })\n  }\n}\n\nexport const cleanFavoritesList = () => {\n  localStorage.setItem('favorites', '{}')\n  return ({type: CLEAN_FAVORITES})\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport addButton from '../lottie/addButton.json'\nimport lottie from 'lottie-web';\nimport { connect } from 'react-redux';\nimport { addToWatchlist, getWatchlist } from './api';\nimport { updateWatchlist } from '../redux/actions';\nimport { Link } from 'react-router-dom';\n\nconst classNames = require('classnames')\n\nconst AddToWatchListButton = ({session_id, accInfo, media_id, media_type, watchlist, updateWatchlist}) => {\n  const [active, setActive] = useState(!watchlist[media_type]?.some(({id}) => +media_id === id));\n  const [lottieAnim, setLottieAnim] = useState({})\n  const animation = useRef(null)\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\n\n  useEffect(() => {\n    setLottieAnim(lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: addButton\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim?.setSpeed(2.5)\n    }\n  }, [])\n  useEffect(() => {\n    if(lottieAnim.playSegments && theFirstPlay) {\n      if(active) {\n        console.log('s')\n        lottieAnim?.playSegments([194, 195], true)\n      } else {\n        console.log('b')\n        lottieAnim?.playSegments([115, 116], true)\n      }\n      setTheFirstPlay(false)\n    }\n  }, [lottieAnim])\n\n  useEffect(() => {\n    if(lottieAnim.playSegments) {\n      if(active) {\n        lottieAnim?.playSegments([141, 195], true)\n      } else {\n        lottieAnim?.playSegments([46, 116], true)\n      }\n    }\n  }, [active])\n\n  return (\n    <div\n      onClick={() => {\n        setActive(!active)\n        addToWatchlist({session_id, account_id: accInfo.id, media_type, media_id, watchlist: active})\n          .then(() => {\n            updateWatchlist(session_id)\n          })\n      }}\n      className=\"addToWatchListButton\"\n      ref={animation}\n    >\n    </div>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    session_id: state.session.session,\n    accInfo: state.session.accInfo,\n    watchlist: state.session.watchlist\n  }),\n  {updateWatchlist}\n)(AddToWatchListButton)\n","import React, { useEffect, useRef, useState } from 'react'\nimport favorite from '../lottie/favorite.json'\nimport lottie from 'lottie-web';\nimport { connect } from 'react-redux';\nimport { markAsFavorite } from './api';\nimport { updateFavoritesList } from '../redux/actions';\n\nconst MarkAsFavoriteButton = ({session_id, accInfo, media_id, media_type, favorites, updateFavoritesList}) => {\n  const [active, setActive] = useState(!favorites[media_type]?.some(({id}) => +media_id === id));\n  const [lottieAnim, setLottieAnim] = useState({})\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\n  const animation = useRef(null)\n\n  console.log(active)\n\n  useEffect(() => {\n    setLottieAnim(lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: favorite\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim?.setSpeed(2.5)\n    }\n  }, [])\n\n  useEffect(() => {\n    if(lottieAnim.playSegments && theFirstPlay) {\n      if(active) {\n        console.log('active')\n        lottieAnim.playSegments([0, 1], true)\n      } else {\n        console.log('not active')\n        lottieAnim.playSegments([131, 132], true)\n      }\n      setTheFirstPlay(false)\n    }\n  }, [lottieAnim])\n\n  useEffect(() => {\n    if(lottieAnim.playSegments) {\n      if(active) {\n        lottieAnim?.playSegments([0, 1], true)\n      } else {\n        lottieAnim?.playSegments([61, 131], true)\n      }\n    }\n  }, [active])\n\n  return (\n    <div\n      onClick={() => {\n        setActive(!active)\n        markAsFavorite({session_id, account_id: accInfo.id, media_type, media_id, favorite: active})\n          .then(() => {\n            updateFavoritesList(session_id)\n          })\n      }}\n      className=\"addToWatchListButton\"\n      ref={animation}\n    >\n    </div>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    session_id: state.session.session,\n    accInfo: state.session.accInfo,\n    favorites: state.session.favorites\n  }),\n  {updateFavoritesList}\n)(MarkAsFavoriteButton)\n","import React, { useEffect, useState } from 'react'\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\nimport { getCredits, getCrew, getMovieImg, getMoviesById, getReviews, getSimilar, getTrailer } from '../components/api';\nimport {MoviesSlider} from '../components/MoviesSlider'\nimport AddToWatchListButton from '../components/AddToWatchListButton';\n\nimport { motion } from 'framer-motion';\nimport { connect } from 'react-redux';\nimport MarkAsFavoriteButton from '../components/MarkAsFavoriteButton';\nimport { Picture } from '../components/Picture';\n\nconst MoviePage = ({accInfo}) => {\n  const match = useRouteMatch(\"/:mediaType/:mediaId\");\n  const [cast, setCast] = useState([])\n  const [trailer, setTrailer] = useState([])\n  const [crew, setCrew] = useState([])\n  const [movie, setMovie] = useState({});\n  const [similar, setSimilar] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const location = useLocation();\n  const mediaType = match.params.mediaType\n  const mediaId = match.params.mediaId\n\n  // console.log(accInfo)\n\n  useEffect(() => {\n    getTrailer(mediaId, mediaType).then((response) => { setTrailer(response[0]?.key) })\n    getCrew(mediaId, mediaType).then((response) => { setCrew(response.reverse()) })\n    getCredits(mediaId, mediaType).then((response) => { setCast(response.reverse()) })\n    getMoviesById(mediaId, mediaType).then((response) => { setMovie(response) })\n    getSimilar(mediaId, mediaType).then((response) => { setSimilar(response) })\n    getReviews(mediaId, mediaType).then((response) => { setReviews(response) })\n  }, [location.pathname, mediaId, mediaType])\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [match])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"movie-page\">\n          <section className=\"page__section grid grid--desktop\">\n            <motion.div\n              initial={{opacity: 0, translateX: -100}}\n              animate={{opacity: 1, translateX: 0}}\n              transition={{ duration: 0.5}}\n              className=\"movie-page__poster grid__item--1-4\"\n            >\n              <div className=\"movie-page__poster-img\">\n                <Picture mediaType={mediaType} picture_path={movie.poster_path}/>\n              </div>\n            </motion.div>\n            <div className=\"page__description grid__item--5-12 grid--desktop\">\n              <motion.div\n                initial={{opacity: 0, translateX: -200}}\n                animate={{opacity: 1, translateX: 0}}\n                transition={{ duration: 0.7}}\n                className=\"grid\"\n              >\n                <div className=\"grid__item--1-12 page__title movie-page__title\">\n                  {movie?.title}\n                </div>\n                <div className=\"movie-page__votes grid__item--1-12\">\n                  imdb: <span className=\"movie-page__votes-value\">{movie?.vote_average}</span>\n                </div>\n                <div className=\"movie-page__overview grid__item--1-12\">\n                  {movie.overview}\n                </div>\n                <div className=\"movie-page__genres-list grid__item-1-12\">\n                  {movie.genres?.map(({name}) =>\n                    <div className=\"movie-page__genre\">\n                      {name}\n                    </div>\n                  )}\n                </div>\n                {movie.belongs_to_collection &&\n                  <div className=\"grid__item--1-12\">\n                    collection:\n                    <Link className=\"movie-page__action-title-link\" to={`/collections/${movie.belongs_to_collection.id}`}>\n                      {movie.belongs_to_collection.name}\n                    </Link>\n                  </div>\n                }\n                <div className=\"grid__item--1-12\">\n                  <div className=\"movie-page__action\">\n                    <div className=\"movie-page__activon-title\">\n                      Add to/remove from <Link to={`/watchlist/${match.params.movieType}`} className=\"movie-page__action-title-link\">watchlist</Link>\n                    </div>\n                    {!!accInfo.username\n                      &&\n                        <AddToWatchListButton\n                          media_id={mediaId}\n                          media_type={mediaType}\n                        />\n                    }\n                    {!!accInfo.username\n                      &&\n                        <MarkAsFavoriteButton\n                          media_id={mediaId}\n                          media_type={mediaType}\n                        />\n                    }\n                  </div>\n                </div>\n              </motion.div>\n            </div>\n          </section>\n          <section className=\"page__section\">\n            <div className=\"movie-page__trailer\">\n              <iframe\n                title=\"trailer\"\n                className=\"movie-page__video\"\n                src={`https://www.youtube.com/embed/${trailer}`}\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              />\n            </div>\n          </section>\n          <section className=\"page__section\">\n            <div className=\"page__title\">\n              reviews\n            </div>\n              {\n                reviews.map((review) => (\n                    <div className=\"review\">\n                      <div className=\"review__author\">\n                        <img\n                          src={\n                            getMovieImg(review.author_details.avatar_path, true)\n                          }\n                          alt=\"\"\n                          className=\"review__author-img\"\n                        />\n                        <div className=\"review__author-nickname\">\n                          {review.author_details.name}\n                        </div>\n                      </div>\n                      <div className=\"review__content\">\n                        {review.content}\n                      </div>\n                      <div className=\"review__footer\">\n                        {new Date(review.created_at).toLocaleString('default', { year: 'numeric', month: 'long' })}\n                      </div>\n                    </div>\n                ))\n              }\n          </section>\n          <section className=\"page__section\">\n            {cast.length > 0\n              ?\n                <>\n                  <div className=\"page__title\">\n                   Cast\n                  </div>\n                  <MoviesSlider peopleList={cast} />\n                </>\n              : ''\n            }\n            {crew.length > 0\n              ?\n                <>\n                  <div className=\"page__title\">\n                    Crew\n                  </div>\n                  <MoviesSlider peopleList={crew} />\n                </>\n              : ''\n            }\n          </section>\n          <section className=\"page__section\">\n            <div className=\"page__title\">\n              Similar\n            </div>\n            <MoviesSlider moviesList={similar} />\n          </section>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({accInfo: state.session.accInfo}))(MoviePage)","import React from 'react'\n\nexport const Info = () => {  \n\n  return (\n    <div className=\"info page\">\n      <div className=\"container\">\n        <div className=\"info__param\">\n          <h1 className=\"info__title\">\n            API:\n          </h1>\n          <a href=\"https://www.themoviedb.org/\">\n            <div className=\"info__api\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}","import React, {useState, useEffect, useCallback} from 'react'\nimport \"swiper/swiper-bundle.css\";\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Autoplay } from 'swiper';\nimport { EffectCoverflow } from 'swiper';\n\n\nimport { Navigation, Pagination, A11y, Parallax } from 'swiper';\n\nimport debounce from 'lodash.debounce';\nimport { getMovieImg } from './api';\nimport { Link } from 'react-router-dom';\n\nSwiperCore.use([Autoplay, Pagination, Navigation, EffectCoverflow, Parallax]);\n\nexport const Poster = ({moviesList}) => {\n  const [selectedMovieId, selectMovieId] = useState(0)\n  const moviePicture = new Image(1180, 590);\n  moviePicture.src = `https://image.tmdb.org/t/p/original/${moviesList[selectedMovieId]?.backdrop_path}`\n\n  const nextMovie = () => {\n    if (selectedMovieId === moviesList.length - 1) {\n      selectMovieId(0);\n\n      return\n    }\n\n    selectMovieId(selectedMovieId + 1);\n  }\n\n  const nextMovieWithDebounce = useCallback(debounce(nextMovie, 10000), [selectedMovieId])\n\n  useEffect(() => {\n    nextMovieWithDebounce();\n\n    return nextMovieWithDebounce.cancel;\n  }, [selectedMovieId, nextMovieWithDebounce])\n\n  return (\n    <Swiper\n      modules={[Navigation, Pagination, A11y, EffectCoverflow, Parallax]}\n      effect=\"coverflow\"\n      spaceBetween={0}\n      slidesPerView={1}\n      navigation\n      pagination={{ clickable: true }}\n      loop={true}\n      autoplay={{\n        delay: 5000,\n        disableOnInteraction: false\n      }}\n      onSwiper={(swiper) => console.log(swiper)}\n    >\n        {moviesList?.map((movie) => (\n          <SwiperSlide key={movie.id}>\n            <div className=\"poster\">\n              <Link to={`${movie.media_type}/${movie.id}`}>\n                <img src={getMovieImg(movie.backdrop_path)} className=\"poster__img\" alt=\"\"/>\n                <div className=\"poster__title\">\n                  {movie.title}\n                </div>\n              </Link>\n            </div>\n          </SwiperSlide>\n        ))}\n        <div className=\"prev\"></div>\n        <div className=\"next\"></div>\n      </Swiper>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\nimport { getMoviesByYear } from '../components/api'\nimport { MoviesSlider } from '../components/MoviesSlider';\nimport { Poster } from '../components/Poster';\n\nconst Home = ({accInfo}) => {\n  const [moviesOnPoster, setMoviesOnPoster] = useState([]);\n  const [newTv, setNewTv] = useState([]);\n  const [newMovies, setNewMovies] = useState([]);\n\n  useEffect(() => {\n    getMoviesByYear(\"2021\", 'multi')\n      .then((result) => setMoviesOnPoster(result))\n    getMoviesByYear(\"2021\", 'movie')\n      .then((result) => setNewMovies(result))\n    getMoviesByYear(\"2021\", 'tv')\n      .then((result) => setNewTv(result))\n    // console.log(moviesOnPoster)\n    \n  }, [])\n\n  return (\n    <div className=\"page home\">\n      <div className=\"container\">\n        <h1 className=\"page__title\">\n          {!accInfo?.username\n            ? \"Home\"\n            : `Hi, ${accInfo?.username}!`\n          }\n        </h1>\n        \n        <section className=\"page__section\">\n          <main>\n            <Poster moviesList={moviesOnPoster}/>\n          </main>\n        </section>\n\n        <section className=\"page__section\">\n          <div className=\"page__title\">\n            Newest tv shows\n          </div>\n          <MoviesSlider moviesList={newTv}/>\n        </section>\n        <section className=\"page__section\">\n          <div className=\"page__title\">\n            Newest movies\n          </div>\n          <MoviesSlider moviesList={newMovies}/>\n        </section>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session, accInfo: state.session.accInfo}))(Home)\n","import React, { useEffect, useState } from 'react'\nimport { useRouteMatch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { getCollection, getMovieImg } from '../components/api'\n\nexport const CollectionPage = () => {\n  const match = useRouteMatch('/collections/:collectionId')\n  const [collection, setCollection] = useState({})\n\n  useEffect(() => {\n    getCollection(match.params.collectionId).then((response) => setCollection(response))\n  }, [match.params.collectionId])\n  \n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"collections-page grid\">\n          <div className=\"grid grid__item--1-12\">\n            <div className=\"collections-page__poster grid__item--1-3\">\n              <img src={getMovieImg(collection.poster_path, true)} className=\"collections-page__poster-img\" alt=\"\"></img>\n            </div>\n            <div className=\"page__description grid__item--4-12 grid\">\n              <h2 className=\"page__title grid__item--1-12\">{collection.name}</h2>\n              <div className=\"grid__item--1-12\">{collection.overview}</div>\n            </div>\n          </div>\n          {collection?.parts?.map((part) => (\n            <Link to={`/movie/${part.id}`} className=\"collections-page__part grid grid__item--1-12\">\n              <div className=\"collections-page__poster grid__item--1-2\">\n                <img src={getMovieImg(part.poster_path, true)} className=\"collections-page__poster-img\" alt=\"\"></img>\n              </div>\n              <div className=\"page__title grid__item--3-12\">{part.title}</div>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { getPerson, getPersonImg, getPersonsCredits } from '../components/api';\nimport {MoviesSlider} from '../components/MoviesSlider'\nimport { Picture } from '../components/Picture';\n\nexport const PersonPage = () => {\n  const match = useRouteMatch(\"/person/:personId\");\n  const [credits, setCredits] = useState([]);\n  const [person, setPerson] = useState({})\n  const location = useLocation();\n\n  useEffect(() => {\n    getPerson(match.params.personId).then((response) => setPerson(response));\n    getPersonsCredits(match.params.personId).then((response) => setCredits(response));\n  }, [location, match.params.personId])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"person-page grid\">\n          <div className=\"person-page__poster grid__item--1-4\">\n            <Picture mediaType='person' picture_path={person.profile_path}/>\n          </div>\n          <div className=\"grid__item--5-12\">\n            <h1 className=\"person-page__name\">\n              {person.name}\n            </h1>\n            <div className=\"person-page__params\">\n              <div className=\"person-page__param\">\n                <div>\n                  known for\n                </div>\n                <div/>\n                <div>\n                  {person.known_for_department}\n                </div>\n              </div>\n              <div className=\"person-page__param\">\n                <div>\n                  born\n                </div>\n                <div/>\n                <div>\n                  {person.birthday}\n                </div>\n              </div>\n              {person.deathday &&\n                <div className=\"person-page__param\">\n                  <div>\n                    died\n                  </div>\n                  <div/>\n                  <div>\n                    {person.deathday}\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n          <div className=\"person-page__biography grid__item--1-12\">\n            <h2 className=\"person-page__section-title\">\n              Biography\n            </h2>\n            <div className=\"person-page__biography-main\">\n              {person.biography}\n            </div>\n          </div>\n          <div className=\"grid__item--1-12\">\n            <h2 className=\"person-page__section-title\">\n              Acting\n            </h2>\n            <div>\n              <MoviesSlider moviesList={credits.cast} />\n            </div>\n          </div>\n          {\n            Object.entries(\n              credits.crew?.reduce((prev, cur) => ({\n                filtered: {\n                  [cur.job]: prev.full.filter((e) => e.job === cur.job),\n                  ...prev.filtered,\n                },\n                full: prev.full.filter((e) => e.job !== cur.job)\n              }), {full: credits.crew}).filtered || {}\n            ).sort((a, b) => b[1].length - a[1].length).map((movie) => (\n              <div className=\"grid__item--1-12\">\n              <h2 className=\"person-page__section-title\">\n                {movie[0]}\n              </h2>\n              <div>\n                <MoviesSlider moviesList={movie[1]} />\n              </div>\n            </div>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom';\nconst classNames = require('classnames');\n\nexport const SearchPageCheckbox = ({text, list}) => {\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const [isOpened, open] = useState(false);\n\n  const selectNewOption = (id) => {\n    searchParams.set(text, [searchParams.get(text), id])\n    history.push({ search: searchParams.toString() })\n  }\n  \n  const cencelOption = (id) => {\n    const result = searchParams.get(text)?.split(',').filter((optionId) => optionId !== '' && +optionId !== id);\n    console.log('result ', result)\n    if(result.length === 0) {\n      searchParams.delete(text)\n    } else {\n      searchParams.set(text, result)\n    }\n    history.push({ search: searchParams.toString() })\n  }\n\n  return (\n    <div className=\"checkbox\">\n      <div\n        onClick={() => { open(!isOpened) }}\n        className=\"checkbox__options-switcher\"\n      >\n        <div className={classNames(\"checkbox__options-switcher-text\", {\"checkbox__options-switcher-text--active\": isOpened})}>\n          {text}\n        </div>\n      </div>\n      <div className={\"checkbox__options-block\"}>\n        {\n          list.map(({id, name}) => (\n            <div\n              onClick={() => {\n                if(searchParams.get(text)?.split(',').some((optionId) => +optionId === id)) {\n                  cencelOption(id);\n                  return;\n                }\n                selectNewOption(id)\n              }}\n              className={classNames([\"checkbox__option\", {\"checkbox__option--active\": searchParams.get(text)?.split(',').some((optionId) => +optionId === id)}])}\n              key=\"id\"\n            >\n              {name}\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom';\nconst classNames = require('classnames');\n\nexport const FilterVisibilityToggler = ({filter, title}) => {\n  const [isOpened, open] = useState(false);\n\n  return (\n    <div\n      className={\n        classNames([\n          \"search-page__filter-visibility-toggler\",\n          {\"search-page__filter-visibility-toggler--active\": isOpened}\n        ])\n      }\n      \n    >\n      <div\n        className={\n          classNames([\n            \"search-page__filter-visibility-toggler-text\",\n            {\"search-page__filter-visibility-toggler-text--active\": isOpened}\n          ])\n        }\n        onClick={() => open(!isOpened)}\n      >\n        {title}\n      </div>\n      <div\n        className={classNames([\n          \"search-page__filter-visibility-toggler-content\",\n          {\"search-page__filter-visibility-toggler-content--active\": isOpened}\n        ])}\n      >\n        {filter}\n      </div>\n    </div>\n  )\n}\n","import { debounce } from \"lodash\";\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { discoverMedia, getGenres, getMoviesByTitle } from '../components/api';\nimport { SearchPageCheckbox } from '../components/SearchPageCheckbox';\nimport { SearchPageCrewFilter } from '../components/SearchPageCrewFilter';\nimport { FilterVisibilityToggler } from '../components/FilterVisibilityToggler';\nimport Lottie from 'lottie-web';\nimport search from '../lottie/search.json'\nimport { useHistory, useLocation } from 'react-router';\nimport { MovieCard } from \"../components/MovieCard\";\n\nexport const SearchPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const [genres, setGenres] = useState([]);\n  const animation = useRef(null)\n  const [lottieAnim, setLottieAnim] = useState({})\n  const [query, setQuery] = useState(searchParams.get('with_keywords') || '')\n  const [selectedMediaType, selectMediaType] = useState(searchParams.get('media_type') || '')\n\n  const [resultArr, setResultArr] = useState([])\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n  }, [])\n\n  const applyQuery = useCallback(debounce((value) => {\n    if(value.trim() !== '') {\n      if(!searchParams.get('with_keywords')) {\n        searchParams.append('with_keywords', value);\n      }else {\n        searchParams.set('with_keywords', value);\n      }\n    } else {\n      searchParams.delete('with_keywords');\n    }\n    history.push({search: searchParams.toString()})\n  }, 500), [location]);\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n    setLottieAnim(Lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: search\n    }))\n  }, [])\n  \n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"grid\">\n          <div className=\"search-page__filters-block grid__item--1-4\">\n            <fieldset className=\"search-page__media-type-select-fieldset\">\n              <div className=\"search-page__media-type-select\">\n                <input\n                  type=\"radio\"\n                  id=\"tv\"\n                  name=\"mediaType\"\n                  checked={selectedMediaType === 'tv'}\n                  className=\"search-page__media-type-radio\"\n                  onChange={() => {\n                    searchParams.set('media_type', 'tv')\n                    selectMediaType('tv')\n                    history.push({search: searchParams.toString()})\n                  }}\n                />\n                <label className=\"search-page__media-type-radio-label\" htmlFor=\"tv\"> TV series</label>\n              </div>\n              <div className=\"search-page__media-type-select\">\n                <input\n                  type=\"radio\"\n                  id=\"movie\"\n                  name=\"mediaType\"\n                  checked={selectedMediaType === 'movie'}\n                  className=\"search-page__media-type-radio\"\n                  onChange={() => {\n                    searchParams.set('media_type', 'movie')\n                    selectMediaType('movie')\n                    history.push({search: searchParams.toString()})\n                  }}\n                />\n                <label className=\"search-page__media-type-radio-label\" htmlFor=\"movie\">Movie</label>\n              </div>\n            </fieldset>\n            <div className=\"search-page__filter\">\n            </div>\n            <div className=\"search-page__filter\">\n              <SearchPageCheckbox text=\"genres\" list={genres}/>\n            </div>\n          </div>\n          <div className=\"grid__item--5-12\">\n            <div className=\"search-page__search\">\n              <input\n                value={query}\n                onChange={(event) => {\n                  setQuery(event.target.value)\n                  applyQuery(event.target.value)\n                }}\n                type=\"text\"\n                className=\"search-page__search-input\"\n              />\n              <div\n                onClick={() => {\n                  if(lottieAnim.playSegments) {\n                    lottieAnim.playSegments([0, 21], true)\n                  }\n                    console.log('genres', query.split(' '))\n                    getMoviesByTitle(query, selectedMediaType)\n                      .then((filteredByTitle) => {\n                        const selectedGenres =  searchParams?.get('genres')?.split(',')?.slice(1);\n                        console.log(filteredByTitle, selectedGenres)\n                        if(selectedGenres) {\n                          setResultArr(filteredByTitle?.filter((el) => selectedGenres.slice(1).every((genre) => el.genre_ids.some((id) => +genre === +id))))\n                        } else {\n                          setResultArr(filteredByTitle)\n                        }\n                      })\n\n                    console.log(resultArr)\n                }}\n                ref={animation}\n                className=\"search-page__search-button\"\n              ></div>\n            </div>\n            <div className=\"search-page__results-container\">\n              {resultArr?.map((movie) => (\n                <MovieCard movie={{...movie, media_type: selectedMediaType}} genres={genres}/>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport { HashRouter } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\nimport { store } from '..';\nimport { createSession, createToken, deleteSession } from '../components/api';\nimport { createSessionWithLogin, getAccInfo } from '../components/api';\nimport { cleanAccInfo, setSessionId, updateAccInfo, cleanWatchlist, updateWatchlist } from '../redux/actions';\n\nconst classNames = require('classnames')\n\nconst LoginWindow = ({ session_id, setSessionId, updateAccInfo, cleanAccInfo, cleanWatchlist, updateWatchlist}) => {\n  const location = useLocation()\n  const [userData, setUserData] = useState({username: '', password: ''});\n  const [loading, setLoading] = useState(false);\n  const [isLogged, setLogged] = useState(!!session_id)\n  const [err, setErr] = useState('')\n  const history = useHistory({});\n\n  useEffect(() => {\n    setLogged(!!session_id);\n  }, [location.hash])\n\n  return (\n    <form\n      id=\"login\"\n      action=\"\"\n      className={classNames(\"login\", {\"login--active\": location.hash === '#login'})}\n      onSubmit={(event) => {\n        \n        if(!session_id) {\n          setLoading(true);\n          createToken().then((tockenRes) => {\n            createSessionWithLogin(\n              userData.username,\n              userData.password,\n              tockenRes.request_token,\n            )\n              .then((res) => {\n                createSession(res.request_token)\n                  .then((response) => {\n                    if(response.success) {\n                      history.push({hash:\"#\"})\n                      setSessionId(response.session_id)\n                      updateAccInfo(response.session_id)\n                      updateWatchlist(response.session_id)\n                      \n                    } else {\n                      setErr(response.status_message)\n                    }\n\n                    setLoading(false)\n                  })\n            })\n          })\n\n          return\n        }\n        deleteSession(session_id)\n        cleanAccInfo()\n        cleanWatchlist()\n        setSessionId('')\n      }}\n    >\n      <div className=\"login__title\">\n        {!isLogged ? \"Log in\" : \"Are you sure?\"}\n      </div>\n      <div className=\"login__err\">\n        {err}\n      </div>\n      {!isLogged\n        ?\n          <>\n            {loading &&\n              <lottie-player\n                src={'https://assets8.lottiefiles.com/packages/lf20_knpXLX.json'}\n                background=\"transparent\"\n                speed=\"2\"\n                style={{\n                  width: \"100px\",\n                  height: \"100px\",\n                  margin: \"0 auto\",\n                  }} \n                autoplay\n                onAnimationEnd={() => console.log('end')}\n              />\n            }\n            {!loading &&\n              <>\n                <label htmlFor=\"username\" className=\"login__label\">User name</label>\n                <input\n                  value={userData.username}\n                  onChange={(event) => setUserData({\n                    ...userData,\n                    username: event.target.value\n                  })}\n                  type=\"text\"\n                  id=\"username\"\n                  className=\"login__field\"\n                />\n                <label htmlFor=\"password\" className=\"login__label\">Password</label>\n                <input\n                  value={userData.password}\n                  onChange={(event) => setUserData({\n                    ...userData,\n                    password: event.target.value\n                  })}\n                  type=\"password\"\n                  id=\"password\"\n                  className=\"login__field\"\n                />\n                <button\n                  onClick={() => setErr('')}\n                  type=\"submit\"\n                  className=\"login__submit-button\"\n                >\n                  accept\n                </button>\n              </>\n            }\n          </>\n        :\n          <>\n            <button\n              onClick={() => history.push({hash: '#'})}\n              type=\"submit\"\n              className=\"login__log-out-button\"\n            >\n              Log out\n            </button>\n          </>\n      }\n      <a onClick={() => history.push({hash: '#'})} className=\"login__close-button\"></a>\n      {!isLogged &&\n        <span className=\"login__sign-up-field\">\n          Don't have an account? <a href=\"https://www.themoviedb.org/signup\" className=\"login__sign-up-link\">Sign up!</a>\n        </span>\n      }\n    </form>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session}), {cleanWatchlist, cleanAccInfo, setSessionId, updateAccInfo, updateWatchlist})(LoginWindow)","import React, { useState } from 'react'\nimport \"../styles/blocks/navigation.scss\"\nimport { Link } from 'react-router-dom';\n\nconst classNames = require(\"classnames\");\n\nexport const NavigationDropdown = ({text}) => {\n  const [isActive, setActive] = useState(false); \n\n  return (\n    <>\n      <div\n        className={classNames(\n          \"navigation__dropdown\",\n          {\"navigation__dropdown--active\": isActive}\n        )}\n        onClick={() => setActive(!isActive)}\n        onMouseLeave={() => setActive(false)}\n      >\n        <div className=\"navigation__link-text\">\n          {text}\n        </div>\n        <div className={classNames(\"navigation__dropdown-options-block\", {\"navigation__dropdown-options-block--active\": !isActive})}>\n          <Link to='/watchlist/tv'className=\"navigation__dropdown-option\">\n            <div className=\"navigation__link-text\">\n              watchlist\n            </div>\n          </Link>\n          <Link to='/favorites/tv'className=\"navigation__dropdown-option\">\n            <div className=\"navigation__link-text\">\n              favorites\n            </div>\n          </Link>\n        </div>\n      </div>\n    </>\n  )\n}","import React, { useCallback, useRef, useState } from 'react'\nimport \"../styles/blocks/navigation.scss\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport debounce from 'lodash.debounce'\nimport { getMovieImg, getMoviesByTitle } from './api'\nimport { Link } from 'react-router-dom'\nimport { Picture } from './Picture'\n\nconst classNames = require(\"classnames\")\n\nexport const NavigationSearch = () => {\n  const [isActive, setActive] = useState(false);\n  const [results, setResluts] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  const input = useRef('')\n\n  const onSearch = useCallback(debounce((title) => {\n    getMoviesByTitle(title).then((data) => setResluts((data || []).slice(0, 7)))\n  }, 500), [])\n\n  return (\n    <>\n      <div\n        className={\n          classNames(\n            \"navigation__search\",\n            {\"navigation__search--active\": isActive}\n          )\n        }\n      >\n        <input\n          ref={input}\n          value={text}\n          onChange={(event) => {\n            setText(event.target.value)\n            onSearch(event.target.value)\n            console.log(\"a\");\n          }}\n          onBlur={() => setActive(false)}\n          className={\n            classNames(\n              \"navigation__search-input\",\n              {\"navigation__search-input--active\": isActive}\n            )\n          }\n        >\n        </input>\n        <div\n          onClick={() => {\n            if(isActive === false) {\n              setActive(true)\n              input.current.focus()\n            }else {\n              setActive(false)\n            }\n          }}\n          className={classNames(\"navigation__search-icon\", {\"navigation__search-icon--active\": isActive})}\n        >\n          <FontAwesomeIcon\n            icon={faSearch}\n          />\n        </div>\n        <ul className={classNames(\"navigation__search-results-block\", {\"navigation__search-results-block--active\": (text && isActive)})}>\n          {\n            <>\n              {\n                results.map(result => (\n                  <li key={result.id}>\n                    {\n                      <Link to={`/${result.media_type}/${result.id}`} className=\"navigation__search-result\">\n                        <div className=\"navigation__search-result-img\">\n                          <Picture mediaType={result.media_type} picture_path={result.profile_path || result.poster_path} w500/>\n                        </div>\n                        <h2 className=\"navigation__search-result-title\">\n                          {result.title}\n                        </h2>\n                      </Link>\n                    }\n                  </li>\n                ))\n              }\n              {\n                results.length > 0 ?\n                  <li key={\"end\"}>\n                    <Link to=\"/search\" className=\"navigation__search-more-results\">\n                      more results...\n                    </Link>\n                  </li>\n                :\n                  <li key={\"end\"} className=\"navigation__search-no-results\">\n                    no results\n                  </li>\n              }\n            </>\n          }\n        </ul>\n      </div>\n    </>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { NavigationDropdown } from \"./NavigationDropdown\"\nimport { NavigationSearch } from './NavigationSearch'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { HashLink } from 'react-router-hash-link'\nimport { HashRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getAccInfo, getPersonImg } from './api'\n\nconst Navigation = ({session_id}) => {\n  const [accInfo, setAccInfo] = useState({})\n\n  useEffect(() => {\n    getAccInfo(session_id).then((res) => setAccInfo(res))\n  }, [session_id])\n\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation__content\">\n        {/* elements displayed only on mobiles */}\n        <HashLink\n          // smooth\n          scroll={(el) => el.scrollIntoView()}\n          className=\"navigation__menu\"\n          to=\"#menu\"\n        >\n          <FontAwesomeIcon\n            icon={faBars}\n          />\n        </HashLink>\n\n\n        <Link to=\"/\" className=\"navigation__logo\">\n          PMDb\n        </Link>\n        <div className=\"navigation__main\">\n          <NavigationDropdown text=\"film catalogue\"/>\n          <Link to=\"/info\" className=\"navigation__link\">\n            <div className=\"navigation__link-text\">\n              Info\n            </div>\n          </Link>\n          <Link to=\"/search\" className=\"navigation__link\">\n            <div className=\"navigation__link-text\">\n              search\n            </div>\n          </Link>\n        </div>\n        <div className=\"navigation__right-side-block\">\n          <NavigationSearch></NavigationSearch>\n          <HashLink\n            to=\"#login\"\n            className=\"navigation__link\"\n          >\n            <div className=\"navigation__link-text\">\n              {session_id\n                ? 'log out'\n                : 'log in'\n              }\n            </div>\n          </HashLink>\n          {session_id ?\n            <img\n              src={getPersonImg(accInfo?.avatar?.tmdb?.avatar_path)}\n              alt=\"\"\n              className=\"navigation__avatar\"\n            />\n            : ''\n          }\n        </div>\n      </div>  \n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session}))(Navigation)","import folder from '../lottie/folder.json'\nimport Lottie from 'lottie-web';\nimport { useRouteMatch } from 'react-router';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst classNames = require('classnames')\n\nexport const WatchlistTab = ({title, titleInUrl}) => {\n  const [lottieAnim, setLottieAnim] = useState({})\n  const animation = useRef(null)\n\n  const match = useRouteMatch('/watchlist/:mediaType')\n\n  useEffect(() => {\n    setLottieAnim(Lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      quality: 'hight',\n      loop: false,\n      autoplay: false,\n      animationData: folder\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim.setSpeed(2.5)\n    }\n\n  }, [])\n  \n  useEffect(() => {\n    if(match.params.mediaType === titleInUrl && lottieAnim.playSegments) {\n      lottieAnim?.playSegments([34, 90], true)\n    }\n    if(match.params.mediaType !== titleInUrl && lottieAnim.playSegments) {\n      lottieAnim?.playSegments([0, 1], true)\n    }\n  }, [match.params.mediaType])\n  return (\n    <Link\n      to={`/watchlist/${titleInUrl}`}\n      onMouseOver={() => {\n        if(match.params.mediaType !== titleInUrl) {\n          lottieAnim?.playSegments([21, 34], true)\n        }\n      }}\n      onMouseLeave={() => {\n        if(match.params.mediaType !== titleInUrl) {\n          lottieAnim?.playSegments([0, 1], true)\n        }\n      }}\n      className={classNames(\"watchlist__list-select-link\", {\"watchlist__list-select-link--active\": match.params.mediaType === titleInUrl})}\n    >\n      <div className=\"watchlist__folder-lottie\" ref={animation}></div>\n      {title}\n    </Link>\n  )\n}","import React from 'react'\nimport { getMovieImg } from './api'\nimport { useHistory } from 'react-router';\nimport AddToWatchListButton from './AddToWatchListButton';\n\nconst classNames = require(\"classnames\");\n\nexport const WatchlistElement = ({ movie, genres, media_type}) => {\n  const history = useHistory();\n  return (\n    <div\n      // to={`/${movie.media_type}/${movie.id}`}\n      className={classNames(\"watchlist__card\")}\n    >\n      <img\n        onClick={() => {\n          console.log(history)\n          history.push(`/${movie.media_type}/${movie.id}`)\n        }}\n        src={getMovieImg(movie?.poster_path, true)}\n        alt=\"\"\n        className=\"watchlist__card-img\"\n      />\n      <div className=\"watchlist__description\">\n        <div className=\"watchlist__description-content\">\n          <h1 className=\"watchlist__description-title\">{movie?.title}</h1>\n          <ul className=\"watchlist__description-genres-list\">\n            {movie.genre_ids?.map((genreId) =>\n              <li className=\"watchlist__description-genre\">\n                {genres.find(({id}) => genreId === id)?.name}\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n      <div className=\"watchlist__remove-from-watchlist-block\">\n        <AddToWatchListButton media_id={movie.id} media_type={media_type} />\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { getGenres } from './api';\nimport { WatchlistElement } from './WatchlistElement';\n\nconst classNames = require('classnames');\n\nexport const WatchlistList = ({moviesList, media_type}) => {\n  const slider = useRef(null);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n  }, [])\n\n  return (\n    <div className=\"watchlist__list\">\n      {moviesList?.map((movie) => (\n        <WatchlistElement key={Math.random()}movie={movie} media_type={media_type} genres={genres}/>\n      ))}\n    </div>\n  )\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux';\n\nimport { cleanAccInfo, setSessionId, updateAccInfo, updateWatchlist } from '../redux/actions';\nimport { WatchlistTab } from '../components/WatchlistTab';\nimport { WatchlistList } from '../components/WatchlistList';\nimport { useRouteMatch } from 'react-router';\n\nconst classNames = require('classnames')\n\nconst WatchlistPage = ({session_id, watchlist, updateWatchlist}) => {\n  const match = useRouteMatch('/watchlist/:mediaType')\n\n  useEffect(() => updateWatchlist(session_id), [])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"watchlist\">\n          <div className=\"watchlist__list-select-block\">\n            <WatchlistTab title=\"tv series\" titleInUrl=\"tv\"/>\n            <WatchlistTab title=\"movies\" titleInUrl=\"movie\"/>\n          </div>\n          {match?.params?.mediaType === 'movie'\n            ? <WatchlistList moviesList={watchlist.movie?.map((movie) => ({...movie, media_type: 'movie'}))} media_type=\"movie\"/>\n            : <WatchlistList moviesList={watchlist.tv?.map((movie) => ({...movie, media_type: 'tv'}))} media_type=\"tv\"/>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session ,watchlist: state.session.watchlist}), {cleanAccInfo, setSessionId, updateAccInfo, updateWatchlist})(WatchlistPage)","import folder from '../lottie/folder.json'\nimport Lottie from 'lottie-web';\nimport { useRouteMatch } from 'react-router';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst classNames = require('classnames')\n\nexport const FavoritesTab = ({title, titleInUrl}) => {\n  const [lottieAnim, setLottieAnim] = useState({})\n  const animation = useRef(null)\n\n  const match = useRouteMatch('/favorites/:mediaType')\n\n  useEffect(() => {\n    setLottieAnim(Lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      quality: 'hight',\n      loop: false,\n      autoplay: false,\n      animationData: folder\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim.setSpeed(2.5)\n    }\n\n  }, [])\n  \n  useEffect(() => {\n    if(match.params.mediaType === titleInUrl && lottieAnim.playSegments) {\n      lottieAnim?.playSegments([34, 90], true)\n    }\n    if(match.params.mediaType !== titleInUrl && lottieAnim.playSegments) {\n      lottieAnim?.playSegments([0, 1], true)\n    }\n  }, [match.params.mediaType])\n  return (\n    <Link\n      to={`/favorites/${titleInUrl}`}\n      onMouseOver={() => {\n        if(match.params.mediaType !== titleInUrl) {\n          lottieAnim?.playSegments([21, 34], true)\n        }\n      }}\n      onMouseLeave={() => {\n        if(match.params.mediaType !== titleInUrl) {\n          lottieAnim?.playSegments([0, 1], true)\n        }\n      }}\n      className={classNames(\"watchlist__list-select-link\", {\"watchlist__list-select-link--active\": match.params.mediaType === titleInUrl})}\n    >\n      <div className=\"watchlist__folder-lottie\" ref={animation}></div>\n      {title}\n    </Link>\n  )\n}","import React from 'react'\nimport { getMovieImg } from './api'\nimport { useHistory } from 'react-router';\nimport MarkAsFavoriteButton from './MarkAsFavoriteButton';\n\nconst classNames = require(\"classnames\");\n\nexport const FavoritesListElement = ({ movie, genres, media_type}) => {\n  const history = useHistory();\n  return (\n    <div\n      className={classNames(\"watchlist__card\")}\n    >\n      <img\n        onClick={() => {\n          console.log(history)\n          history.push(`/${movie.media_type}/${movie.id}`)\n        }}\n        src={getMovieImg(movie?.poster_path, true)}\n        alt=\"\"\n        className=\"watchlist__card-img\"\n      />\n      <div className=\"watchlist__description\">\n        <div className=\"watchlist__description-content\">\n          <h1 className=\"watchlist__description-title\">{movie?.title}</h1>\n          <ul className=\"watchlist__description-genres-list\">\n            {movie.genre_ids?.map((genreId) =>\n              <li className=\"watchlist__description-genre\">\n                {genres.find(({id}) => genreId === id)?.name}\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n      <div className=\"watchlist__remove-from-watchlist-block\">\n        <MarkAsFavoriteButton key={movie.id} media_id={movie.id} media_type={media_type} />\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { getGenres } from './api';\nimport { FavoritesListElement } from './FavoritesListElement';\n\nconst classNames = require('classnames');\n\nexport const FavortiesList = ({moviesList, media_type}) => {\n  const slider = useRef(null);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n  }, [])\n\n  return (\n    <div className=\"watchlist__list\">\n      {moviesList?.map((movie) => (\n        <FavoritesListElement key={Math.random()} movie={movie} media_type={media_type} genres={genres}/>\n      ))}\n    </div>\n  )\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux';\n\nimport { cleanAccInfo, setSessionId, updateAccInfo, updateFavoritesList } from '../redux/actions';\nimport { WatchlistList } from '../components/WatchlistList';\nimport { useRouteMatch } from 'react-router';\nimport { FavoritesTab } from '../components/FavoritesTab';\nimport { FavortiesList } from '../components/FavortiesList';\n\nconst classNames = require('classnames')\n\nconst Favorites = ({session_id, favorites, updateFavoritesList}) => {\n  const match = useRouteMatch('/favorites/:mediaType')\n\n  useEffect(() => updateFavoritesList(session_id), [])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"watchlist\">\n          <div className=\"watchlist__list-select-block\">\n            <FavoritesTab title=\"tv series\" titleInUrl=\"tv\"/>\n            <FavoritesTab title=\"movies\" titleInUrl=\"movie\"/>\n          </div>\n          {match?.params?.mediaType === 'movie'\n            ? <FavortiesList moviesList={favorites.movie?.map((movie) => ({...movie, media_type: 'movie'}))} media_type=\"movie\"/>\n            : <FavortiesList moviesList={favorites.tv?.map((movie) => ({...movie, media_type: 'tv'}))} media_type=\"tv\"/>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session, favorites: state.session.favorites}), {cleanAccInfo, setSessionId, updateAccInfo, updateFavoritesList})(Favorites)","import './styles/App.scss';\nimport { Menu } from './components/Menu';\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport MoviePage from './pages/MoviePage';\nimport { Info } from './pages/Info'\nimport Home from './pages/Home'\nimport { CollectionPage } from './pages/CollectionPage';\nimport { PersonPage } from './pages/PersonPage';\nimport {Switch} from 'react-router'\nimport { SearchPage } from './pages/SearchPage';\nimport { useEffect, useState } from 'react';\nimport { getAccInfo } from './components/api';\nimport LoginWindow from './pages/LoginWindow';\nimport Navigation from './components/Navigation'\nimport WatchlistPage from './pages/WatchlistPage';\nimport FavoritesPage from './pages/FavoritesPage';\n\nfunction App() {\n  const match = useRouteMatch('/:mediaType/:mediaId')\n  // const [accInfo, setAccInfo] = useState({});\n\n  // console.log(accInfo)\n\n  // useEffect(() => {\n  //   getAccInfo().then((response) => {setAccInfo(response)})\n  // }, [])\n\n  return (\n    <div className=\"App\">\n      <Navigation/>\n      <LoginWindow/>\n      <Switch>\n        <Route name=\"app\" path=\"/\" exact>\n          <Home/>\n        </Route>\n        <Route name=\"app\" path=\"/search\" exact>\n          <SearchPage/>\n        </Route>\n        <Route path=\"/info\">\n          <Info/>\n        </Route>\n        <Route path=\"/person/:personId\" exact>\n          <PersonPage key={Math.random()} id={match?.params?.personId}/>\n        </Route>\n        <Route path=\"/watchlist/:mediaType\" exact>\n          <WatchlistPage/>\n        </Route>\n        <Route path=\"/favorites/:mediaType\" exact>\n          <FavoritesPage/>\n        </Route>\n        <Route path=\"/:mediaId/:mediaId\" exact>\n          {match?.params?.mediaType !== 'collections'\n            ?\n            <MoviePage id={match?.params?.mediaId} key={Math.random()}/>\n            :\n            <CollectionPage/>\n          }\n        </Route>\n      </Switch>\n      \n      <Menu />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { getAccInfo } from \"../components/api\"\nimport { CLEAN_ACCINFO, CLEAN_FAVORITES, CLEAN_WATCHLIST, SET_SESSION_ID, UPDATE_ACCINFO, UPDATE_FAVORITES, UPDATE_WATCHLIST } from \"./types\"\n\nconst initialState = {\n  session: localStorage.getItem('session') || '',\n  accInfo: JSON.parse(localStorage.getItem('accInfo') || '{}') || {},\n  watchlist: JSON.parse(localStorage.getItem('watchlist') || '{}') || {},\n  favorites: JSON.parse(localStorage.getItem('favorites') || '{}') || {},\n}\n\nexport const sessionReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case SET_SESSION_ID:\n      return ({...state, session: action.payload})\n    case UPDATE_ACCINFO:\n      return ({...state, accInfo: action.payload})\n    case UPDATE_WATCHLIST:\n      console.log(action.payload)\n      return ({...state, watchlist: action.payload})\n    case CLEAN_ACCINFO:\n      return ({...state, accInfo: {}})\n    case CLEAN_WATCHLIST:\n      return ({...state, watchlist: {}})\n    case UPDATE_FAVORITES:\n      console.log(action.payload)\n      return ({...state, favorites: action.payload})\n    case CLEAN_FAVORITES:\n      return ({...state, favorites: {}})\n  }\n  return state\n}\n","import { combineReducers } from \"redux\";\nimport { sessionReducer } from \"./sessionReducer\";\n\nexport const rootReducer = combineReducers({\n  session: sessionReducer,\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createStore } from 'redux';\nimport { rootReducer } from './redux/rootReducer';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Router basename=\"/\">\n        <App />\n      </Router>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}