{"version":3,"sources":["components/Menu.jsx","components/api.js","components/MovieCard.jsx","components/PersonCard.jsx","components/MoviesSlider.jsx","redux/types.jsx","redux/actions.jsx","components/AddToWatchListButton.jsx","pages/MoviePage.jsx","pages/Info.jsx","components/Poster.jsx","pages/Home.jsx","pages/CollectionPage.jsx","pages/PersonPage.jsx","components/SearchPageCrewFilter.jsx","components/SearchPageCheckbox.jsx","components/FilterVisibilityToggler.jsx","pages/SearchPage.jsx","pages/LoginWindow.jsx","components/NavigationDropdown.jsx","components/NavigationSearch.jsx","components/Navigation.jsx","components/WatchlistElement.jsx","components/WatchlistList.jsx","pages/WatchlistPage.jsx","App.jsx","reportWebVitals.js","redux/sessionReducer.jsx","redux/rootReducer.jsx","index.js"],"names":["classNames","require","Menu","location","useLocation","id","className","hash","smooth","to","icon","faChevronLeft","href","BASE_URL","api_key","getMoviesByYear","year","a","type","fetch","then","response","json","data","results","map","el","media_type","result","tvResult","title","name","getWatchlist","session_id","account_id","res","getAccInfo","sid","getPerson","getGenres","genres","getMovieImg","img","w500","getPersonImg","MovieCard","last","movie","history","useHistory","onClick","console","log","push","window","reload","src","poster_path","alt","backdrop_path","genre_ids","genreId","find","PersonCard","person","avatar","useRef","useState","lottieAnim","setLottieAnim","useEffect","profile_path","Lottie","loadAnimation","container","current","renderer","loop","autoplay","hover","animationData","avatarAnim","onMouseOver","play","onMouseLeave","stop","ref","job","character","MoviesSlider","moviesList","peopleList","slider","setGenres","scrollBy","left","clientWidth","behavior","index","faChevronRight","SET_SESSION_ID","UPDATE_ACCINFO","UPDATE_WATCHLIST","CLEAN_ACCINFO","CLEAN_WATCHLIST","setSessionId","localStorage","setItem","payload","updateAccInfo","dispatch","JSON","stringify","cleanAccInfo","updateWatchlist","account","tv","connect","state","session","accInfo","watchlist","media_id","some","active","setActive","animation","theFirstPlay","setTheFirstPlay","lottie","addButton","setSpeed","playSegments","headers","method","body","addToWatchlist","match","useRouteMatch","cast","setCast","trailer","setTrailer","crew","setCrew","setMovie","similar","setSimilar","reviews","setReviews","movieType","params","movieId","key","getCrew","reverse","getCredits","getMoviesById","getSimilar","mediaType","getReviews","pathname","scrollTo","motion","div","initial","opacity","translateX","animate","transition","duration","vote_average","overview","belongs_to_collection","username","frameBorder","allow","allowFullScreen","review","author_details","avatar_path","content","Date","created_at","toLocaleString","month","Info","SwiperCore","use","Autoplay","Pagination","Navigation","EffectCoverflow","Parallax","Poster","selectedMovieId","selectMovieId","Image","nextMovieWithDebounce","useCallback","debounce","length","cancel","modules","A11y","effect","spaceBetween","slidesPerView","navigation","pagination","clickable","delay","disableOnInteraction","onSwiper","swiper","moviesOnPoster","setMoviesOnPoster","newTv","setNewTv","newMovies","setNewMovies","CollectionPage","collection","setCollection","collectionId","parts","part","PersonPage","credits","setCredits","setPerson","personId","known_for_department","birthday","deathday","biography","Object","entries","reduce","prev","cur","filtered","full","filter","e","sort","b","SearchPageCrewFilter","queryName","searchParams","URLSearchParams","search","actors","setActors","selectedActors","setSelectedActors","onSearch","query","slice","get","split","loadPeopleArr","idArr","forEach","addSelectedPerson","set","toString","deleteSelectedPerson","onChange","event","target","value","actor","FilterVisibilityToggler","isOpened","open","SearchPage","cleanWatchlist","token","setToken","password","userData","setUserData","loading","setLoading","isLogged","setLogged","err","setErr","action","onSubmit","tockenRes","request_token","createSessionWithLogin","createSession","success","status_message","deleteSession","background","speed","style","width","height","margin","onAnimationEnd","htmlFor","NavigationDropdown","text","isActive","NavigationSearch","setResluts","setText","input","getMoviesByTitle","onBlur","focus","faSearch","setAccInfo","scroll","scrollIntoView","faBars","tmdb","WatchlistElement","WatchlistList","Math","random","lottieAnim1","setLottieAnim1","lottieAnim2","setLottieAnim2","animation1","animation2","quality","folder","App","path","exact","mediaId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","getItem","parse","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.ff2c31c0.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport { HashLink } from 'react-router-hash-link'\nimport { useLocation } from 'react-router-dom'\n\nconst classNames = require(\"classnames\")\n\nexport const Menu = () => {\n  const location = useLocation()\n\n  return (\n    <div id=\"menu\" className={classNames(\"menu\", {\"menu--active\": location.hash === \"#menu\"})}>\n    \n      <div className=\"navigation\">\n        <div className=\"navigation__content\">\n          <HashLink\n            smooth to=\"#\"\n            className=\"menu__close-button\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft}/>\n          </HashLink>\n        </div>\n      </div>\n      <div className=\"container\">\n        <h1 className=\"menu__title\">\n          Menu\n        </h1>\n        <ul className=\"menu__main\">\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/\">\n              home\n            </HashLink>\n          </li>\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/info\">\n              info\n            </HashLink>\n          </li>\n          <li className=\"menu__main-item\">\n            <a className=\"menu__link\" href=\"#info\">\n              adsadfs\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}","const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst api_key = \"a1cacae9e097c731c0046cf30fa3b749\";\n\nexport const getMoviesByYear = async (year, type = \"movie\") => {\n    if(type === \"multi\") {\n        return fetch(`${BASE_URL}discover/movie?year=${year}&api_key=${api_key}`)\n            .then(response => response.json())\n            .then(data => data.results.map((el) => ({...el, media_type: \"movie\"})))\n            .then((result) => getMoviesByYear(\"2021\", 'tv').then((tvResult) => [...result, ...tvResult.map((el) => ({...el, media_type: \"tv\", title: el.name}))]))\n    }\n\n    return fetch(`${BASE_URL}discover/${type}?year=${year}&api_key=${api_key}`)\n        .then(response => response.json())\n        .then(data => data.results.map((el) => ({...el, media_type: type, title: el.name || el.title})))\n}\n\nexport const createToken = () => fetch(`${BASE_URL}/authentication/token/new?api_key=${api_key}`)\n    .then(response => response.json())\n\nexport const createSessionWithLogin = (username, password, token) => fetch(\n        `https://api.themoviedb.org/3/authentication/token/validate_with_login?api_key=${api_key}`,\n        {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body:  JSON.stringify({\n                username,\n                password,\n                request_token: token\n            })\n        }\n    )\n    .then((res) => res.json())\n\nexport const createSession = (token) => fetch(\n    `https://api.themoviedb.org/3/authentication/session/new?api_key=${api_key}`,\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        method: 'POST',\n        body:  JSON.stringify({\n            request_token: token\n        })\n    }\n)\n.then((res) => res.json())\n\nexport const deleteSession = (session_id) => fetch(\n    `https://api.themoviedb.org/3/authentication/session?api_key=${api_key}`,\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        method: 'POST',\n        body:  JSON.stringify({\n            session_id\n        })\n    }\n)\n\nexport const addToWatchlist = ({session_id, account_id, media_type, media_id, watchlist}) => {\n    return fetch(\n    `https://api.themoviedb.org/3/account/${account_id}/watchlist?api_key=${api_key}&session_id=${session_id}`,\n    {\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Accept': 'application/json'\n        },\n        method: 'POST',\n        body:  JSON.stringify({\n            media_type,\n            media_id,\n            watchlist,\n        })\n    })\n}\n\nexport const getWatchlist = ({session_id, account_id, media_type}) => fetch(\n    `https://api.themoviedb.org/3/account/${account_id}/watchlist/${media_type === 'movie' ? 'movies' : 'tv'}?api_key=${api_key}&session_id=${session_id}`\n)\n    .then((res) => res.json())\n    .then((res) => res.results)\n\nexport const getAccInfo = (sid) => fetch(`${BASE_URL}account?api_key=${api_key}&session_id=${sid}`)\n    .then(response => response.json())\n\nexport const getCredits = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/credits?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.cast)\n\nexport const getTrailer = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/videos?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.results)\n\nexport const getCrew = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/credits?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.crew)\n\nexport const getPersonsCredits = (id) => fetch(`${BASE_URL}person/${id}/combined_credits?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data)\n\nexport const getPerson = (id) => fetch(`${BASE_URL}person/${id}?api_key=${api_key}`)\n    .then(response => response.json())\n\nexport const getPeopleArr = (idArr) => {\n    const resultArr = idArr.map(async (id) => {\n        const response = await fetch(`${BASE_URL}person/${id}?api_key=${api_key}`)\n        const result = response.json();\n        return result;\n    })\n\n    return resultArr;\n}\n\nexport const getReviews = (id, mediaType) => fetch(`${BASE_URL}${mediaType}/${id}/reviews?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(({results}) => results)\n\nexport const findPerson = (query) => fetch(`${BASE_URL}search/person?api_key=${api_key}&query=${query}`)\n    .then(response => response.json())\n    .then(({results}) => results)\n\nexport const getMoviesByTitle = (title) => fetch(`${BASE_URL}search/multi?query=${title}&api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.results)\n\nexport const getMoviesById = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(response => ({...response, media_type: movieType, title: response.title || response.name}))\n\nexport const getGenres = () => fetch(`${BASE_URL}genre/movie/list?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(response => response.genres)\n\nexport const getSimilar = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/similar?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.results.map((el) => ({...el, media_type: movieType, title: el.title || el.name})))\n\nexport const getCollection = (id) => fetch(`${BASE_URL}collection/${id}?api_key=${api_key}`)\n    .then(response => response.json())\n\nexport const getMovieImg = (img, w500 = false) => `https://image.tmdb.org/t/p/${w500 ? \"w500\" : 'original'}/${img}`\n\nexport const getPersonImg = (img, w500 = false) => `https://image.tmdb.org/t/p/${w500 ? \"w500\" : 'original'}/${img}`\n","import React from 'react'\nimport { getMovieImg } from './api'\nimport { useHistory } from 'react-router';\n\nconst classNames = require(\"classnames\");\n\nexport const MovieCard = ({ last = false, movie, genres}) => {\n  const history = useHistory();\n  return (\n    <div\n      // to={`/${movie.media_type}/${movie.id}`}\n      className={classNames(\"movie-card\", {\"movie-card--last\": last})}\n      onClick={() => {\n        console.log(history)\n        history.push(`/${movie.media_type}/${movie.id}`)\n        window.location.reload()\n      }}\n    >\n      <img src={getMovieImg(movie?.poster_path, true)} alt=\"\" className=\"movie-card__img\" />\n      <div className=\"movie-card__description\">\n        <img className=\"movie-card__description-img\" src={getMovieImg(movie.backdrop_path, true)} alt=\"\" />\n        <div className=\"movie-card__description-content\">\n          <h1 className=\"movie-card__description-title\">{movie?.title}</h1>\n          <ul className=\"movie-card__description-ganres-list\">\n            {movie.genre_ids?.map((genreId) =>\n              <li className=\"movie-card__description-ganre\">\n                {genres.find(({id}) => genreId === id)?.name}\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import Lottie from 'lottie-web';\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { getMovieImg } from './api'\nimport avatarAnim from '../lottie/avatar.json'\n\nconst classNames = require(\"classnames\");\n\nexport const PersonCard = ({person}) => {\n  const avatar = useRef({})\n  const [lottieAnim, setLottieAnim] = useState(null)\n\n  useEffect(() => {\n    if(!person.profile_path) {\n      setLottieAnim(Lottie.loadAnimation({\n        container: avatar.current,\n        renderer: 'svg',\n        loop: true,\n        autoplay: false,\n        hover: false,\n        \n        animationData: avatarAnim\n      }))\n    }\n  }, [])\n  return (\n    <Link\n      to={`/people/${person.id}`}\n      onMouseOver={() => lottieAnim?.play()}\n      onMouseLeave={() => lottieAnim?.stop()}\n      className={classNames(\"person-card\")}\n    >\n      {person.profile_path ?\n        <img src={getMovieImg(person.profile_path, true)} alt=\"\" className=\"person-card__img\"/>\n        : <div className=\"person-card__empty-avatar\" ref={avatar}></div>\n      }\n      <div className=\"person-card__job\">\n        {person.job || person.character}\n      </div>\n      <div className=\"person-card__name\">\n        {person.name}\n      </div>\n    </Link>\n  )\n}","import React, { useEffect, useRef, useState } from 'react'\nimport { MovieCard } from './MovieCard';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getGenres } from './api';\nimport { PersonCard } from './PersonCard';\n\nconst classNames = require('classnames');\n\nexport const MoviesSlider = ({moviesList = null, peopleList = []}) => {\n  const slider = useRef(null);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n  }, [])\n\n  return (\n    <div\n      className=\"movies-slider\"\n    >\n      {/* <img src={bannerMovie} className=\"movies-slider__banner\"></img> */}\n      <div\n        onClick={() => {\n          slider.current.scrollBy({\n            left: -1 * slider.current.clientWidth * 0.9,\n            behavior: \"smooth\"\n          })\n        }}\n        className={classNames([\"movies-slider__scroll-button\", \"movies-slider__scroll-button--left\", {\"movies-slider--disabled\": moviesList || peopleList}])}\n        >\n        <FontAwesomeIcon icon={faChevronLeft}/>\n      </div>\n      <div\n        ref={slider}\n        className=\"movies-slider__tape\"\n      >\n        <div className=\"movies-slider__content\">\n          {peopleList.map((person) => (\n            <div>\n              <PersonCard person={person} />\n            </div>\n          ))}\n          {!!moviesList ? moviesList?.map((movie, index) => (\n            <div>\n              <MovieCard last={index === 0} movie={movie} genres={genres}/>\n            </div>\n          )) : ''}\n        </div>\n      </div>\n      <div\n        onClick={() => {\n          slider.current.scrollBy({\n            left: slider.current.clientWidth * 0.9,\n            behavior: \"smooth\"\n          })\n        }}\n        className=\"movies-slider__scroll-button movies-slider__scroll-button--right\"\n      >\n        <FontAwesomeIcon icon={faChevronRight}/>\n      </div>\n    </div>\n  )\n}","export const SET_SESSION_ID = \"SESSION/SET_ID\"\nexport const UPDATE_ACCINFO = \"SESSION/UPDATE_ACCINFO\"\nexport const UPDATE_WATCHLIST = \"SESSION/UPDATE_WATCHLIST\"\nexport const GET_WATCHLIST = \"SESSION/GET_WATCHLIST\"\nexport const CLEAN_ACCINFO = \"SESSION/CLEAN_ACCINFO\"\nexport const CLEAN_WATCHLIST = \"SESSION/CLEAN_WATCHLIST\"","import { getAccInfo, getMoviesById, getWatchlist } from \"../components/api\"\nimport { CLEAN_ACCINFO, CLEAN_WATCHLIST, GET_WATCHLIST, SET_SESSION_ID, UPDATE_ACCINFO, UPDATE_WATCHLIST } from \"./types\"\n\nexport const setSessionId = (session_id) => {\n  localStorage.setItem('session', session_id)\n  return {\n    type: SET_SESSION_ID,\n    payload: session_id\n  }\n}\n\nexport const updateAccInfo = (session_id) => {\n  console.log('upd')\n  return dispatch => {\n    getAccInfo(session_id).then((res) => {\n      localStorage.setItem('accInfo', JSON.stringify(res))\n      dispatch({\n        type: UPDATE_ACCINFO,\n        payload: res,\n      })\n    })\n  }\n}\n\nexport const cleanAccInfo = () => {\n  localStorage.setItem('accInfo', '{}')\n  return ({type: CLEAN_ACCINFO})\n}\n\nexport const cleanWatchlist = () => {\n  localStorage.setItem('watchlist', '{}')\n  return ({type: CLEAN_WATCHLIST})\n}\n\nexport const updateWatchlist = (session_id) => {\n  localStorage.setItem('watchlist', '{}')\n  return dispatch => {\n    getAccInfo(session_id).then((account) => {\n      console.log('accinf', account.id)\n      getWatchlist({session_id, account_id: account.id, media_type: 'tv'}).then((res) => {\n        console.log('accinf', res)\n        return res\n      }).then((res) => getWatchlist({session_id,  account_id: account.id, media_type: 'movie'}).then((response) => {\n        localStorage.setItem('watchlist', JSON.stringify({movie: response, tv: res}))\n        return (dispatch({\n          type: UPDATE_WATCHLIST,\n          payload: {movie: response, tv: res},\n        }))\n      }))\n    })\n  }\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport addButton from '../lottie/addButton.json'\nimport lottie from 'lottie-web';\nimport { connect } from 'react-redux';\nimport { addToWatchlist, getWatchlist } from './api';\nimport { updateWatchlist } from '../redux/actions';\nimport { Link } from 'react-router-dom';\n\nconst classNames = require('classnames')\n\nconst AddToWatchListButton = ({session_id, accInfo, media_id, media_type, watchlist, updateWatchlist}) => {\n  const [active, setActive] = useState(!watchlist[media_type]?.some(({id}) => +media_id === id));\n  const [lottieAnim, setLottieAnim] = useState({})\n  const animation = useRef(null)\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\n\n  useEffect(() => {\n    setLottieAnim(lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: addButton\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim?.setSpeed(2.5)\n    }\n  }, [])\n  useEffect(() => {\n    if(lottieAnim.playSegments && theFirstPlay) {\n      if(active) {\n        console.log('s')\n        lottieAnim?.playSegments([194, 195], true)\n      } else {\n        console.log('b')\n        lottieAnim?.playSegments([115, 116], true)\n      }\n      setTheFirstPlay(false)\n    }\n  }, [lottieAnim])\n\n  useEffect(() => {\n    if(lottieAnim.playSegments) {\n      if(active) {\n        lottieAnim?.playSegments([141, 195], true)\n      } else {\n        lottieAnim?.playSegments([46, 116], true)\n      }\n    }\n  }, [active])\n\n  return (\n    <div\n      onClick={() => {\n        setActive(!active)\n        addToWatchlist({session_id, account_id: accInfo.id, media_type, media_id, watchlist: active})\n          .then(() => {\n            updateWatchlist(session_id)\n          })\n      }}\n      className=\"addToWatchListButton\"\n      ref={animation}\n    >\n    </div>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    session_id: state.session.session,\n    accInfo: state.session.accInfo,\n    watchlist: state.session.watchlist\n  }),\n  {updateWatchlist}\n)(AddToWatchListButton)\n","import React, { useEffect, useState } from 'react'\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\nimport { getCredits, getCrew, getMovieImg, getMoviesById, getReviews, getSimilar, getTrailer } from '../components/api';\nimport {MoviesSlider} from '../components/MoviesSlider'\nimport AddToWatchListButton from '../components/AddToWatchListButton';\n\nimport { motion } from 'framer-motion';\nimport { connect } from 'react-redux';\n\nconst MoviePage = ({accInfo}) => {\n  const match = useRouteMatch(\"/:movieType/:movieId\");\n  const [cast, setCast] = useState([])\n  const [trailer, setTrailer] = useState([])\n  const [crew, setCrew] = useState([])\n  const [movie, setMovie] = useState({});\n  const [similar, setSimilar] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const location = useLocation();\n\n  // console.log(accInfo)\n\n  useEffect(() => {\n    getTrailer(match.params.movieId, match.params.movieType).then((response) => { setTrailer(response[0]?.key) })\n    getCrew(match.params.movieId, match.params.movieType).then((response) => { setCrew(response.reverse()) })\n    getCredits(match.params.movieId, match.params.movieType).then((response) => { setCast(response.reverse()) })\n    getMoviesById(match.params.movieId, match.params.movieType).then((response) => { setMovie(response) })\n    getSimilar(match.params.movieId, match.params.movieType).then((response) => { setSimilar(response) })\n    getReviews(match.params.movieId, match.params.movieType).then((response) => { setReviews(response) })\n  }, [location.pathname, match.params.movieId, match.params.movieType])\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [match])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"movie-page\">\n          <section className=\"page__section grid grid--desktop\">\n            <motion.div\n              initial={{opacity: 0, translateX: -100}}\n              animate={{opacity: 1, translateX: 0}}\n              transition={{ duration: 0.5}}\n              className=\"movie-page__poster grid__item--1-4\"\n            >\n              <img src={getMovieImg(movie.poster_path)} alt=\"\" className=\"movie-page__poster-img\" />\n            </motion.div>\n            <div className=\"page__description grid__item--5-12 grid--desktop\">\n              <motion.div\n                initial={{opacity: 0, translateX: -200}}\n                animate={{opacity: 1, translateX: 0}}\n                transition={{ duration: 0.7}}\n                className=\"grid\"\n              >\n                <div className=\"grid__item--1-12 page__title movie-page__title\">\n                  {movie?.title}\n                </div>\n                <div className=\"movie-page__votes grid__item--1-12\">\n                  imdb: <span className=\"movie-page__votes-value\">{movie?.vote_average}</span>\n                </div>\n                <div className=\"movie-page__overview grid__item--1-12\">\n                  {movie.overview}\n                </div>\n                <div className=\"movie-page__genres-list grid__item-1-12\">\n                  {movie.genres?.map(({name}) =>\n                    <div className=\"movie-page__genre\">\n                      {name}\n                    </div>\n                  )}\n                </div>\n                {movie.belongs_to_collection &&\n                  <div className=\"grid__item--1-12\">\n                    collection:\n                    <Link className=\"movie-page__action-title-link\" to={`/collections/${movie.belongs_to_collection.id}`}>\n                      {movie.belongs_to_collection.name}\n                    </Link>\n                  </div>\n                }\n                <div className=\"grid__item--1-12\">\n                  <div className=\"movie-page__action\">\n                    <div className=\"movie-page__activon-title\">\n                      Add to/remove from <Link to={`/watchlist/${match.params.movieType}`} className=\"movie-page__action-title-link\">watchlist</Link>\n                    </div>\n                    {!!accInfo.username\n                      &&\n                        <AddToWatchListButton\n                          media_id={match.params.movieId}\n                          media_type={match.params.movieType}\n                        />\n                    }\n                  </div>\n                </div>\n              </motion.div>\n            </div>\n          </section>\n          <section className=\"page__section\">\n            <div className=\"movie-page__trailer\">\n              <iframe\n                title=\"trailer\"\n                className=\"movie-page__video\"\n                src={`https://www.youtube.com/embed/${trailer}`}\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              />\n            </div>\n          </section>\n          <section className=\"page__section\">\n            <div className=\"page__title\">\n              reviews\n            </div>\n              {\n                reviews.map((review) => (\n                    <div className=\"review\">\n                      <div className=\"review__author\">\n                        <img\n                          src={\n                            getMovieImg(review.author_details.avatar_path, true)\n                          }\n                          alt=\"\"\n                          className=\"review__author-img\"\n                        />\n                        <div className=\"review__author-nickname\">\n                          {review.author_details.name}\n                        </div>\n                      </div>\n                      <div className=\"review__content\">\n                        {review.content}\n                      </div>\n                      <div className=\"review__footer\">\n                        {new Date(review.created_at).toLocaleString('default', { year: 'numeric', month: 'long' })}\n                      </div>\n                    </div>\n                ))\n              }\n          </section>\n          <section className=\"page__section\">\n            <div className=\"page__title\">\n              Cast\n            </div>\n            <MoviesSlider peopleList={cast} />\n            <div className=\"page__title\">\n              Crew\n            </div>\n            <MoviesSlider peopleList={crew} />\n          </section>\n          <section className=\"page__section\">\n            <div className=\"page__title\">\n              Similar\n            </div>\n            <MoviesSlider moviesList={similar} />\n          </section>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({accInfo: state.session.accInfo}))(MoviePage)","import React from 'react'\n\nexport const Info = () => {  \n\n  return (\n    <div className=\"info page\">\n      <div className=\"container\">\n        <div className=\"info__param\">\n          <h1 className=\"info__title\">\n            API:\n          </h1>\n          <a href=\"https://www.themoviedb.org/\">\n            <div className=\"info__api\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}","import React, {useState, useEffect, useCallback} from 'react'\nimport \"swiper/swiper-bundle.css\";\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Autoplay } from 'swiper';\nimport { EffectCoverflow } from 'swiper';\n\n\nimport { Navigation, Pagination, A11y, Parallax } from 'swiper';\n\nimport debounce from 'lodash.debounce';\nimport { getMovieImg } from './api';\nimport { Link } from 'react-router-dom';\n\nSwiperCore.use([Autoplay, Pagination, Navigation, EffectCoverflow, Parallax]);\n\nexport const Poster = ({moviesList}) => {\n  const [selectedMovieId, selectMovieId] = useState(0)\n  const moviePicture = new Image(1180, 590);\n  moviePicture.src = `https://image.tmdb.org/t/p/original/${moviesList[selectedMovieId]?.backdrop_path}`\n\n  const nextMovie = () => {\n    if (selectedMovieId === moviesList.length - 1) {\n      selectMovieId(0);\n\n      return\n    }\n\n    selectMovieId(selectedMovieId + 1);\n  }\n\n  const nextMovieWithDebounce = useCallback(debounce(nextMovie, 10000), [selectedMovieId])\n\n  useEffect(() => {\n    nextMovieWithDebounce();\n\n    return nextMovieWithDebounce.cancel;\n  }, [selectedMovieId, nextMovieWithDebounce])\n\n  return (\n    <Swiper\n      modules={[Navigation, Pagination, A11y, EffectCoverflow, Parallax]}\n      effect=\"coverflow\"\n      spaceBetween={0}\n      slidesPerView={1}\n      navigation\n      pagination={{ clickable: true }}\n      loop={true}\n      autoplay={{\n        delay: 5000,\n        disableOnInteraction: false\n      }}\n      onSwiper={(swiper) => console.log(swiper)}\n    >\n        {moviesList?.map((movie) => (\n          <SwiperSlide>\n            <div className=\"poster\">\n              <Link to={`${movie.media_type}/${movie.id}`}>\n                <img src={getMovieImg(movie.backdrop_path)} className=\"poster__img\" alt=\"\"/>\n                <div className=\"poster__title\">\n                  {movie.title}\n                </div>\n              </Link>\n            </div>\n          </SwiperSlide>\n        ))}\n        <div className=\"prev\"></div>\n        <div className=\"next\"></div>\n      </Swiper>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\nimport { getMoviesByYear } from '../components/api'\nimport { MoviesSlider } from '../components/MoviesSlider';\nimport { Poster } from '../components/Poster';\n\nconst Home = ({accInfo}) => {\n  const [moviesOnPoster, setMoviesOnPoster] = useState([]);\n  const [newTv, setNewTv] = useState([]);\n  const [newMovies, setNewMovies] = useState([]);\n\n  useEffect(() => {\n    getMoviesByYear(\"2021\", 'multi')\n      .then((result) => setMoviesOnPoster(result))\n    getMoviesByYear(\"2021\", 'movie')\n      .then((result) => setNewMovies(result))\n    getMoviesByYear(\"2021\", 'tv')\n      .then((result) => setNewTv(result))\n    // console.log(moviesOnPoster)\n    \n  }, [])\n\n  return (\n    <div className=\"page home\">\n      <div className=\"container\">\n        <h1 className=\"page__title\">\n          {!accInfo?.username\n            ? \"Home\"\n            : `Hi, ${accInfo?.username}!`\n          }\n        </h1>\n        \n        <section className=\"page__section\">\n          <main>\n            <Poster moviesList={moviesOnPoster}/>\n          </main>\n        </section>\n\n        <section className=\"page__section\">\n          <div className=\"page__title\">\n            Newest tv shows\n          </div>\n          <MoviesSlider moviesList={newTv}/>\n        </section>\n        <section className=\"page__section\">\n          <div className=\"page__title\">\n            Newest movies\n          </div>\n          <MoviesSlider moviesList={newMovies}/>\n        </section>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session, accInfo: state.session.accInfo}))(Home)\n","import React, { useEffect, useState } from 'react'\nimport { useRouteMatch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { getCollection, getMovieImg } from '../components/api'\n\nexport const CollectionPage = () => {\n  const match = useRouteMatch('/collections/:collectionId')\n  const [collection, setCollection] = useState({})\n\n  useEffect(() => {\n    getCollection(match.params.collectionId).then((response) => setCollection(response))\n  }, [match.params.collectionId])\n  \n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"collections-page grid\">\n          <div className=\"grid grid__item--1-12\">\n            <div className=\"collections-page__poster grid__item--1-3\">\n              <img src={getMovieImg(collection.poster_path, true)} className=\"collections-page__poster-img\" alt=\"\"></img>\n            </div>\n            <div className=\"page__description grid__item--4-12 grid\">\n              <h2 className=\"page__title grid__item--1-12\">{collection.name}</h2>\n              <div className=\"grid__item--1-12\">{collection.overview}</div>\n            </div>\n          </div>\n          {collection?.parts?.map((part) => (\n            <Link to={`/movie/${part.id}`} className=\"collections-page__part grid grid__item--1-12\">\n              <div className=\"collections-page__poster grid__item--1-2\">\n                <img src={getMovieImg(part.poster_path, true)} className=\"collections-page__poster-img\" alt=\"\"></img>\n              </div>\n              <div className=\"page__title grid__item--3-12\">{part.title}</div>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { getPerson, getPersonImg, getPersonsCredits } from '../components/api';\nimport {MoviesSlider} from '../components/MoviesSlider'\n\nexport const PersonPage = () => {\n  const match = useRouteMatch(\"/people/:personId\");\n  const [credits, setCredits] = useState([]);\n  const [person, setPerson] = useState({})\n  const location = useLocation();\n\n  useEffect(() => {\n    getPerson(match.params.personId).then((response) => setPerson(response));\n    getPersonsCredits(match.params.personId).then((response) => setCredits(response));\n  }, [location, match.params.personId])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"person-page grid\">\n          <div className=\"person-page__poster grid__item--1-4\">\n            <img src={getPersonImg(person.profile_path)} className=\"person-page__poster-img\" alt=\"\"></img>\n          </div>\n          <div className=\"grid__item--5-12\">\n            <h1 className=\"person-page__name\">\n              {person.name}\n            </h1>\n            <div className=\"person-page__params\">\n              <div className=\"person-page__param\">\n                <div>\n                  known for\n                </div>\n                <div/>\n                <div>\n                  {person.known_for_department}\n                </div>\n              </div>\n              <div className=\"person-page__param\">\n                <div>\n                  born\n                </div>\n                <div/>\n                <div>\n                  {person.birthday}\n                </div>\n              </div>\n              {person.deathday &&\n                <div className=\"person-page__param\">\n                  <div>\n                    died\n                  </div>\n                  <div/>\n                  <div>\n                    {person.deathday}\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n          <div className=\"person-page__biography grid__item--1-12\">\n            <h2 className=\"person-page__section-title\">\n              Biography\n            </h2>\n            <div className=\"person-page__biography-main\">\n              {person.biography}\n            </div>\n          </div>\n          <div className=\"grid__item--1-12\">\n            <h2 className=\"person-page__section-title\">\n              Acting\n            </h2>\n            <div>\n              <MoviesSlider moviesList={credits.cast} />\n            </div>\n          </div>\n          {\n            Object.entries(\n              credits.crew?.reduce((prev, cur) => ({\n                filtered: {\n                  [cur.job]: prev.full.filter((e) => e.job === cur.job),\n                  ...prev.filtered,\n                },\n                full: prev.full.filter((e) => e.job !== cur.job)\n              }), {full: credits.crew}).filtered || {}\n            ).sort((a, b) => b[1].length - a[1].length).map((movie) => (\n              <div className=\"grid__item--1-12\">\n              <h2 className=\"person-page__section-title\">\n                {movie[0]}\n              </h2>\n              <div>\n                <MoviesSlider moviesList={movie[1]} />\n              </div>\n            </div>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useCallback, useEffect, useState } from 'react'\nimport { useHistory, useLocation } from 'react-router';\nimport { findPerson, getPeopleArr, getPerson, getPersonImg } from './api';\nimport debounce from 'lodash.debounce'\n\nexport const SearchPageCrewFilter = ({queryName}) => {\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const [actors, setActors] = useState([]);\n  const [selectedActors, setSelectedActors] = useState([]);\n\n  const onSearch = useCallback(debounce((name) => {\n    findPerson(name).then((data) => setActors((data || []).slice(0, 7)))\n  }, 500), [])\n\n  useEffect(() => {\n    console.log('works')\n    setActors(actors.filter((el) => !searchParams.get(queryName).split(',').some((id) => id === el.id)))\n  }, [searchParams.get(queryName)])\n\n  const loadPeopleArr = async () => {\n    const result = [];\n    await getPeopleArr(searchParams.get(queryName)?.split(',') || []).forEach((el) => el.then((res) => {\n      if(!!res.id) {\n        result.push(res)\n      }\n    }))\n    await setSelectedActors(result)\n    console.log('loaded')\n  }\n\n  const addSelectedPerson = async (id) => {\n    await getPerson(id).then((response) => {setSelectedActors([...selectedActors, response])})\n    searchParams.set(queryName, [searchParams.get(queryName), id])\n    history.push({search: searchParams.toString()})\n  }\n\n  const deleteSelectedPerson = async (id) => {\n    setSelectedActors([...selectedActors].filter((el) => +id !== +el.id))\n    searchParams.set(queryName, searchParams.get(queryName).split(',').filter((el) => +id !== +el))\n    history.push({search: searchParams.toString()})\n  }\n\n  useEffect(() => {\n    loadPeopleArr()\n  }, [])\n\n\n\n  return (\n    <div className=\"actors-filter\">\n      <div className=\"actors-filter__input-container\">\n        <input\n          onChange={(event) => {\n            onSearch(event.target.value)\n          }}\n          className=\"actors-filter__input\"\n        />\n        <div className=\"actors-filter__results-block\">\n          {\n            actors.map((actor) => (\n              <div className=\"actors-filter__result\">\n                <img src={getPersonImg(actor.profile_path, true)} alt=\"\" className=\"actors-filter__result-img\" />\n                <div\n                  onClick={() => addSelectedPerson(actor.id)}\n                  className=\"actors-filter__add-actor\"\n                >\n                  add actor\n                </div>\n              </div>\n            ))\n          }\n        </div>\n\n      </div>\n\n      <div className=\"actors-filter__selected-actors-block\">\n        {selectedActors.map((actor) => (\n          <div className=\"actors-filter__selected-actor\">\n            <img src={getPersonImg(actor.profile_path)} alt=\"\" className=\"actors-filter__selected-actor-img\" />\n            <h3>{actor.name}</h3>\n            <div\n              onClick={() => deleteSelectedPerson(actor.id)}\n              className=\"actors-filter__unselect-actor-button\"\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\n","import React, { useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom';\nconst classNames = require('classnames');\n\nexport const SearchPageCheckbox = ({text, list}) => {\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const [isOpened, open] = useState(false);\n\n  const selectNewOption = (id) => {\n    searchParams.set(text, [searchParams.get(text), id])\n    history.push({ search: searchParams.toString() })\n  }\n  \n  const cencelOption = (id) => {\n    const result = searchParams.get(text)?.split(',').filter((optionId) => optionId !== '' && +optionId !== id);\n    console.log('result ', result)\n    if(result.length === 0) {\n      searchParams.delete(text)\n    } else {\n      searchParams.set(text, result)\n    }\n    history.push({ search: searchParams.toString() })\n  }\n\n  return (\n    <div className=\"checkbox\">\n      <div\n        onClick={() => { open(!isOpened) }}\n        className={classNames(\"checkbox__options-switcher\", {\"checkbox__options-switcher--active\": isOpened})}\n      >\n        {text}\n      </div>\n      <div className={classNames(\"checkbox__options-block\", {\"checkbox__options-block--active\": isOpened})}>\n        {\n          list.map(({id, name}) => (\n            <div\n              onClick={() => {\n                if(searchParams.get(text)?.split(',').some((optionId) => +optionId === id)) {\n                  cencelOption(id);\n                  return;\n                }\n                selectNewOption(id)\n              }}\n              className={classNames([\"checkbox__option\", {\"checkbox__option--active\": searchParams.get(text)?.split(',').some((optionId) => +optionId === id)}])}\n              key=\"id\"\n            >\n              {name}\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom';\nconst classNames = require('classnames');\n\nexport const FilterVisibilityToggler = ({filter, title}) => {\n  const [isOpened, open] = useState(false);\n\n  return (\n    <div\n      className={\n        classNames([\n          \"search-page__filter-visibility-toggler\",\n          {\"search-page__filter-visibility-toggler--active\": isOpened}\n        ])\n      }\n      \n    >\n      <div\n        className={\n          classNames([\n            \"search-page__filter-visibility-toggler-text\",\n            {\"search-page__filter-visibility-toggler-text--active\": isOpened}\n          ])\n        }\n        onClick={() => open(!isOpened)}\n      >\n        {title}\n      </div>\n      <div\n        className={classNames([\n          \"search-page__filter-visibility-toggler-content\",\n          {\"search-page__filter-visibility-toggler-content--active\": isOpened}\n        ])}\n      >\n        {filter}\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { getGenres } from '../components/api';\nimport { SearchPageCheckbox } from '../components/SearchPageCheckbox';\nimport { SearchPageCrewFilter } from '../components/SearchPageCrewFilter';\nimport { FilterVisibilityToggler } from '../components/FilterVisibilityToggler';\n\nexport const SearchPage = () => {\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n  }, [])\n  \n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"grid\">\n          <div className=\"search-page__filters-block grid__item--1-4\">\n            <div className=\"search-page__filter\">\n              <FilterVisibilityToggler\n                title=\"actors filter\"\n                filter={<SearchPageCrewFilter queryName=\"actors\"/>}\n              />\n            </div>\n            {/* <div className=\"search-page__filter\">\n              fsdla\n              <SearchPageCrewFilter queryName=\"crew\"/>\n            </div>\n            <div className=\"search-page__filter\">\n              <SearchPageCheckbox text=\"genres\" list={genres}/>\n            </div> */}\n          </div>\n          <input type=\"text\" className=\"search-page__search grid__item--5-12\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport { HashRouter } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\nimport { store } from '..';\nimport { createSession, createToken, deleteSession } from '../components/api';\nimport { createSessionWithLogin, getAccInfo } from '../components/api';\nimport { cleanAccInfo, setSessionId, updateAccInfo, cleanWatchlist, updateWatchlist } from '../redux/actions';\n\nconst classNames = require('classnames')\n\nconst LoginWindow = ({ session_id, setSessionId, updateAccInfo, cleanAccInfo, cleanWatchlist, updateWatchlist}) => {\n  const location = useLocation()\n  const [token, setToken] = useState('');\n  const [userData, setUserData] = useState({username: '', password: ''});\n  const [loading, setLoading] = useState(false);\n  const [isLogged, setLogged] = useState(!!session_id)\n  const [err, setErr] = useState('')\n  const history = useHistory({});\n\n  useEffect(() => {\n    setLogged(!!session_id);\n  }, [location.hash])\n\n  return (\n    <form\n      id=\"login\"\n      action=\"\"\n      className={classNames(\"login\", {\"login--active\": location.hash === '#login'})}\n      onSubmit={(event) => {\n        \n        if(!session_id) {\n          setLoading(true);\n          createToken().then((tockenRes) => {\n            setToken(tockenRes.request_token)\n  \n            createSessionWithLogin(\n              userData.username,\n              userData.password,\n              token\n            )\n              .then((res) => {\n                createSession(res.request_token)\n                  .then((response) => {\n                    if(response.success) {\n                      history.push({hash:\"#\"})\n                      setSessionId(response.session_id)\n                      updateAccInfo(response.session_id)\n                      updateWatchlist(response.session_id)\n                      \n                    } else {\n                      setErr(response.status_message)\n                    }\n\n                    setLoading(false)\n                  })\n            })\n          })\n\n          return\n        }\n        deleteSession(session_id)\n        cleanAccInfo()\n        cleanWatchlist()\n        setSessionId('')\n      }}\n    >\n      <div className=\"login__title\">\n        {!isLogged ? \"Log in\" : \"Are you sure?\"}\n      </div>\n      <div className=\"login__err\">\n        {err}\n      </div>\n      {!isLogged\n        ?\n          <>\n            {loading &&\n              <lottie-player\n                src={'https://assets8.lottiefiles.com/packages/lf20_knpXLX.json'}\n                background=\"transparent\"\n                speed=\"2\"\n                style={{\n                  width: \"100px\",\n                  height: \"100px\",\n                  margin: \"0 auto\",\n                  }} \n                autoplay\n                onAnimationEnd={() => console.log('end')}\n              />\n            }\n            {!loading &&\n              <>\n                <label htmlFor=\"username\" className=\"login__label\">User name</label>\n                <input\n                  value={userData.username}\n                  onChange={(event) => setUserData({\n                    ...userData,\n                    username: event.target.value\n                  })}\n                  type=\"text\"\n                  id=\"username\"\n                  className=\"login__field\"\n                />\n                <label htmlFor=\"password\" className=\"login__label\">Password</label>\n                <input\n                  value={userData.password}\n                  onChange={(event) => setUserData({\n                    ...userData,\n                    password: event.target.value\n                  })}\n                  type=\"password\"\n                  id=\"password\"\n                  className=\"login__field\"\n                />\n                <button onClick={() => setErr('')} type=\"submit\" className=\"login__submit-button\" >accept</button>\n              </>\n            }\n          </>\n        :\n          <>\n            <button onClick={() => history.push({hash: '#'})} type=\"submit\" className=\"login__log-out-button\" >Log out</button>\n          </>\n      }\n      <a onClick={() => history.push({hash: '#'})} className=\"login__close-button\"></a>\n    </form>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session}), {cleanWatchlist, cleanAccInfo, setSessionId, updateAccInfo, updateWatchlist})(LoginWindow)","import React, { useState } from 'react'\nimport \"../styles/blocks/navigation.scss\"\nimport { Link } from 'react-router-dom';\n\nconst classNames = require(\"classnames\");\n\nexport const NavigationDropdown = ({text}) => {\n  const [isActive, setActive] = useState(false); \n\n  return (\n    <>\n      <div\n        className={classNames(\n          \"navigation__dropdown\",\n          {\"navigation__dropdown--active\": isActive}\n        )}\n        onClick={() => setActive(!isActive)}\n        onMouseLeave={() => setActive(false)}\n      >\n        <div className=\"navigation__link-text\">\n          {text}\n        </div>\n        <div className={classNames(\"navigation__dropdown-options-block\", {\"navigation__dropdown-options-block--active\": !isActive})}>\n          <Link to='/watchlist/tv'className=\"navigation__dropdown-option\">\n            <div className=\"navigation__link-text\">\n              watchlist\n            </div>\n          </Link>\n          <div className=\"navigation__dropdown-option\">\n            <div className=\"navigation__link-text\">\n              aasfadfsdfsa\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}","import React, { useCallback, useRef, useState } from 'react'\nimport \"../styles/blocks/navigation.scss\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport debounce from 'lodash.debounce'\nimport { getMovieImg, getMoviesByTitle } from './api'\nimport { Link } from 'react-router-dom'\n\nconst classNames = require(\"classnames\")\n\nexport const NavigationSearch = () => {\n  const [isActive, setActive] = useState(false);\n  const [results, setResluts] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  const input = useRef('')\n\n  const onSearch = useCallback(debounce((title) => {\n    getMoviesByTitle(title).then((data) => setResluts((data || []).slice(0, 7)))\n  }, 500), [])\n\n  return (\n    <>\n      <div\n        className={\n          classNames(\n            \"navigation__search\",\n            {\"navigation__search--active\": isActive}\n          )\n        }\n      >\n        <input\n          ref={input}\n          value={text}\n          onChange={(event) => {\n            setText(event.target.value)\n            onSearch(event.target.value)\n            console.log(\"a\");\n          }}\n          onBlur={() => setActive(false)}\n          className={\n            classNames(\n              \"navigation__search-input\",\n              {\"navigation__search-input--active\": isActive}\n            )\n          }\n        >\n        </input>\n        <div\n          onClick={() => {\n            if(isActive === false) {\n              setActive(true)\n              input.current.focus()\n            }else {\n              setActive(false)\n            }\n          }}\n          className={classNames(\"navigation__search-icon\", {\"navigation__search-icon--active\": isActive})}\n        >\n          <FontAwesomeIcon\n            icon={faSearch}\n          />\n        </div>\n        <ul className={classNames(\"navigation__search-results-block\", {\"navigation__search-results-block--active\": (text && isActive)})}>\n          {\n            <>\n              {\n                results.map(result => (\n                  <li key={result.id}>\n                    <Link to={`/${result.media_type}/${result.id}`} className=\"navigation__search-result\">\n                      <img src={getMovieImg(result.poster_path, true)} alt=\"\" className=\"navigation__search-result-img\" />\n                      <h2 className=\"navigation__search-result-title\">\n                        {result.title}\n                      </h2>\n                    </Link>\n                  </li>\n                ))\n              }\n              {\n                results.length > 0 ?\n                  <li key={\"end\"} className=\"navigation__search-more-results\">\n                    more results...\n                  </li>\n                :\n                  <li key={\"end\"} className=\"navigation__search-no-results\">\n                    no results\n                  </li>\n              }\n            </>\n          }\n        </ul>\n      </div>\n    </>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { NavigationDropdown } from \"./NavigationDropdown\"\nimport { NavigationSearch } from './NavigationSearch'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { HashLink } from 'react-router-hash-link'\nimport { HashRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getAccInfo, getPersonImg } from './api'\n\nconst Navigation = ({session_id}) => {\n  const [accInfo, setAccInfo] = useState({})\n\n  useEffect(() => {\n    getAccInfo(session_id).then((res) => setAccInfo(res))\n  }, [session_id])\n\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation__content\">\n        {/* elements displayed only on mobiles */}\n        <HashLink\n          // smooth\n          scroll={(el) => el.scrollIntoView()}\n          className=\"navigation__menu\"\n          to=\"#menu\"\n        >\n          <FontAwesomeIcon\n            icon={faBars}\n          />\n        </HashLink>\n\n\n        <Link to=\"/\" className=\"navigation__logo\">\n          PMDb\n        </Link>\n        <div className=\"navigation__main\">\n          <NavigationDropdown text=\"film catalogue\"/>\n          <Link to=\"/info\" className=\"navigation__link\">\n            <div className=\"navigation__link-text\">\n              Info\n            </div>\n          </Link>\n          <Link to=\"/search\" className=\"navigation__link\">\n            <div className=\"navigation__link-text\">\n              search\n            </div>\n          </Link>\n        </div>\n        <div className=\"navigation__right-side-block\">\n          <NavigationSearch></NavigationSearch>\n          <HashLink\n            to=\"#login\"\n            className=\"navigation__link\"\n          >\n            <div className=\"navigation__link-text\">\n              {session_id\n                ? 'log out'\n                : 'log in'\n              }\n            </div>\n          </HashLink>\n          <img src={getPersonImg(accInfo?.avatar?.tmdb?.avatar_path)} alt=\"\" className=\"navigation__avatar\"/>\n        </div>\n      </div>  \n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session}))(Navigation)","import React from 'react'\nimport { getMovieImg } from './api'\nimport { useHistory } from 'react-router';\nimport AddToWatchListButton from './AddToWatchListButton';\n\nconst classNames = require(\"classnames\");\n\nexport const WatchlistElement = ({ movie, genres, media_type}) => {\n  const history = useHistory();\n  return (\n    <div\n      // to={`/${movie.media_type}/${movie.id}`}\n      className={classNames(\"watchlist__card\")}\n    >\n      <img\n        onClick={() => {\n          console.log(history)\n          history.push(`/${movie.media_type}/${movie.id}`)\n        }}\n        src={getMovieImg(movie?.poster_path, true)}\n        alt=\"\"\n        className=\"watchlist__card-img\"\n      />\n      <div className=\"watchlist__description\">\n        <div className=\"watchlist__description-content\">\n          <h1 className=\"watchlist__description-title\">{movie?.title}</h1>\n          <ul className=\"watchlist__description-genres-list\">\n            {movie.genre_ids?.map((genreId) =>\n              <li className=\"watchlist__description-genre\">\n                {genres.find(({id}) => genreId === id)?.name}\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n      <div className=\"watchlist__remove-from-watchlist-block\">\n        <AddToWatchListButton media_id={movie.id} media_type={media_type} />\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { MovieCard } from './MovieCard';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getGenres } from './api';\nimport { PersonCard } from './PersonCard';\nimport { WatchlistElement } from './WatchlistElement';\n\nconst classNames = require('classnames');\n\nexport const WatchlistList = ({moviesList, media_type}) => {\n  const slider = useRef(null);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n  }, [])\n\n  return (\n    <div className=\"watchlist__list\">\n      {moviesList?.map((movie) => (\n        <WatchlistElement key={Math.random()}movie={movie} media_type={media_type} genres={genres}/>\n      ))}\n    </div>\n  )\n}","import React, { useEffect, useRef, useState } from 'react'\nimport { connect } from 'react-redux';\n\nimport { cleanAccInfo, setSessionId, updateAccInfo, updateWatchlist } from '../redux/actions';\nimport { MoviesSlider } from '../components/MoviesSlider';\nimport { WatchlistList } from '../components/WatchlistList';\nimport folder from '../lottie/folder.json'\nimport Lottie from 'lottie-web';\nimport { useRouteMatch } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nconst classNames = require('classnames')\n\nconst WatchlistPage = ({session_id, watchlist, updateWatchlist}) => {\n  const [lottieAnim1, setLottieAnim1] = useState({})\n  const [lottieAnim2, setLottieAnim2] = useState({})\n  const animation1 = useRef(null)\n  const animation2 = useRef(null)\n\n  const match = useRouteMatch('/watchlist/:mediaType')\n\n  useEffect(() => updateWatchlist(session_id), [])\n\n  useEffect(() => {\n    setLottieAnim1(Lottie.loadAnimation({\n      container: animation1.current,\n      renderer: 'svg',\n      quality: 'hight',\n      loop: false,\n      autoplay: false,\n      animationData: folder\n    }))\n    setLottieAnim2(Lottie.loadAnimation({\n      container: animation2.current,\n      renderer: 'svg',\n      quality: 'hight',\n      loop: false,\n      autoplay: false,\n      animationData: folder\n    }))\n  }, [])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"watchlist\">\n          <div className=\"watchlist__list-select-block\">\n            <Link\n              to=\"/watchlist/tv\"\n              onMouseOver={() => {\n                lottieAnim1?.playSegments(0, 35)\n              }}\n              onMouseLeave={() => {\n                lottieAnim1?.stop()\n              }}\n              className={classNames(\"watchlist__list-select-link\", {\"watchlist__list-select-link--active\": match.params.mediaType === 'tv'})}\n            >\n              <div className=\"watchlist__folder-lottie\" ref={animation1}></div>\n              tv\n            </Link>\n            <Link\n              to=\"/watchlist/movie\"\n              onMouseOver={() => {\n                lottieAnim2?.playSegments(0, 35)\n              }}\n              onMouseLeave={() => {\n                lottieAnim2?.stop()\n              }}\n              className={classNames(\"watchlist__list-select-link\", {\"watchlist__list-select-link--active\": match.params.mediaType === 'movie'})}\n            >\n              <div className=\"watchlist__folder-lottie\" ref={animation2}></div>\n              movies\n            </Link>\n          </div>\n          {match?.params?.mediaType === 'movie'\n            ? <WatchlistList moviesList={watchlist.movie?.map((movie) => ({...movie, media_type: 'movie'}))} media_type=\"movie\"/>\n            : <WatchlistList moviesList={watchlist.tv?.map((movie) => ({...movie, media_type: 'tv'}))} media_type=\"tv\"/>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session ,watchlist: state.session.watchlist}), {cleanAccInfo, setSessionId, updateAccInfo, updateWatchlist})(WatchlistPage)","import './styles/App.scss';\nimport { Menu } from './components/Menu';\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport MoviePage from './pages/MoviePage';\nimport { Info } from './pages/Info'\nimport Home from './pages/Home'\nimport { CollectionPage } from './pages/CollectionPage';\nimport { PersonPage } from './pages/PersonPage';\nimport {Switch} from 'react-router'\nimport { SearchPage } from './pages/SearchPage';\nimport { useEffect, useState } from 'react';\nimport { getAccInfo } from './components/api';\nimport LoginWindow from './pages/LoginWindow';\nimport Navigation from './components/Navigation'\nimport WatchlistPage from './pages/WatchlistPage';\n\nfunction App() {\n  const match = useRouteMatch('/:mediaType/:mediaId')\n  // const [accInfo, setAccInfo] = useState({});\n\n  // console.log(accInfo)\n\n  // useEffect(() => {\n  //   getAccInfo().then((response) => {setAccInfo(response)})\n  // }, [])\n\n  return (\n    <div className=\"App\">\n      <Navigation/>\n      <LoginWindow/>\n      <Switch>\n        <Route name=\"app\" path=\"/\" exact>\n          <Home/>\n        </Route>\n        <Route name=\"app\" path=\"/search\" exact>\n          <SearchPage/>\n        </Route>\n        <Route path=\"/info\">\n          <Info/>\n        </Route>\n        <Route path=\"/people/:personId\" exact>\n          <PersonPage id={match?.params?.personId}/>\n        </Route>\n        <Route path=\"/watchlist/:mediaType\" exact>\n          <WatchlistPage/>\n        </Route>\n        <Route path=\"/:mediaId/:mediaId\" exact>\n          {match?.params?.mediaType !== 'collections'\n            ?\n            <MoviePage id={match?.params?.mediaId} key={Math.random()}/>\n            :\n            <CollectionPage/>\n          }\n        </Route>\n      </Switch>\n      \n      <Menu />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { getAccInfo } from \"../components/api\"\nimport { CLEAN_ACCINFO, CLEAN_WATCHLIST, SET_SESSION_ID, UPDATE_ACCINFO, UPDATE_WATCHLIST } from \"./types\"\n\nconst initialState = {\n  session: localStorage.getItem('session') || '',\n  accInfo: JSON.parse(localStorage.getItem('accInfo') || '{}') || {},\n  watchlist: JSON.parse(localStorage.getItem('watchlist') || '{}') || {},\n}\n\nexport const sessionReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case SET_SESSION_ID:\n      return ({...state, session: action.payload})\n    case UPDATE_ACCINFO:\n      return ({...state, accInfo: action.payload})\n    case UPDATE_WATCHLIST:\n      console.log(action.payload)\n      return ({...state, watchlist: action.payload})\n    case CLEAN_ACCINFO:\n      return ({...state, accInfo: {}})\n    case CLEAN_WATCHLIST:\n      return ({...state, watchlist: {}})\n  }\n  return state\n}","import { combineReducers } from \"redux\";\nimport { sessionReducer } from \"./sessionReducer\";\n\nexport const rootReducer = combineReducers({\n  session: sessionReducer,\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createStore } from 'redux';\nimport { rootReducer } from './redux/rootReducer';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Router basename=\"/\">\n        <App />\n      </Router>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}