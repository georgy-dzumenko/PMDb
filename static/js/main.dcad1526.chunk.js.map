{"version":3,"sources":["components/translate.js","components/api.js","redux/types.jsx","redux/actions.jsx","components/Menu.jsx","components/Picture.jsx","components/PersonCard.jsx","components/AddToWatchListButton.jsx","components/MarkAsFavoriteButton.jsx","components/AddToListButton.jsx","components/MovieCard.jsx","components/MoviesSlider.jsx","components/Review.jsx","pages/MoviePage.jsx","pages/Info.jsx","components/Poster.jsx","pages/Home.jsx","pages/CollectionPage.jsx","pages/PersonPage.jsx","components/SearchPageCheckbox.jsx","components/FilterVisibilityToggler.jsx","pages/SearchPage.jsx","pages/LoginWindow.jsx","components/NavigationSearch.jsx","components/NavigationDropdown.jsx","components/Navigation.jsx","components/WatchlistTab.jsx","components/WatchlistElement.jsx","components/WatchlistList.jsx","pages/WatchlistPage.jsx","components/FavoritesTab.jsx","components/FavoritesListElement.jsx","components/FavortiesList.jsx","pages/FavoritesPage.jsx","components/DeleteMovieFromList.jsx","components/ListElement.jsx","components/ListSelector.jsx","components/CreateListButton.jsx","components/AddMoviesToListWindow.jsx","components/AddMoviesToList.jsx","pages/ListsPage.jsx","pages/ProfilePage.jsx","components/ConfirmationWindow.jsx","App.jsx","reportWebVitals.js","redux/sessionReducer.jsx","redux/rootReducer.jsx","index.js"],"names":["language","localStorage","getItem","translate","options","BASE_URL","api_key","checkItemStatus","media_id","session_id","fetch","then","response","json","createList","name","description","headers","method","body","JSON","stringify","removeMovieFromList","list_id","addMovieToList","resp","console","log","addToWatchlist","account_id","media_type","watchlist","getWatchlist","res","results","map","movie","title","getFavorites","getTrending","getAccInfo","sid","getPerson","id","getMoviesByTitle","mediaType","data","getGenres","genres","getMovieImg","img","w500","getPersonImg","SET_SESSION_ID","UPDATE_ACCINFO","UPDATE_WATCHLIST","UPDATE_FAVORITES","CLEAN_ACCINFO","CLEAN_WATCHLIST","CLEAN_FAVORITES","UPDATE_LISTS","CHANGE_LANGUAGE","setSessionId","setItem","type","payload","updateAccInfo","dispatch","iso_639_1","cleanAccInfo","updateWatchlist","account","tv","updateFavoritesList","updateLists","getLists","changeLanguage","classNames","require","connect","state","session","location","useLocation","useState","firstload","setFirstLoad","useEffect","window","reload","className","hash","to","icon","faInfoCircle","onClick","Picture","picture_path","animation","useRef","lottieAnim","setLottieAnim","Lottie","loadAnimation","container","current","animationData","avatar","moviePosterPlug","loop","autoplay","onMouseEnter","play","onMouseLeave","stop","src","alt","ref","PersonCard","person","profile_path","renderer","hover","avatarAnim","onMouseOver","job","character","accInfo","some","active","setActive","theFirstPlay","setTheFirstPlay","lottie","parse","addButton","setSpeed","playSegments","favorites","favorite","markAsFavorite","lists","itemStatus","setItemStatus","toBeAdded","toBeRemoved","changingList","setChangingList","createNewActive","setNewActive","newListData","setNewListData","doesMovieBelongToList","addToListLottie","AnimatePresence","motion","div","initial","opacity","scale","translateX","translateY","animate","exit","transition","duration","onSubmit","event","placeholder","value","onChange","target","list","li","transitionDelay","whileTap","backgroundColor","filter","rotateZ","rotateX","rotateY","style","width","height","objectFit","last","history","useHistory","push","poster_path","backdrop_path","genre_ids","genreId","find","stopPropagation","MoviesSlider","moviesList","peopleList","slider","useInView","inView","useAnimation","start","scaleX","length","scrollBy","left","clientWidth","behavior","faChevronLeft","index","faChevronRight","Review","review","author_details","avatar_path","content","Date","created_at","toLocaleString","year","month","match","useRouteMatch","cast","setCast","trailer","setTrailer","crew","setCrew","setMovie","similar","setSimilar","reviews","setReviews","params","mediaId","movieType","key","getCrew","reverse","getCredits","getMoviesById","el","getSimilar","getReviews","vote_average","overview","belongs_to_collection","frameBorder","allow","allowFullScreen","Info","href","SwiperCore","use","Autoplay","Pagination","Navigation","EffectCoverflow","Parallax","Poster","selectedMovieId","selectMovieId","Image","nextMovieWithDebounce","useCallback","debounce","cancel","modules","A11y","spaceBetween","slidesPerView","navigation","pagination","clickable","delay","disableOnInteraction","onSwiper","swiper","setMoviesOnPoster","trending","setTrending","result","username","CollectionPage","collection","setCollection","collectionId","parts","part","e","PersonPage","credits","setCredits","setPerson","personId","known_for_department","birthday","deathday","biography","Object","entries","reduce","prev","cur","filtered","full","sort","a","b","SearchPageCheckbox","text","searchParams","URLSearchParams","search","isOpened","open","get","split","optionId","delete","set","toString","cencelOption","selectNewOption","SearchPage","setGenres","query","setQuery","selectedMediaType","selectMediaType","resultArr","setResultArr","applyQuery","trim","append","checked","htmlFor","filteredByTitle","selectedGenres","slice","every","genre","cleanWatchlist","password","userData","setUserData","loading","setLoading","isLogged","setLogged","err","setErr","action","tockenRes","token","request_token","createSession","success","status_message","deleteSession","background","speed","margin","onAnimationEnd","NavigationSearch","isActive","setResults","setText","input","onSearch","onBlur","focus","faSearch","ActiveLine","layoutId","right","bottom","position","menuAnimation","avatarAnimation","languageAnim","scroll","scrollIntoView","faBars","AnimateSharedLayout","pathname","onHoverStart","onHoverEnd","tmdb","WatchlistTab","titleInUrl","quality","folder","WatchlistElement","threshold","WatchlistList","Math","random","FavoritesTab","FavoritesListElement","FavortiesList","deleted","setDeleted","isPressed","press","deleteButton","onMouseDown","onMouseUp","media","deleteLottie","heigth","ListSelector","listId","transformOrigin","fontSize","translateDuration","includes","addList","AddMoviesToListSearchResultWithConnect","scaleY","AddMoviesToListWindow","addMoviesToList","DeleteOrClearTheListButtonWithRedux","func","deleteList","clearList","selectedList","selectList","setTitleInputValue","sectionIsActive","setSectionActive","items","display","rotate","ConfirmationWindow","App","path","exact","FavoritesPage","ProfilePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","createHashHistory","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.dcad1526.chunk.js","sourcesContent":["const language = localStorage.getItem('language')\r\n\r\nexport const translate = (options) => (options[language || \"en\"] )\r\n","import { store } from \"..\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\nconst api_key = \"a1cacae9e097c731c0046cf30fa3b749\";\r\n\r\nconst language = localStorage.getItem('language')\r\n\r\nexport const checkItemStatus = (media_id, session_id) => fetch(\r\n    `${BASE_URL}/movie/${media_id}/lists?api_key=${api_key}&session_id=${session_id}&language=${language}`,\r\n).then((response) => response.json())\r\n\r\nexport const createList = (name, description, session_id) => fetch(\r\n    `${BASE_URL}list?api_key=${api_key}&session_id=${session_id}`,\r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            name,\r\n            description,\r\n            // language,\r\n        })\r\n    }    \r\n)\r\n\r\nexport const removeMovieFromList = (list_id, media_id, session_id) => fetch(\r\n    `${BASE_URL}list/${list_id}/remove_item?api_key=${api_key}&session_id=${session_id}`,\r\n    {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify({\r\n            media_id\r\n        })\r\n    }    \r\n)\r\n\r\nexport const addMovieToList = (list_id, media_id, session_id) => fetch(\r\n    `${BASE_URL}list/${list_id}/add_item?api_key=${api_key}&session_id=${session_id}`,\r\n    {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify({\r\n            media_id\r\n        })\r\n    }    \r\n).then((resp) => console.log(resp))\r\n\r\nexport const deleteList = (list_id, session_id) => fetch(\r\n    `${BASE_URL}list/${list_id}?api_key=${api_key}&session_id=${session_id}`,\r\n    {\r\n        method: 'DELETE',\r\n    }    \r\n)\r\nexport const clearList = (list_id, session_id) => fetch(\r\n    `${BASE_URL}list/${list_id}/clear?api_key=${api_key}&session_id=${session_id}&confirm=${true}`,\r\n    {\r\n        method: 'POST',\r\n    }    \r\n)\r\n\r\nexport const getLists = (session_id, account_id) => fetch(`${BASE_URL}account/${account_id}/lists?api_key=${api_key}&session_id=${session_id}&language=${language}&include_image_language=${language},null`)\r\n    .then((res) => res.json())\r\n    .then((res) => res.results)\r\n\r\nexport const getCreatedList = (list_id) => fetch(`${BASE_URL}list/${list_id}?api_key=${api_key}&language=${language}&include_image_language=${language},null`).then((res) => res.json())\r\n\r\nexport const getMoviesByYear = async (year, type = \"movie\") => {\r\n    if(type === \"multi\") {\r\n        return fetch(`${BASE_URL}discover/movie?api_key=${api_key}&language=${language}&include_image_language=${language},null&year=${year}`)\r\n            .then(response => response.json())\r\n            .then(data => data.results.map((el) => ({...el, media_type: \"movie\"})))\r\n            .then((result) => getMoviesByYear(\"2021\", 'tv').then((tvResult) => [...result, ...tvResult.map((el) => ({...el, media_type: \"tv\", title: el.name}))]))\r\n    }\r\n\r\n    return fetch(`${BASE_URL}discover/${type}?year=${year}&api_key=${api_key}`)\r\n        .then(response => response.json())\r\n        .then(data => data.results.map((el) => ({...el, media_type: type, title: el.name || el.title})))\r\n}\r\n\r\nexport const createToken = () => fetch(`${BASE_URL}/authentication/token/new?api_key=${api_key}`)\r\n    .then(response => response.json())\r\n\r\nexport const createSessionWithLogin = (username, password, token) => fetch(\r\n        `${BASE_URL}authentication/token/validate_with_login?api_key=${api_key}`,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body:  JSON.stringify({\r\n                username,\r\n                password,\r\n                request_token: token\r\n            })\r\n        }\r\n    )\r\n    .then((res) => res.json())\r\n\r\nexport const createSession = (token) => fetch(\r\n    `${BASE_URL}authentication/session/new?api_key=${api_key}`,\r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body:  JSON.stringify({\r\n            request_token: token\r\n        })\r\n    }\r\n)\r\n.then((res) => res.json())\r\n\r\nexport const deleteSession = (session_id) => fetch(\r\n    `${BASE_URL}authentication/session?api_key=${api_key}`,\r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        body:  JSON.stringify({\r\n            session_id\r\n        })\r\n    }\r\n)\r\n\r\nexport const addToWatchlist = ({session_id, account_id, media_type, media_id, watchlist}) => {\r\n    return fetch(\r\n    `${BASE_URL}account/${account_id}/watchlist?api_key=${api_key}&session_id=${session_id}`,\r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n            'Accept': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body:  JSON.stringify({\r\n            media_type,\r\n            media_id,\r\n            watchlist,\r\n        })\r\n    })\r\n}\r\n\r\nexport const markAsFavorite = ({session_id, account_id, media_type, media_id, favorite}) => {\r\n    return fetch(\r\n    `${BASE_URL}account/${account_id}/favorite?api_key=${api_key}&session_id=${session_id}`,\r\n    {\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n            'Accept': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body:  JSON.stringify({\r\n            media_type,\r\n            media_id,\r\n            favorite,\r\n        })\r\n    })\r\n}\r\n\r\nexport const getWatchlist = ({session_id, account_id, media_type}) => fetch(\r\n    `${BASE_URL}account/${account_id}/watchlist/${media_type === 'movie' ? 'movies' : 'tv'}?api_key=${api_key}&session_id=${session_id}&language=${language}&include_image_language=${language},null`\r\n)\r\n    .then((res) => res.json())\r\n    .then((res) => res.results.map((movie) => ({...movie, title: movie.title || movie.name})))\r\n\r\nexport const getFavorites = ({session_id, account_id, media_type}) => fetch(\r\n    `${BASE_URL}account/${account_id}/favorite/${media_type === 'movie' ? 'movies' : 'tv'}?api_key=${api_key}&session_id=${session_id}&language=${language}&include_image_language=${language},null`\r\n)\r\n    .then((res) => res.json())\r\n    .then((res) => res.results.map((movie) => ({...movie, title: movie.title || movie.name})))\r\n\r\nexport const getTrending = () => fetch(\r\n    `${BASE_URL}trending/all/day?api_key=${api_key}&language=${language}&include_image_language=${language},null`\r\n)\r\n    .then((res) => res.json())\r\n    .then((res) => res.results.map((movie) => ({...movie, title: movie.title || movie.name})))\r\n\r\nexport const getAccInfo = (sid) => fetch(`${BASE_URL}account?api_key=${api_key}&session_id=${sid}&language=${language}`)\r\n    .then(response => response.json())\r\n\r\nexport const getCredits = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/credits?api_key=${api_key}&language=${language}`)\r\n    .then(response => {\r\n        console.log(`${BASE_URL}${movieType}/${id}/credits?api_key=${api_key}&language=${language}`)\r\n        return response.json()\r\n    })\r\n    .then(data => data.cast)\r\n\r\nexport const getTrailer = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/videos?api_key=${api_key}&language=${language}`)\r\n    .then(response => response.json())\r\n    .then(data => data.results)\r\n\r\nexport const getCrew = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/credits?api_key=${api_key}&language=${language}`)\r\n    .then(response => response.json())\r\n    .then(data => data.crew)\r\n\r\nexport const getPersonsCredits = (id) => fetch(`${BASE_URL}person/${id}/combined_credits?api_key=${api_key}&language=${language}&include_image_language=${language},null`)\r\n    .then(response => response.json())\r\n    .then(data => data)\r\n\r\nexport const getPerson = (id) => fetch(`${BASE_URL}person/${id}?api_key=${api_key}&language=${language}`)\r\n    .then(response => response.json())\r\n\r\nexport const getPeopleArr = (idArr) => {\r\n    const resultArr = idArr.map(async (id) => {\r\n        const response = await fetch(`${BASE_URL}person/${id}?api_key=${api_key}&language=${language}`)\r\n        const result = response.json();\r\n        return result;\r\n    })\r\n\r\n    return resultArr;\r\n}\r\n\r\nexport const getReviews = (id, mediaType) => fetch(`${BASE_URL}${mediaType}/${id}/reviews?api_key=${api_key}&language=${language}`)\r\n    .then(response => response.json())\r\n    .then(({results}) => results)\r\n\r\nexport const findPerson = (query) => fetch(`${BASE_URL}search/person?api_key=${api_key}&query=${query}&language=${language}`)\r\n    .then(response => response.json())\r\n    .then(({results}) => results)\r\n\r\nexport const getMoviesByTitle = (title, mediaType = 'multi') => fetch(`${BASE_URL}search/${mediaType}?query=${title}&api_key=${api_key}&language=${language}&include_image_language=${language},null`)\r\n    .then(response => response.json())\r\n    .then(data => data.results?.map((movie) => ({...movie, title: movie.title || movie.name})))\r\n\r\nexport const getMoviesById = (id, media_type) => fetch(`${BASE_URL}${media_type}/${id}?api_key=${api_key}&language=${language}&include_image_language=${language},null`)\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        console.log(response)\r\n        return ({...response, media_type, title: response.title || response.name})\r\n    })\r\n\r\nexport const discoverMedia = ({ with_people, media_type = 'tv'}) => {\r\n    return fetch(`${BASE_URL}discover/${media_type}?api_key=${api_key}${with_people ?`&with_people=${with_people}` : ''}&language=${language}&include_image_language=${language},null`)\r\n    .then(response => response.json())\r\n    .then(response => response.results)\r\n}\r\n\r\nexport const getGenres = () => fetch(`${BASE_URL}genre/movie/list?api_key=${api_key}&language=${language}`)\r\n    .then(response => response.json())\r\n    .then(response => response.genres)\r\n\r\nexport const getSimilar = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/similar?api_key=${api_key}&language=${language}&include_image_language=${language},null`)\r\n    .then(response => response.json())\r\n    .then(data => data.results.map((el) => ({...el, media_type: movieType, title: el.title || el.name})))\r\n\r\nexport const getCollection = (id) => fetch(`${BASE_URL}collection/${id}?api_key=${api_key}&language=${language}&include_image_language=${language},null`)\r\n    .then(response => response.json())\r\n\r\nexport const getMovieImg = (img, w500 = false) => `https://image.tmdb.org/t/p/${w500 ? \"w500\" : 'original'}/${img}`\r\n\r\nexport const getPersonImg = (img, w500 = false) => img ? `https://image.tmdb.org/t/p/${w500 ? \"w500\" : 'original'}/${img}` : 'guestAvatar.png'\r\n","export const SET_SESSION_ID = \"SESSION/SET_ID\"\r\nexport const UPDATE_ACCINFO = \"SESSION/UPDATE_ACCINFO\"\r\nexport const UPDATE_WATCHLIST = \"SESSION/UPDATE_WATCHLIST\"\r\nexport const UPDATE_FAVORITES = \"SESSION/UPDATE_FAVORITES\"\r\nexport const GET_WATCHLIST = \"SESSION/GET_WATCHLIST\"\r\nexport const CLEAN_ACCINFO = \"SESSION/CLEAN_ACCINFO\"\r\nexport const CLEAN_WATCHLIST = \"SESSION/CLEAN_WATCHLIST\"\r\nexport const CLEAN_FAVORITES = \"SESSION/CLEAN_FAVORITES\"\r\n\r\nexport const UPDATE_LISTS = \"SESSION/UPDATE_LISTS\"\r\nexport const ADD_TO_LIST = \"SESSION/ADD_TO_LIST\"\r\nexport const REMOVE_FROM_LIST = \"SESSION/REMOVE_FROM_LIST\"\r\nexport const CREATE_LIST = \"SESSION/CREATE_LIST\"\r\nexport const DELETE_LIST = \"SESSION/CREATE_LIST\"\r\n\r\nexport const CHANGE_LANGUAGE = \"SESSION/CHANGE_LANGUAGE\"\r\n","import { getAccInfo, getFavorites, getLists, getMoviesById, getWatchlist } from \"../components/api\"\r\nimport { CHANGE_LANGUAGE, CLEAN_ACCINFO, CLEAN_FAVORITES, CLEAN_WATCHLIST, GET_WATCHLIST, SET_SESSION_ID, UPDATE_ACCINFO, UPDATE_FAVORITES, UPDATE_LISTS, UPDATE_WATCHLIST } from \"./types\"\r\n\r\nexport const setSessionId = (session_id) => {\r\n  localStorage.setItem('session', session_id)\r\n  return {\r\n    type: SET_SESSION_ID,\r\n    payload: session_id\r\n  }\r\n}\r\n\r\nexport const updateAccInfo = (session_id) => {\r\n  console.log('res.iso_639_1')\r\n  return dispatch => {\r\n    getAccInfo(session_id).then((res) => {\r\n      localStorage.setItem('accInfo', JSON.stringify(res))\r\n      dispatch({\r\n        type: UPDATE_ACCINFO,\r\n        payload: res,\r\n        language: res.iso_639_1,\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const cleanAccInfo = () => {\r\n  localStorage.setItem('accInfo', '{}')\r\n  return ({type: CLEAN_ACCINFO})\r\n}\r\n\r\nexport const cleanWatchlist = () => {\r\n  localStorage.setItem('watchlist', '{}')\r\n  return ({type: CLEAN_WATCHLIST})\r\n}\r\n\r\nexport const updateWatchlist = (session_id) => {\r\n  return dispatch => {\r\n    getAccInfo(session_id).then((account) => {\r\n      getWatchlist({session_id, account_id: account.id, media_type: 'tv'}).then((res) => {\r\n        return res\r\n      }).then((res) => getWatchlist({session_id,  account_id: account.id, media_type: 'movie'}).then((response) => {\r\n        localStorage.setItem('watchlist', JSON.stringify({movie: response, tv: res}))\r\n        return (dispatch({\r\n          type: UPDATE_WATCHLIST,\r\n          payload: {movie: response, tv: res},\r\n        }))\r\n      }))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateFavoritesList = (session_id) => {\r\n  return dispatch => {\r\n    getAccInfo(session_id).then((account) => {\r\n      getFavorites({session_id, account_id: account.id, media_type: 'tv'}).then((res) => {\r\n        return res\r\n      }).then((res) => getFavorites({session_id,  account_id: account.id, media_type: 'movie'}).then((response) => {\r\n        localStorage.setItem('favorites', JSON.stringify({movie: response, tv: res}))\r\n        return (dispatch({\r\n          type: UPDATE_FAVORITES,\r\n          payload: {movie: response, tv: res},\r\n        }))\r\n      }))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateLists = (session_id) => {\r\n  return dispatch => {\r\n    getAccInfo(session_id).then((account) => {\r\n      getLists(session_id, account.id).then((res) => {\r\n        localStorage.setItem('lists', JSON.stringify(res))\r\n        return (dispatch({\r\n          type: UPDATE_LISTS,\r\n          payload: res,\r\n        }))\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const cleanFavoritesList = () => {\r\n  localStorage.setItem('favorites', '{}')\r\n  return ({type: CLEAN_FAVORITES})\r\n}\r\n\r\nexport const changeLanguage = (language) => {\r\n  localStorage.setItem('language', language)\r\n  return ({type: CHANGE_LANGUAGE, payload: language})\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { HashLink } from 'react-router-hash-link'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { motion } from 'framer-motion';\r\nimport { translate } from './translate';\r\nimport { changeLanguage } from '../redux/actions';\r\nimport { connect } from 'react-redux';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst classNames = require(\"classnames\")\r\n\r\nconst Menu = ({language}) => {\r\n  const location = useLocation()\r\n  const [firstload, setFirstLoad] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log('changed')\r\n    if(!firstload) {\r\n      window.location.reload()\r\n    }\r\n\r\n    setFirstLoad(false)\r\n  }, [language]);\r\n\r\n  return (\r\n    <div id=\"menu\" className={classNames(\"menu\", {\"menu--active\": location.hash === \"#menu\"})}>\r\n    \r\n      {/* <div className=\"navigation\">\r\n        <div className=\"navigation__content\">\r\n          <HashLink\r\n            smooth to=\"#\"\r\n            className=\"menu__close-button\"\r\n          >\r\n            <FontAwesomeIcon icon={faChevronLeft}/>\r\n          </HashLink>\r\n        </div>\r\n      </div> */}\r\n      <div className=\"container\">\r\n        <h1 className=\"menu__title\">\r\n          Menu\r\n          <HashLink className=\"menu__info\" to=\"/info\">\r\n            <FontAwesomeIcon icon={faInfoCircle} />\r\n          </HashLink>\r\n        </h1>\r\n        <ul className=\"menu__main\">\r\n          <li className=\"menu__main-item\">\r\n            <HashLink className=\"menu__link\" to=\"/\">\r\n              home\r\n            </HashLink>\r\n          </li>\r\n          <div className=\"menu__section\">\r\n            <div className=\"menu__section-title\">lists</div>\r\n            <li className=\"menu__main-item\">\r\n              <HashLink className=\"menu__link\" to=\"/watchlist/tv\">\r\n                watchlist\r\n              </HashLink>\r\n            </li>\r\n            <li className=\"menu__main-item\">\r\n              <HashLink className=\"menu__link\" to=\"/favorites/tv\">\r\n                favorites\r\n              </HashLink>\r\n            </li>\r\n            <li className=\"menu__main-item\">\r\n              <HashLink className=\"menu__link\" to=\"/lists\">\r\n                lists\r\n              </HashLink>\r\n            </li>\r\n          </div>\r\n          <div className=\"menu__section\">\r\n            <div className=\"menu__section-title\">account</div>\r\n            <HashLink to='/profile' className=\"menu__link\">\r\n              {translate({\r\n                'en': \"profile\",\r\n                \"uk\": 'профіль'\r\n              })}\r\n            </HashLink>\r\n            <HashLink to='#login'className=\"menu__link\">\r\n              {translate({\r\n                'en': \"log out\",\r\n                \"uk\": 'вийти'\r\n              })}\r\n            </HashLink>\r\n          </div>\r\n          <div className=\"menu__section\">\r\n            <div className=\"menu__section-title\">language</div>\r\n            <div\r\n              onClick={() => {\r\n                changeLanguage('en')\r\n                window.location.reload()\r\n              }} className=\"menu__link\">\r\n              english {language === 'en' && \"✓\"}\r\n            </div>\r\n            <div onClick={() => {\r\n              changeLanguage('uk')\r\n              window.location.reload()\r\n            }}className=\"menu__link\">\r\n              українська {language === 'uk' && \"✓\"}\r\n            </div>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect((state) => ({language: state.session.language}))(Menu)\r\n","import Lottie from 'lottie-web';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { getMovieImg } from './api';\r\nimport moviePosterPlug from '../lottie/moviePosterPlug.json'\r\nimport avatar from '../lottie/avatar.json'\r\n\r\nexport const Picture = ({picture_path, w500 = false, mediaType}) => {\r\n  const animation = useRef(null)\r\n  const [lottieAnim, setLottieAnim] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLottieAnim(Lottie.loadAnimation({\r\n      container: animation.current,\r\n      animationData: mediaType === 'person' ? avatar : moviePosterPlug,\r\n      loop: true,\r\n      autoplay: false,\r\n    }))\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={() => lottieAnim?.play()}\r\n      onMouseLeave={() => lottieAnim?.stop()}\r\n      className='picture'\r\n    >\r\n      {picture_path\r\n        ?\r\n          <img className={'picture__img'} src={getMovieImg(picture_path, w500)} alt=\"\" />\r\n        :\r\n          <div className={'picture__img'} ref={animation}/>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import Lottie from 'lottie-web';\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { getMovieImg } from './api'\r\nimport avatarAnim from '../lottie/avatar.json'\r\nimport { Picture } from './Picture';\r\n\r\nconst classNames = require(\"classnames\");\r\n\r\nexport const PersonCard = ({person}) => {\r\n  const avatar = useRef({})\r\n  const [lottieAnim, setLottieAnim] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if(!person.profile_path) {\r\n      setLottieAnim(Lottie.loadAnimation({\r\n        container: avatar.current,\r\n        renderer: 'svg',\r\n        loop: true,\r\n        autoplay: false,\r\n        hover: false,\r\n        \r\n        animationData: avatarAnim\r\n      }))\r\n    }\r\n  }, [])\r\n  return (\r\n    <Link\r\n      to={`/person/${person.id}`}\r\n      onMouseOver={() => lottieAnim?.play()}\r\n      onMouseLeave={() => lottieAnim?.stop()}\r\n      className={classNames(\"person-card\")}\r\n    >\r\n      <Picture mediaType=\"person\" picture_path={person.profile_path} w500/>\r\n      <div className=\"person-card__job\">\r\n        {person.job || person.character}\r\n      </div>\r\n      <div className=\"person-card__name\">\r\n        {person.name}\r\n      </div>\r\n    </Link>\r\n  )\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport addButton from '../lottie/addButton.json'\r\nimport lottie from 'lottie-web';\r\nimport { connect } from 'react-redux';\r\nimport { addToWatchlist, getWatchlist } from './api';\r\nimport { updateWatchlist } from '../redux/actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst classNames = require('classnames')\r\n\r\nconst AddToWatchListButton = ({session_id, accInfo, media_id, media_type, watchlist, updateWatchlist}) => {\r\n  const [active, setActive] = useState(!watchlist[media_type]?.some(({id}) => +media_id === id));\r\n  const [lottieAnim, setLottieAnim] = useState({})\r\n  const animation = useRef(null)\r\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLottieAnim(lottie.loadAnimation({\r\n      container: animation.current,\r\n      renderer: 'svg',\r\n      loop: false,\r\n      autoplay: false,\r\n      animationData: JSON.parse(JSON.stringify(addButton))\r\n    }))\r\n    if(lottieAnim.setSpeed) {\r\n      lottieAnim?.setSpeed(2.5)\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    if(lottieAnim.playSegments && theFirstPlay) {\r\n      if(active) {\r\n        console.log('s')\r\n        lottieAnim?.playSegments([194, 195], true)\r\n      } else {\r\n        console.log('b')\r\n        lottieAnim?.playSegments([115, 116], true)\r\n      }\r\n      setTheFirstPlay(false)\r\n    }\r\n  }, [lottieAnim])\r\n\r\n  useEffect(() => {\r\n    if(lottieAnim.playSegments) {\r\n      if(active) {\r\n        lottieAnim?.playSegments([141, 195], true)\r\n      } else {\r\n        lottieAnim?.playSegments([46, 116], true)\r\n      }\r\n    }\r\n  }, [active])\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        setActive(!active)\r\n        addToWatchlist({session_id, account_id: accInfo.id, media_type, media_id, watchlist: active})\r\n        .then(() => {\r\n          updateWatchlist(session_id)\r\n        })\r\n      }}\r\n      className=\"addToWatchListButton\"\r\n      ref={animation}\r\n    >\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    session_id: state.session.session,\r\n    accInfo: state.session.accInfo,\r\n    watchlist: state.session.watchlist\r\n  }),\r\n  {updateWatchlist}\r\n)(AddToWatchListButton)\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport favorite from '../lottie/favorite.json'\r\nimport lottie from 'lottie-web';\r\nimport { connect } from 'react-redux';\r\nimport { markAsFavorite } from './api';\r\nimport { updateFavoritesList } from '../redux/actions';\r\n\r\nconst MarkAsFavoriteButton = ({session_id, accInfo, media_id, media_type, favorites, updateFavoritesList}) => {\r\n  const [active, setActive] = useState(!favorites[media_type]?.some(({id}) => +media_id === id));\r\n  const [lottieAnim, setLottieAnim] = useState({})\r\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\r\n  const animation = useRef(null)\r\n\r\n  useEffect(() => {\r\n    setLottieAnim(lottie.loadAnimation({\r\n      container: animation.current,\r\n      renderer: 'svg',\r\n      loop: false,\r\n      autoplay: false,\r\n      animationData: JSON.parse(JSON.stringify(favorite)),\r\n    }))\r\n    if(lottieAnim.setSpeed) {\r\n      lottieAnim?.setSpeed(2.5)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(lottieAnim.playSegments && theFirstPlay) {\r\n      if(active) {\r\n        lottieAnim.playSegments([0, 1], true)\r\n      } else {\r\n        lottieAnim.playSegments([33, 34], true)\r\n      }\r\n      setTheFirstPlay(false)\r\n    }\r\n  }, [lottieAnim])\r\n\r\n  useEffect(() => {\r\n    if(lottieAnim.playSegments) {\r\n      if(active) {\r\n        lottieAnim?.playSegments([0, 1], true)\r\n      } else {\r\n        lottieAnim?.playSegments([0, 34], true)\r\n      }\r\n    }\r\n  }, [active])\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        setActive(!active)\r\n        markAsFavorite({session_id, account_id: accInfo.id, media_type, media_id, favorite: active})\r\n          .then(() => {\r\n            updateFavoritesList(session_id)\r\n          })\r\n      }}\r\n      className=\"mark-as-favorite\"\r\n      ref={animation}\r\n    >\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    session_id: state.session.session,\r\n    accInfo: state.session.accInfo,\r\n    favorites: state.session.favorites\r\n  }),\r\n  {updateFavoritesList}\r\n)(MarkAsFavoriteButton)\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport addToListLottie from '../lottie/addToListLottie.json'\r\nimport lottie from 'lottie-web';\r\nimport { connect } from 'react-redux';\r\nimport { addMovieToList, checkItemStatus, createList, getLists, removeMovieFromList } from './api';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { updateLists } from '../redux/actions';\r\n\r\nconst classNames = require('classnames')\r\n\r\nconst AddToListButton = ({session_id, lists, media_id, updateLists}) => {\r\n  const [active, setActive] = useState(false);\r\n  const [lottieAnim, setLottieAnim] = useState({})\r\n  const [itemStatus, setItemStatus] = useState({})\r\n  const [changingList, setChangingList] = useState({toBeAdded: [], toBeRemoved: []})\r\n  const animation = useRef(null)\r\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\r\n  const [createNewActive, setNewActive] = useState(false);\r\n  const [newListData, setNewListData] = useState({});\r\n\r\n  const setMovieToBeAdded = () => {\r\n    setChangingList({...changingList, toBeAdded: [...changingList.toBeAdded, media_id]})\r\n  }\r\n\r\n  const setMovieToBeRemoved = () => {\r\n    setChangingList({...changingList, toBeRemoved: [...changingList.toBeRemoved, media_id]})\r\n  }\r\n\r\n  const deleteMovieFromChanging = () => {\r\n    setChangingList({\r\n      ...changingList,\r\n      toBeAdded:[...changingList.toBeAdded].filter(({id}) => id !== media_id),\r\n      toBeRemoved: [...changingList.toBeRemoved].filter(({id}) => id !== media_id)\r\n    })\r\n  }\r\n\r\n  const doesMovieBelongToList = (list_id) => {\r\n    if(changingList.toBeRemoved.some(({id}) => list_id === id)) {\r\n      return false;      \r\n    }\r\n    if(changingList.toBeAdded.some(({id}) => list_id === id)) {\r\n      return true\r\n    }\r\n    return itemStatus?.some(({id}) => list_id === id)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLottieAnim(lottie.loadAnimation({\r\n      container: animation.current,\r\n      renderer: 'svg',\r\n      loop: false,\r\n      autoplay: false,\r\n      animationData: JSON.parse(JSON.stringify(addToListLottie))\r\n    }))\r\n    if(lottieAnim.setSpeed) {\r\n      lottieAnim?.setSpeed(2.5)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    checkItemStatus(media_id, session_id).then((response) => {\r\n      console.log('status', response)\r\n      setItemStatus(response.results)\r\n    });\r\n  }, [lists])\r\n\r\n  useEffect(() => {\r\n    if(lottieAnim.playSegments && theFirstPlay) {\r\n      if(active) {\r\n        console.log('s')\r\n        lottieAnim?.playSegments([79, 125], true)\r\n      } else {\r\n        console.log('b')\r\n        lottieAnim?.playSegments([0, 1], true)\r\n      }\r\n      setTheFirstPlay(false)\r\n    }\r\n  }, [lottieAnim])\r\n\r\n  useEffect(() => {\r\n    \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    \r\n  }, [active])\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => {\r\n          console.log(lists)\r\n          if(lottieAnim?.playSegments) {\r\n            lottieAnim?.playSegments([0, 125], true)\r\n          }\r\n          setActive(!active)\r\n          // addMovieToList(1, media_id, session_id)\r\n          // .then(() => {\r\n          //   updateLists(session_id)\r\n          // })\r\n        }}\r\n        className=\"addToWatchListButton\"\r\n        ref={animation}\r\n      >\r\n      </div>\r\n      <AnimatePresence>\r\n        {active &&\r\n          <motion.div\r\n            initial={{opacity: 0, scale: 0, translateX: '-50%', translateY: '-50%'}}\r\n            animate={{opacity: 1, scale: 1, translateX: '-50%', translateY: '-50%'}}\r\n            exit={{opacity: 0, scale: 0, translateX: '-50%', translateY: '-50%'}}\r\n            transition={{ duration: 0.1}}\r\n            className=\"action-window\"\r\n          >\r\n            <div className=\"action-window__header\">\r\n              <div className=\"action-window__close-button\" onClick={() => setActive(false)}></div>\r\n              <a\r\n                className=\"action-window__create-list-button\"\r\n                onClick={() => setNewActive(!createNewActive)}\r\n              >\r\n                {!createNewActive ? \"create new list\" : '< back'}\r\n              </a>\r\n            </div>\r\n            <div className=\"action-window__content\">\r\n              <div className=\"action-window__title\">\r\n                {!createNewActive\r\n                  ? \"select list\"\r\n                  : \"create list\"\r\n                }\r\n              </div>\r\n              {createNewActive\r\n                ?\r\n                  <motion.div\r\n                    initial={{opacity: 0, translateX: -100}}\r\n                    animate={{opacity: 1, translateX: 0}}\r\n                    transition={{ duration: 0.2}}\r\n                  >\r\n                    <form onSubmit={(event) => {\r\n                      console.log(newListData)\r\n                      createList(newListData.name, newListData.description, session_id).then(() => {\r\n                        updateLists(session_id)\r\n                        setNewActive(false);\r\n                      })\r\n                      \r\n                    }}>\r\n                      Your custom list name*\r\n                      <input\r\n                        placeholder='Movies for my mom'\r\n                        value={newListData.name}\r\n                        onChange={(event) => {\r\n                          setNewListData({...newListData, name: event.target.value})\r\n                        }}\r\n                        className=\"action-window__input\"\r\n                        type=\"text\"\r\n                      />\r\n                      Your custom list description*\r\n                      <input\r\n                        placeholder='Only those she loves'\r\n                        value={newListData.description}\r\n                        onChange={(event) => {\r\n                          setNewListData({...newListData, description: event.target.value})\r\n                        }}\r\n                        className=\"action-window__input\"\r\n                        type=\"textfield\"\r\n                      />\r\n                      <button className=\"action-window__submit-button\" type=\"submit\">Create</button>\r\n                    </form>\r\n                  </motion.div>\r\n                :\r\n                  <ul className=\"action-window__list\">\r\n                    {lists.map((list) => (\r\n                      <motion.li\r\n                        initial={{translateX: '-100%', opacity: 0, transitionDelay: 0.1}}\r\n                        animate={{translateX: 0, opacity: 1}}\r\n                        whileTap={{backgroundColor: 'lightgreen', scale: 1.1}}\r\n                        onClick={() => {\r\n                          if(doesMovieBelongToList(list.id)){\r\n                            setMovieToBeRemoved();\r\n                            removeMovieFromList(list.id, media_id, session_id)\r\n                          } else {\r\n                            setMovieToBeAdded()\r\n                            addMovieToList(list.id, media_id, session_id)\r\n                            deleteMovieFromChanging()\r\n                          }\r\n\r\n                          updateLists(session_id)\r\n                          \r\n                          checkItemStatus(media_id, session_id).then((response) => {\r\n                            console.log('status', response)\r\n                            setItemStatus(response.results)\r\n                          });\r\n                          return\r\n                        }}\r\n                        key={list.id}\r\n                        className=\"action-window__list-element\"\r\n                      >\r\n                        {list.name}\r\n                        {doesMovieBelongToList(list.id) &&\r\n                          <motion.img\r\n                            initial={{rotateZ: '-45deg', rotateX: '-45deg', rotateY: '-45deg'}}\r\n                            animate={{rotateZ: 0, rotateX: 0, rotateY: 0}}\r\n                            style={{width: '25px', height: '25px', objectFit: 'contain'}}\r\n                            src={'checkmark.png'}\r\n                            alt=\"added\"\r\n                          />\r\n                        }\r\n                      </motion.li>\r\n                    ))}\r\n                  </ul>\r\n              }\r\n            </div>\r\n          </motion.div>\r\n        }\r\n      </AnimatePresence>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    session_id: state.session.session,\r\n    accInfo: state.session.accInfo,\r\n    lists: state.session.lists\r\n  }),\r\n  {updateLists}\r\n)(AddToListButton)\r\n","import React from 'react'\r\nimport { getMovieImg } from './api'\r\nimport { Picture } from './Picture';\r\nimport AddToWatchListButton from './AddToWatchListButton';\r\nimport MarkAsFavoriteButton from './MarkAsFavoriteButton';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport AddToListButton from './AddToListButton';\r\n\r\nconst classNames = require(\"classnames\");\r\n\r\nconst MovieCard = ({ last = false, movie, genres}) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\"movie-card\", {\"movie-card--last\": last})}\r\n      onClick={() => {\r\n        history.push(`/${movie.media_type}/${movie.id}`)\r\n        window.location.reload();\r\n      }}\r\n    >\r\n      <div\r\n        className=\"movie-card__img-container\"\r\n      >\r\n        <Picture picture_path={movie?.poster_path} w500/>\r\n      </div>\r\n      <div className=\"movie-card__description\">\r\n        {movie.backdrop_path\r\n          ?\r\n            <img className=\"movie-card__description-img\" src={getMovieImg(movie.backdrop_path, true)} alt=\"\" />\r\n          :\r\n            ''\r\n        }\r\n        <div className=\"movie-card__description-content\">\r\n          <h1 className=\"movie-card__description-title\">{movie?.title}</h1>\r\n          <ul className=\"movie-card__description-ganres-list\">\r\n            {movie.genre_ids?.map((genreId) =>\r\n              <li key={genreId} className=\"movie-card__description-ganre\">\r\n                {genres.find(({id}) => genreId === id)?.name}\r\n              </li>\r\n            )}\r\n          </ul>\r\n          <div onClick={(event) => {event.stopPropagation()}} className=\"movie-card__actions-container\">\r\n            <AddToWatchListButton media_id={movie.id} media_type={movie.media_type}/>\r\n            <MarkAsFavoriteButton media_id={movie.id} media_type={movie.media_type}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect((state) => ({genres: state.session.genres}))(MovieCard)\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { PersonCard } from './PersonCard';\r\nimport MovieCard from './MovieCard';\r\nimport { motion, useAnimation, useTrnsform, useViewportScroll } from 'framer-motion';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nconst classNames = require('classnames');\r\n\r\nexport const MoviesSlider = ({moviesList = [], peopleList = []}) => {\r\n  const slider = useRef(null);\r\n  const {ref, inView} = useInView()\r\n  const animation = useAnimation();\r\n\r\n  useEffect(() => {\r\n    if(inView) {\r\n      animation.start({\r\n        scaleX: 1\r\n      })\r\n    } else {\r\n      animation.start({\r\n        scaleX: 0\r\n      })\r\n    }\r\n  }, [inView])\r\n\r\n  return (\r\n    <motion.div\r\n      ref={ref}\r\n      animate={animation}\r\n      className={classNames(\"movies-slider\", {\"movies-slider--disabled\": [...moviesList, ...peopleList].length === 0})}\r\n    >\r\n      <div\r\n        onClick={() => {\r\n          slider.current.scrollBy({\r\n            left: -1 * slider.current.clientWidth * 0.9,\r\n            behavior: \"smooth\"\r\n          })\r\n        }}\r\n        className={classNames([\"movies-slider__scroll-button\", \"movies-slider__scroll-button--left\", {\"movies-slider--disabled\": moviesList || peopleList}])}\r\n        >\r\n        <FontAwesomeIcon icon={faChevronLeft}/>\r\n      </div>\r\n      <div\r\n        ref={slider}\r\n        className=\"movies-slider__tape\"\r\n      >\r\n        <div className=\"movies-slider__content\">\r\n          {peopleList.map((person) => (\r\n            <div>\r\n              <PersonCard key={person.id} person={person} />\r\n            </div>\r\n          ))}\r\n          {!!moviesList ? moviesList?.map((movie, index) => (\r\n            <div>\r\n              <MovieCard key={movie.id} last={index === 0} movie={movie} />\r\n            </div>\r\n          )) : ''}\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          slider.current.scrollBy({\r\n            left: slider.current.clientWidth * 0.9,\r\n            behavior: \"smooth\"\r\n          })\r\n        }}\r\n        className=\"movies-slider__scroll-button movies-slider__scroll-button--right\"\r\n      >\r\n        <FontAwesomeIcon icon={faChevronRight}/>\r\n      </div>\r\n    </motion.div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useRef } from 'react';\r\nimport { getPersonImg } from './api';\r\n\r\nconst classNames = require('classnames')\r\n\r\nexport const Review = ({review}) => {\r\n  const [active, setActive] = useState(false);\r\n  const ref = useRef(null)\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      onClick={() => {\r\n        setActive(!active)\r\n      }}\r\n      id={review.id}\r\n      className={classNames([\"review\", {'review--active': active}])}\r\n    >\r\n      <div className={classNames([\"review__author\", {'review__author--active': active}])}>\r\n        <img\r\n          src={getPersonImg(review.author_details.avatar_path)}\r\n          alt=\"\"\r\n          className=\"review__author-img\"\r\n        />\r\n        <div className=\"review__author-nickname\">\r\n          {review.author_details.name}\r\n        </div>\r\n      </div>\r\n      <div className={classNames([\"review__content\", {'review__content--active': active}])}>\r\n        {review.content}\r\n      </div>\r\n      <div className=\"review__footer\">\r\n        {new Date(review.created_at).toLocaleString('default', { year: 'numeric', month: 'long' })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport { getCredits, getCrew, getMovieImg, getMoviesById, getReviews, getSimilar, getTrailer } from '../components/api';\r\nimport {MoviesSlider} from '../components/MoviesSlider'\r\nimport AddToWatchListButton from '../components/AddToWatchListButton';\r\n\r\nimport { motion } from 'framer-motion';\r\nimport { connect } from 'react-redux';\r\nimport MarkAsFavoriteButton from '../components/MarkAsFavoriteButton';\r\nimport { Picture } from '../components/Picture';\r\nimport AddToListButton from '../components/AddToListButton';\r\nimport { translate } from '../components/translate';\r\nimport { Review } from '../components/Review';\r\n\r\nconst MoviePage = ({accInfo}) => {\r\n  console.log('перейшов')\r\n  const match = useRouteMatch(\"/:mediaType/:mediaId\");\r\n  const [cast, setCast] = useState([])\r\n  const [trailer, setTrailer] = useState([])\r\n  const [crew, setCrew] = useState([])\r\n  const [movie, setMovie] = useState({});\r\n  const [similar, setSimilar] = useState([]);\r\n  const [reviews, setReviews] = useState([]);\r\n  // const location = useLocation();\r\n  const mediaType = match.params.mediaType\r\n  const mediaId = match.params.mediaId\r\n\r\n  // console.log(accInfo)\r\n\r\n  useEffect(() => {\r\n    getTrailer(mediaId, mediaType).then((response) => { setTrailer(response[0]?.key) })\r\n    getCrew(mediaId, mediaType).then((response) => { setCrew(response.reverse()) })\r\n    getCredits(mediaId, mediaType).then((response) => { setCast(response.reverse()) })\r\n    getMoviesById(mediaId, mediaType).then((response) => { setMovie(response) })\r\n    getSimilar(mediaId, mediaType).then((response) => { setSimilar(response.reverse()) })\r\n    getReviews(mediaId, mediaType).then((response) => { setReviews(response) })\r\n  }, [mediaId, mediaType])\r\n\r\n  useEffect(() => {\r\n    // window.scrollTo(0, 0);\r\n  }, [match])\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"container\">\r\n        <div className=\"movie-page\">\r\n          <section className=\"page__section grid grid--desktop\">\r\n            <motion.div\r\n              initial={{opacity: 0, translateX: -100}}\r\n              animate={{opacity: 1, translateX: 0}}\r\n              transition={{ duration: 0.5}}\r\n              className=\"movie-page__poster grid__item--1-4\"\r\n            >\r\n              <div className=\"movie-page__poster-img\">\r\n                <Picture mediaType={mediaType} picture_path={movie.poster_path}/>\r\n              </div>\r\n            </motion.div>\r\n            <div className=\"page__description grid__item--5-12 grid--desktop\">\r\n              <motion.div\r\n                initial={{opacity: 0, translateX: -200}}\r\n                animate={{opacity: 1, translateX: 0}}\r\n                transition={{ duration: 0.7}}\r\n                className=\"grid\"\r\n              >\r\n                <div key=\"poster\" className=\"grid__item--1-12 movie-page__title\">\r\n                  {movie?.title}\r\n                  <div className=\"movie-page__media-type\">{movie.media_type}</div>\r\n                </div>\r\n                <div key=\"selected-movie-description\" className=\"movie-page__votes grid__item--1-12\">\r\n                  rating: <span className=\"movie-page__votes-value\">{movie?.vote_average}</span>\r\n                </div>\r\n                <div key=\"selected-movie-overview\" className=\"movie-page__overview grid__item--1-12\">\r\n                  {movie.overview}\r\n                </div>\r\n                <div key=\"selected-movie-genres\" className=\"movie-page__genres-list grid__item-1-12\">\r\n                  {movie.genres?.map(({name}) =>\r\n                    <div className=\"movie-page__genre\">\r\n                      {name}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {movie.belongs_to_collection &&\r\n                  <div key=\"selected-movie-collection\" className=\"grid__item--1-12\">\r\n                    collection:\r\n                    <Link className=\"movie-page__action-title-link\" to={`/collections/${movie.belongs_to_collection.id}`}>\r\n                      {movie.belongs_to_collection.name}\r\n                    </Link>\r\n                  </div>\r\n                }\r\n                <div key=\"selected-movie-action-buttons\" className=\"grid__item--1-12\">\r\n                  <div className=\"movie-page__action\">\r\n                    {accInfo.id && \r\n                      <>\r\n                        <AddToWatchListButton\r\n                          media_id={mediaId}\r\n                          media_type={mediaType}\r\n                        />\r\n                        <MarkAsFavoriteButton\r\n                          media_id={mediaId}\r\n                          media_type={mediaType}\r\n                        />\r\n                        {mediaType === 'movie' &&\r\n                          <AddToListButton\r\n                            media_id={mediaId}\r\n                            media_type={mediaType}\r\n                          />\r\n                        }\r\n                      </>\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            </div>\r\n          </section>\r\n          <section className=\"page__section\">\r\n            <div className=\"movie-page__trailer\">\r\n              <iframe\r\n                title=\"trailer\"\r\n                className=\"movie-page__video\"\r\n                src={`https://www.youtube.com/embed/${trailer}`}\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n              />\r\n            </div>\r\n          </section>\r\n          <section className=\"page__section\">\r\n            <div className=\"reviews-section\">\r\n              {reviews.length > 0 &&\r\n                <div className=\"reviews-section__title\">\r\n                  {translate({\r\n                    'en': \"Reviews\",\r\n                    \"uk\": 'Відгуки'\r\n                  })}\r\n                </div>\r\n              }\r\n                {\r\n                  reviews.map((review) => (\r\n                      <Review review={review}/>\r\n                  ))\r\n                }\r\n            </div>\r\n          </section>\r\n          <section className=\"page__section\">\r\n            {cast.length > 0\r\n              ?\r\n                <>\r\n                  <div className=\"page__title\">\r\n                    {translate({\r\n                      'en': \"Cast\",\r\n                      \"uk\": 'Акторський склад'\r\n                    })}\r\n                  </div>\r\n                  <MoviesSlider key=\"cast-slider\" peopleList={cast} />\r\n                </>\r\n              : ''\r\n            }\r\n          </section>\r\n          <section className=\"page__section\">\r\n            {crew.length > 0\r\n              ?\r\n                <>\r\n                  <div className=\"page__title\">\r\n                    {translate({\r\n                      'en': \"Crew\",\r\n                      \"uk\": 'Знімальна група'\r\n                    })}\r\n                  </div>\r\n                  <MoviesSlider key=\"crew-slider\" peopleList={crew} />\r\n                </>\r\n              : ''\r\n            }\r\n          </section>\r\n          <section className=\"page__section\">\r\n            <div className=\"page__title\">\r\n              {translate({\r\n                'en': \"Similar\",\r\n                \"uk\": 'Схоже'\r\n              })}\r\n            </div>\r\n            <MoviesSlider key=\"similar-slider\" moviesList={similar} />\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect((state) => ({accInfo: state.session.accInfo}))(MoviePage)","import React from 'react'\r\n\r\nexport const Info = () => {  \r\n\r\n  return (\r\n    <div className=\"info page\">\r\n      <div className=\"container\">\r\n        <div className=\"info__param\">\r\n          <h1 className=\"info__title\">\r\n            API:\r\n          </h1>\r\n          <a href=\"https://www.themoviedb.org/\">\r\n            <div className=\"info__api\" />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, {useState, useEffect, useCallback} from 'react'\r\nimport \"swiper/swiper-bundle.css\";\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Autoplay } from 'swiper';\r\nimport { EffectCoverflow } from 'swiper';\r\n\r\n\r\nimport { Navigation, Pagination, A11y, Parallax } from 'swiper';\r\n\r\nimport debounce from 'lodash.debounce';\r\nimport { getMovieImg } from './api';\r\nimport { Link } from 'react-router-dom';\r\n\r\nSwiperCore.use([Autoplay, Pagination, Navigation, EffectCoverflow, Parallax]);\r\n\r\nexport const Poster = ({moviesList}) => {\r\n  const [selectedMovieId, selectMovieId] = useState(0)\r\n  const moviePicture = new Image(1180, 590);\r\n  moviePicture.src = `https://image.tmdb.org/t/p/original/${moviesList[selectedMovieId]?.backdrop_path}`\r\n\r\n  const nextMovie = () => {\r\n    if (selectedMovieId === moviesList.length - 1) {\r\n      selectMovieId(0);\r\n\r\n      return\r\n    }\r\n\r\n    selectMovieId(selectedMovieId + 1);\r\n  }\r\n\r\n  const nextMovieWithDebounce = useCallback(debounce(nextMovie, 10000), [selectedMovieId])\r\n\r\n  useEffect(() => {\r\n    nextMovieWithDebounce();\r\n\r\n    return nextMovieWithDebounce.cancel;\r\n  }, [selectedMovieId, nextMovieWithDebounce])\r\n\r\n  return (\r\n    <Swiper\r\n      modules={[Navigation, Pagination, A11y, EffectCoverflow, Parallax]}\r\n      // effect=\"coverflow\"\r\n      spaceBetween={200}\r\n      slidesPerView={1}\r\n      navigation\r\n      pagination={{ clickable: true }}\r\n      loop={true}\r\n      autoplay={{\r\n        delay: 5000,\r\n        disableOnInteraction: false\r\n      }}\r\n      onSwiper={(swiper) => console.log(swiper)}\r\n    >\r\n        {moviesList?.map((movie) => (\r\n          <SwiperSlide key={movie.id}>\r\n            <div className=\"poster\">\r\n              <Link to={`${movie.media_type}/${movie.id}`}>\r\n                <img src={getMovieImg(movie.backdrop_path)} className=\"poster__img\" alt=\"\"/>\r\n                <div className=\"poster__title\">\r\n                  {movie.title}\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </SwiperSlide>\r\n        ))}\r\n        <div className=\"prev\"></div>\r\n        <div className=\"next\"></div>\r\n      </Swiper>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { getMoviesByYear, getTrending } from '../components/api'\r\nimport { MoviesSlider } from '../components/MoviesSlider';\r\nimport { Poster } from '../components/Poster';\r\nimport { translate } from '../components/translate';\r\n\r\nconst Home = ({accInfo}) => {\r\n  const [moviesOnPoster, setMoviesOnPoster] = useState([]);\r\n  const [trending, setTrending] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getTrending()\r\n      .then((result) => setMoviesOnPoster(result))\r\n    getTrending()\r\n      .then((result) => setTrending(result))\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"page home\">\r\n      <div className=\"container\">\r\n        <h1 className=\"page__title\">\r\n          {!accInfo?.username\r\n            ? translate({\r\n              'en': \"Home\",\r\n              \"uk\": 'Домашня сторінка'\r\n            })\r\n            : `${translate({\r\n              'en': \"Ні,\",\r\n              \"uk\": 'Привіт,'\r\n            })} ${accInfo?.username}!`\r\n          }\r\n        </h1>\r\n        \r\n        <section className=\"page__section\">\r\n          <main>\r\n            <Poster moviesList={trending}/>\r\n          </main>\r\n        </section>\r\n        <section className=\"page__section\">\r\n          <div className=\"page__title\">\r\n            {translate({\r\n              'en': \"Trending\",\r\n              \"uk\": 'У тренді'\r\n            })}\r\n          </div>\r\n          <MoviesSlider moviesList={trending}/>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect((state) => ({session_id: state.session.session, accInfo: state.session.accInfo}))(Home)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useRouteMatch } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport AddToWatchListButton from '../components/AddToWatchListButton';\r\nimport { getCollection, getMovieImg } from '../components/api'\r\nimport MarkAsFavoriteButton from '../components/MarkAsFavoriteButton';\r\nimport { Picture } from '../components/Picture';\r\n\r\nexport const CollectionPage = () => {\r\n  const match = useRouteMatch('/collections/:collectionId')\r\n  const history = useHistory();\r\n  const [collection, setCollection] = useState({})\r\n\r\n  useEffect(() => {\r\n    getCollection(match.params.collectionId).then((response) => setCollection(response))\r\n  }, [match.params.collectionId])\r\n  \r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"container\">\r\n        <div className=\"collections-page grid\">\r\n          <div className=\"grid grid__item--1-12\">\r\n            <div className=\"collections-page__poster grid__item--1-3\">\r\n              <div className=\"collections-page__poster-img\">\r\n                <Picture picture_path={collection.poster_path} mediaType=\"movie\"/>\r\n              </div>\r\n            </div>\r\n            <div className=\"page__description grid__item--4-12 grid\">\r\n              <h2 className=\"page__title grid__item--1-12\">{collection.name}</h2>\r\n              <div className=\"grid__item--1-12\">{collection.overview}</div>\r\n            </div>\r\n          </div>\r\n          {collection?.parts?.map((part) => (\r\n            <div\r\n              onClick={() => {\r\n                history.push(`/movie/${part.id}`)\r\n              }}\r\n              className=\"collections-page__part grid grid__item--1-12\"\r\n            >\r\n              <div className=\"collections-page__poster grid__item--1-2\">\r\n                <div className=\"collections-page__poster-img\">\r\n                  <Picture picture_path={part.poster_path} mediaType=\"movie\"/>\r\n                </div>\r\n              </div>\r\n              <div className=\"page__title grid__item--3-12\">{part.title}</div>\r\n              <div\r\n                onClick={(e) => e.stopPropagation()}\r\n                className=\"collections-page__actions-block\"\r\n              >\r\n                <AddToWatchListButton media_id={part.id} media_type=\"movie\"/>\r\n                <MarkAsFavoriteButton media_id={part.id} media_type=\"movie\"/>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useLocation, useRouteMatch } from 'react-router-dom';\r\nimport { getPerson, getPersonImg, getPersonsCredits } from '../components/api';\r\nimport {MoviesSlider} from '../components/MoviesSlider'\r\nimport { Picture } from '../components/Picture';\r\n\r\nexport const PersonPage = () => {\r\n  const match = useRouteMatch(\"/person/:personId\");\r\n  const [credits, setCredits] = useState([]);\r\n  const [person, setPerson] = useState({})\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    getPerson(match.params.personId).then((response) => setPerson(response));\r\n    getPersonsCredits(match.params.personId).then((response) => setCredits(response));\r\n  }, [location, match.params.personId])\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"container\">\r\n        <div className=\"person-page grid\">\r\n          <div className=\"person-page__poster grid__item--1-4\">\r\n            <Picture mediaType='person' picture_path={person.profile_path}/>\r\n          </div>\r\n          <div className=\"grid__item--5-12\">\r\n            <h1 className=\"person-page__name\">\r\n              {person.name}\r\n            </h1>\r\n            <div className=\"person-page__params\">\r\n              <div className=\"person-page__param\">\r\n                <div>\r\n                  known for\r\n                </div>\r\n                <div/>\r\n                <div>\r\n                  {person.known_for_department}\r\n                </div>\r\n              </div>\r\n              <div className=\"person-page__param\">\r\n                <div>\r\n                  born\r\n                </div>\r\n                <div/>\r\n                <div>\r\n                  {person.birthday}\r\n                </div>\r\n              </div>\r\n              {person.deathday &&\r\n                <div className=\"person-page__param\">\r\n                  <div>\r\n                    died\r\n                  </div>\r\n                  <div/>\r\n                  <div>\r\n                    {person.deathday}\r\n                  </div>\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"person-page__biography grid__item--1-12\">\r\n            <h2 className=\"person-page__section-title\">\r\n              Biography\r\n            </h2>\r\n            <div className=\"person-page__biography-main\">\r\n              {person.biography}\r\n            </div>\r\n          </div>\r\n          <div className=\"grid__item--1-12\">\r\n            <h2 className=\"person-page__section-title\">\r\n              Acting\r\n            </h2>\r\n            <div>\r\n              <MoviesSlider moviesList={credits.cast} />\r\n            </div>\r\n          </div>\r\n          {\r\n            Object.entries(\r\n              credits.crew?.reduce((prev, cur) => ({\r\n                filtered: {\r\n                  [cur.job]: prev.full.filter((e) => e.job === cur.job),\r\n                  ...prev.filtered,\r\n                },\r\n                full: prev.full.filter((e) => e.job !== cur.job)\r\n              }), {full: credits.crew}).filtered || {}\r\n            ).sort((a, b) => b[1].length - a[1].length).map((movie) => (\r\n              <div className=\"grid__item--1-12\">\r\n              <h2 className=\"person-page__section-title\">\r\n                {movie[0]}\r\n              </h2>\r\n              <div>\r\n                <MoviesSlider moviesList={movie[1]} />\r\n              </div>\r\n            </div>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nconst classNames = require('classnames');\r\n\r\nexport const SearchPageCheckbox = ({text, list}) => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const [isOpened, open] = useState(false);\r\n\r\n  const selectNewOption = (id) => {\r\n    searchParams.set(text, [searchParams.get(text), id])\r\n    history.push({ search: searchParams.toString() })\r\n  }\r\n  \r\n  const cencelOption = (id) => {\r\n    const result = searchParams.get(text)?.split(',').filter((optionId) => optionId !== '' && +optionId !== id);\r\n    console.log('result ', result)\r\n    if(result.length === 0) {\r\n      searchParams.delete(text)\r\n    } else {\r\n      searchParams.set(text, result)\r\n    }\r\n    history.push({ search: searchParams.toString() })\r\n  }\r\n\r\n  return (\r\n    <div className=\"checkbox\">\r\n      <div\r\n        onClick={() => { open(!isOpened) }}\r\n        className=\"checkbox__options-switcher\"\r\n      >\r\n        <div className={classNames(\"checkbox__options-switcher-text\", {\"checkbox__options-switcher-text--active\": isOpened})}>\r\n          {text}\r\n        </div>\r\n      </div>\r\n      <div className={\"checkbox__options-block\"}>\r\n        {\r\n          list.map(({id, name}) => (\r\n            <div\r\n              onClick={() => {\r\n                if(searchParams.get(text)?.split(',').some((optionId) => +optionId === id)) {\r\n                  cencelOption(id);\r\n                  return;\r\n                }\r\n                selectNewOption(id)\r\n              }}\r\n              className={classNames([\"checkbox__option\", {\"checkbox__option--active\": searchParams.get(text)?.split(',').some((optionId) => +optionId === id)}])}\r\n              key={id}\r\n            >\r\n              {name}\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nconst classNames = require('classnames');\r\n\r\nexport const FilterVisibilityToggler = ({filter, title}) => {\r\n  const [isOpened, open] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        classNames([\r\n          \"search-page__filter-visibility-toggler\",\r\n          {\"search-page__filter-visibility-toggler--active\": isOpened}\r\n        ])\r\n      }\r\n      \r\n    >\r\n      <div\r\n        className={\r\n          classNames([\r\n            \"search-page__filter-visibility-toggler-text\",\r\n            {\"search-page__filter-visibility-toggler-text--active\": isOpened}\r\n          ])\r\n        }\r\n        onClick={() => open(!isOpened)}\r\n      >\r\n        {title}\r\n      </div>\r\n      <div\r\n        className={classNames([\r\n          \"search-page__filter-visibility-toggler-content\",\r\n          {\"search-page__filter-visibility-toggler-content--active\": isOpened}\r\n        ])}\r\n      >\r\n        {filter}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { debounce } from \"lodash\";\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport { discoverMedia, getGenres, getMoviesByTitle } from '../components/api';\r\nimport { SearchPageCheckbox } from '../components/SearchPageCheckbox';\r\nimport { SearchPageCrewFilter } from '../components/SearchPageCrewFilter';\r\nimport { FilterVisibilityToggler } from '../components/FilterVisibilityToggler';\r\nimport Lottie from 'lottie-web';\r\nimport search from '../lottie/search.json'\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport MovieCard from \"../components/MovieCard\";\r\n\r\nexport const SearchPage = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const [genres, setGenres] = useState([]);\r\n  const animation = useRef(null)\r\n  const [lottieAnim, setLottieAnim] = useState({})\r\n  const [query, setQuery] = useState(searchParams.get('with_keywords') || '')\r\n  const [selectedMediaType, selectMediaType] = useState(searchParams.get('media_type') || '')\r\n\r\n  const [resultArr, setResultArr] = useState([])\r\n\r\n  useEffect(() => {\r\n    getGenres().then((response) => setGenres(response));\r\n  }, [])\r\n\r\n  const applyQuery = useCallback(debounce((value) => {\r\n    if(value.trim() !== '') {\r\n      if(!searchParams.get('with_keywords')) {\r\n        searchParams.append('with_keywords', value);\r\n      }else {\r\n        searchParams.set('with_keywords', value);\r\n      }\r\n    } else {\r\n      searchParams.delete('with_keywords');\r\n    }\r\n    history.push({search: searchParams.toString()})\r\n  }, 500), [location]);\r\n\r\n  useEffect(() => {\r\n    getGenres().then((response) => setGenres(response));\r\n    setLottieAnim(Lottie.loadAnimation({\r\n      container: animation.current,\r\n      renderer: 'svg',\r\n      loop: false,\r\n      autoplay: false,\r\n      animationData: search\r\n    }))\r\n  }, [])\r\n  \r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"container\">\r\n        <div className=\"grid\">\r\n          <div className=\"search-page__filters-block grid__item--1-4\">\r\n            <fieldset className=\"search-page__media-type-select-fieldset\">\r\n              <div className=\"search-page__media-type-select\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"tv\"\r\n                  name=\"mediaType\"\r\n                  checked={selectedMediaType === 'tv'}\r\n                  className=\"search-page__media-type-radio\"\r\n                  onChange={() => {\r\n                    searchParams.set('media_type', 'tv')\r\n                    selectMediaType('tv')\r\n                    history.push({search: searchParams.toString()})\r\n                  }}\r\n                />\r\n                <label className=\"search-page__media-type-radio-label\" htmlFor=\"tv\"> TV series</label>\r\n              </div>\r\n              <div className=\"search-page__media-type-select\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"movie\"\r\n                  name=\"mediaType\"\r\n                  checked={selectedMediaType === 'movie'}\r\n                  className=\"search-page__media-type-radio\"\r\n                  onChange={() => {\r\n                    searchParams.set('media_type', 'movie')\r\n                    selectMediaType('movie')\r\n                    history.push({search: searchParams.toString()})\r\n                  }}\r\n                />\r\n                <label className=\"search-page__media-type-radio-label\" htmlFor=\"movie\">Movie</label>\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"search-page__filter\">\r\n            </div>\r\n            <div className=\"search-page__filter\">\r\n              <SearchPageCheckbox text=\"genres\" list={genres}/>\r\n            </div>\r\n          </div>\r\n          <div className=\"grid__item--5-12\">\r\n            <div className=\"search-page__search\">\r\n              <input\r\n                value={query}\r\n                onChange={(event) => {\r\n                  setQuery(event.target.value)\r\n                  applyQuery(event.target.value)\r\n                }}\r\n                type=\"text\"\r\n                className=\"search-page__search-input\"\r\n              />\r\n              <div\r\n                onClick={() => {\r\n                  if(lottieAnim.playSegments) {\r\n                    lottieAnim.playSegments([0, 21], true)\r\n                  }\r\n                    console.log('genres', query.split(' '))\r\n                    getMoviesByTitle(query, selectedMediaType)\r\n                      .then((filteredByTitle) => {\r\n                        const selectedGenres =  searchParams?.get('genres')?.split(',')?.slice(1);\r\n                        console.log(filteredByTitle, selectedGenres)\r\n                        if(selectedGenres) {\r\n                          setResultArr(filteredByTitle?.filter((el) => selectedGenres.slice(1).every((genre) => el.genre_ids.some((id) => +genre === +id))))\r\n                        } else {\r\n                          setResultArr(filteredByTitle)\r\n                        }\r\n                      })\r\n\r\n                    console.log(resultArr)\r\n                }}\r\n                ref={animation}\r\n                className=\"search-page__search-button\"\r\n              ></div>\r\n            </div>\r\n            <div className=\"search-page__results-container\">\r\n              {resultArr?.map((movie) => (\r\n                <MovieCard movie={{...movie, media_type: selectedMediaType}} genres={genres}/>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { createSession, createToken, deleteSession } from '../components/api';\r\nimport { createSessionWithLogin, getAccInfo } from '../components/api';\r\nimport { cleanAccInfo, setSessionId, updateAccInfo, cleanWatchlist, updateWatchlist, updateLists } from '../redux/actions';\r\nimport { motion } from 'framer-motion';\r\nimport { translate } from '../components/translate';\r\n\r\nconst classNames = require('classnames')\r\n\r\nconst LoginWindow = ({ session_id, setSessionId, updateAccInfo, cleanAccInfo, cleanWatchlist, updateWatchlist, updateLists}) => {\r\n  const location = useLocation()\r\n  const [userData, setUserData] = useState({username: '', password: ''});\r\n  const [loading, setLoading] = useState(false);\r\n  const [isLogged, setLogged] = useState(!!session_id)\r\n  const [err, setErr] = useState('')\r\n  const history = useHistory({});\r\n\r\n  useEffect(() => {\r\n    setLogged(!!session_id);\r\n  }, [location.hash])\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{opacity: 0, translateX: -100}}\r\n      animate={{opacity: 1, translateX: 0}}\r\n      transition={{ duration: 0.2}}\r\n      className={classNames(\"login\", {\"login--active\": location.hash === '#login'})}\r\n    >\r\n      <form\r\n        id=\"login\"\r\n        action=\"\"\r\n        className=\"login__container\"\r\n        onSubmit={(event) => {\r\n          \r\n          if(!session_id) {\r\n            setLoading(true);\r\n            createToken().then((tockenRes) => {\r\n              createSessionWithLogin(\r\n                userData.username,\r\n                userData.password,\r\n                tockenRes.request_token,\r\n              )\r\n                .then((res) => {\r\n                  createSession(res.request_token)\r\n                    .then((response) => {\r\n                      if(response.success) {\r\n                        history.push({hash:\"#\"})\r\n                        setSessionId(response.session_id)\r\n                        updateLists(response.session_id)\r\n                        updateAccInfo(response.session_id)\r\n                        updateWatchlist(response.session_id)\r\n                        \r\n                      } else {\r\n                        setErr(response.status_message)\r\n                      }\r\n\r\n                      setLoading(false)\r\n                    })\r\n              })\r\n            })\r\n\r\n            return\r\n          }\r\n          deleteSession(session_id)\r\n          cleanAccInfo()\r\n          cleanWatchlist()\r\n          setSessionId('')\r\n        }}\r\n      >\r\n        <div className=\"login__title\">\r\n          {!isLogged ? translate({\"en\": \"Log in\", \"uk\": \"Увійти\"}) : translate({\"en\": \"Are you sure?\", \"uk\": \"Ви впевнені?\"})}\r\n        </div>\r\n        <div className=\"login__err\">\r\n          {err}\r\n        </div>\r\n        {!isLogged\r\n          ?\r\n            <>\r\n              {loading &&\r\n                <lottie-player\r\n                  src={'https://assets8.lottiefiles.com/packages/lf20_knpXLX.json'}\r\n                  background=\"transparent\"\r\n                  speed=\"2\"\r\n                  style={{\r\n                    width: \"100px\",\r\n                    height: \"100px\",\r\n                    margin: \"0 auto\",\r\n                    }} \r\n                  autoplay\r\n                  onAnimationEnd={() => console.log('end')}\r\n                />\r\n              }\r\n              {!loading &&\r\n                <>\r\n                  <label htmlFor=\"username\" className=\"login__label\">{translate({\"en\": \"Username\", \"uk\": \"Ім'я користувача\"})}</label>\r\n                  <input\r\n                    value={userData.username}\r\n                    onChange={(event) => setUserData({\r\n                      ...userData,\r\n                      username: event.target.value\r\n                    })}\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    className=\"login__field\"\r\n                  />\r\n                  <label htmlFor=\"password\" className=\"login__label\">{translate({\"en\": \"Password\", \"uk\": \"Пароль\"})}</label>\r\n                  <input\r\n                    value={userData.password}\r\n                    onChange={(event) => setUserData({\r\n                      ...userData,\r\n                      password: event.target.value\r\n                    })}\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    className=\"login__field\"\r\n                  />\r\n                  <button\r\n                    onClick={() => setErr('')}\r\n                    type=\"submit\"\r\n                    className=\"login__submit-button\"\r\n                  >\r\n                    {translate({\r\n                      'en': \"accept\",\r\n                      \"uk\": 'прийняти'\r\n                    })}\r\n                  </button>\r\n                </>\r\n              }\r\n            </>\r\n          :\r\n            <>\r\n              <button\r\n                onClick={() => history.push({hash: '#'})}\r\n                type=\"submit\"\r\n                className=\"login__log-out-button\"\r\n              >\r\n                {translate({\r\n                  'en': \"Log out\",\r\n                  \"uk\": 'вийти'\r\n                })}\r\n              </button>\r\n            </>\r\n        }\r\n        <a onClick={() => history.push({hash: '#'})} className=\"login__close-button\"></a>\r\n        {!isLogged &&\r\n          <span className=\"login__sign-up-field\">\r\n            {translate({\r\n              'en': \"Don't have an account?\",\r\n              \"uk\": 'Не маєте аккаунта?'\r\n            })} <a href=\"https://www.themoviedb.org/signup\" className=\"login__sign-up-link\">{translate({\r\n              'en': \"Sign up!\",\r\n              \"uk\": 'Зареєструйтесь!'\r\n            })}</a>\r\n          </span>\r\n        }\r\n      </form>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({session_id: state.session.session}),\r\n  {\r\n    cleanWatchlist,\r\n    cleanAccInfo,\r\n    setSessionId,\r\n    updateAccInfo,\r\n    updateWatchlist,\r\n    updateLists\r\n  }\r\n)(LoginWindow)","import React, { useCallback, useRef, useState } from 'react'\r\nimport \"../styles/blocks/navigation.scss\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport debounce from 'lodash.debounce'\r\nimport { getMovieImg, getMoviesByTitle } from './api'\r\nimport { Link } from 'react-router-dom'\r\nimport { Picture } from './Picture'\r\n\r\nconst classNames = require(\"classnames\")\r\n\r\nexport const NavigationSearch = () => {\r\n  const [isActive, setActive] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const input = useRef('')\r\n\r\n  const onSearch = useCallback(debounce((title) => {\r\n    getMoviesByTitle(title).then((data) => setResults((data || []).slice(0, 7)))\r\n  }, 500), [])\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          classNames(\r\n            \"navigation__search\",\r\n            {\"navigation__search--active\": isActive}\r\n          )\r\n        }\r\n      >\r\n        <input\r\n          ref={input}\r\n          value={text}\r\n          onChange={(event) => {\r\n            setText(event.target.value)\r\n            onSearch(event.target.value)\r\n          }}\r\n          onBlur={() => setActive(false)}\r\n          className={\r\n            classNames(\r\n              \"navigation__search-input\",\r\n              {\"navigation__search-input--active\": isActive}\r\n            )\r\n          }\r\n        >\r\n        </input>\r\n        <div\r\n          onClick={() => {\r\n            if(isActive === false) {\r\n              setActive(true)\r\n              input.current.focus()\r\n            }else {\r\n              setActive(false)\r\n            }\r\n          }}\r\n          className={classNames(\"navigation__search-icon\", {\"navigation__search-icon--active\": isActive})}\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faSearch}\r\n          />\r\n        </div>\r\n        <ul className={classNames(\"navigation__search-results-block\", {\"navigation__search-results-block--active\": (text && isActive)})}>\r\n          {\r\n            <>\r\n              {\r\n                results.map(result => (\r\n                  <li key={result.id}>\r\n                    {\r\n                      <Link to={`/${result.media_type}/${result.id}`} className=\"navigation__search-result\">\r\n                        <div className=\"navigation__search-result-img\">\r\n                          <Picture mediaType={result.media_type} picture_path={result.profile_path || result.poster_path} w500/>\r\n                        </div>\r\n                        <h2 className=\"navigation__search-result-title\">\r\n                          {result.title}\r\n                        </h2>\r\n                      </Link>\r\n                    }\r\n                  </li>\r\n                ))\r\n              }\r\n              {\r\n                results.length > 0 ?\r\n                  <li key={\"end\"}>\r\n                    <Link to=\"/search\" className=\"navigation__search-more-results\">\r\n                      more results...\r\n                    </Link>\r\n                  </li>\r\n                :\r\n                  <li key={\"end\"} className=\"navigation__search-no-results\">\r\n                    no results\r\n                  </li>\r\n              }\r\n            </>\r\n          }\r\n        </ul>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport \"../styles/blocks/navigation.scss\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst classNames = require(\"classnames\");\r\n\r\nexport const NavigationDropdown = ({text}) => {\r\n  const [isActive, setActive] = useState(false); \r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={classNames(\r\n          \"navigation__dropdown\",\r\n          {\"navigation__dropdown--active\": isActive}\r\n        )}\r\n        onClick={() => setActive(!isActive)}\r\n        onMouseLeave={() => setActive(false)}\r\n      >\r\n        <div className=\"navigation__link-text\">\r\n          {text}\r\n        </div>\r\n        <div className={classNames(\"navigation__dropdown-options-block\", {\"navigation__dropdown-options-block--active\": !isActive})}>\r\n          <Link to='/watchlist/tv'className=\"navigation__dropdown-option\">\r\n            <div className=\"navigation__link-text\">\r\n              watchlist\r\n            </div>\r\n          </Link>\r\n          <Link to='/favorites/tv'className=\"navigation__dropdown-option\">\r\n            <div className=\"navigation__link-text\">\r\n              favorites\r\n            </div>\r\n          </Link>\r\n          <Link to='/lists'className=\"navigation__dropdown-option\">\r\n            <div className=\"navigation__link-text\">\r\n              lists\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { NavigationDropdown } from \"./NavigationDropdown\"\r\nimport { NavigationSearch } from './NavigationSearch'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\nimport { HashLink } from 'react-router-hash-link'\r\nimport { useLocation } from 'react-router'\r\nimport { HashRouter, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { getAccInfo, getPersonImg } from './api'\r\nimport { AnimateSharedLayout, motion, useAnimation } from 'framer-motion'\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { changeLanguage } from '../redux/actions'\r\nimport { translate } from './translate'\r\n\r\nconst Navigation = ({accInfo, language, changeLanguage}) => {\r\n  const location = useLocation();\r\n  const menuAnimation = useAnimation();\r\n  const avatarAnimation = useAnimation();\r\n  const languageAnim = useAnimation();\r\n  console.log(location)\r\n  const [firstload, setFirstLoad] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if(!firstload) {\r\n      window.location.reload()\r\n    }\r\n\r\n    setFirstLoad(false)\r\n  }, [language]);\r\n\r\n  return (\r\n    <div className=\"navigation\">\r\n      <div className=\"navigation__content\">\r\n        {/* elements displayed only on mobiles */}\r\n        <HashLink\r\n          // smooth\r\n          scroll={(el) => el.scrollIntoView()}\r\n          className=\"navigation__menu\"\r\n          to=\"#menu\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faBars}\r\n          />\r\n        </HashLink>\r\n\r\n        <AnimateSharedLayout>\r\n          <Link to=\"/\" className=\"navigation__logo\">\r\n            PMDB\r\n            {location.pathname === '/' && <ActiveLine/>}\r\n          </Link>\r\n          <div className=\"navigation__main\">\r\n            <Link to=\"/info\" className=\"navigation__link navigation__link--info\">\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n              {location.pathname === '/info' && <ActiveLine/>}\r\n            </Link>\r\n            <Link to=\"/search\" className=\"navigation__link\">\r\n              <div className=\"navigation__link-text\">\r\n                {translate({\r\n                  'en': \"search\",\r\n                  \"uk\": 'пошук'\r\n                })}\r\n              </div>\r\n              {location.pathname === '/search' && <ActiveLine/>}\r\n            </Link>\r\n          </div>\r\n        </AnimateSharedLayout>\r\n        <div className=\"navigation__right-side-block\">\r\n          <NavigationSearch></NavigationSearch>\r\n          {!accInfo.id &&\r\n            <HashLink   \r\n              to=\"#login\"\r\n              className=\"navigation__link--paddingless\"\r\n            >\r\n              <div className=\"navigation__link-text\">\r\n                {translate({\r\n                  'en': \"log in\",\r\n                  \"uk\": 'увійти'\r\n                })}\r\n              </div>\r\n            </HashLink>\r\n          }\r\n          {accInfo.id &&\r\n            <motion.div\r\n              className=\"navigation__avatar-container\"\r\n              onHoverStart={() => {\r\n                menuAnimation.start({scale: '100%', opacity: 1})\r\n                avatarAnimation.start({scale: '120%'})\r\n              }}\r\n              onHoverEnd={() => {\r\n                menuAnimation.start({scale: 0, opacity: 0})\r\n                avatarAnimation.start({scale: '100%'})\r\n              }}\r\n            >\r\n              <motion.div\r\n                initial={{scale: 0, opacity: 0}}\r\n                className=\"profile-settings\"\r\n                animate={menuAnimation}\r\n              >\r\n                <div className=\"profile-settings__header\">\r\n                  {accInfo.username}\r\n                </div>\r\n                <motion.div\r\n                  onHoverStart={() => {languageAnim.start({scale: \"100%\"})}}\r\n                  onHoverEnd={() => {languageAnim.start({scale: 0})}}\r\n                  to='/watchlist/tv'\r\n                  className=\"profile-settings__option\"\r\n                >\r\n                  ‹ {translate({\r\n                    'en': \"language\",\r\n                    \"uk\": 'мова'\r\n                  })}\r\n                  <motion.div\r\n                    initial={{scale: 0, translateX: \"-100%\"}}\r\n                    animate={languageAnim}\r\n                    className=\"profile-settings__backdrop-content\"\r\n                  >\r\n                    <div onClick={() => {changeLanguage('en')}} className=\"profile-settings__option\">\r\n                      english {language === 'en' && \"✓\"}\r\n                    </div>\r\n                    <div onClick={() => {changeLanguage('uk')}}className=\"profile-settings__option\">\r\n                      українська {language === 'uk' && \"✓\"}\r\n                    </div>\r\n                  </motion.div>\r\n                </motion.div>\r\n                <div className=\"profile-settings__label\">\r\n                  {translate({\r\n                    'en': \"account\",\r\n                    \"uk\": 'аккаунт'\r\n                  })}\r\n                </div>\r\n                <Link to='/profile'className=\"profile-settings__option\">\r\n                  {translate({\r\n                    'en': \"profile\",\r\n                    \"uk\": 'профіль'\r\n                  })}\r\n                </Link>\r\n                <HashLink to='#login'className=\"profile-settings__option\">\r\n                  {translate({\r\n                    'en': \"log out\",\r\n                    \"uk\": 'вийти'\r\n                  })}\r\n                </HashLink>\r\n                <div className=\"profile-settings__label\">\r\n                  {translate({\r\n                    'en': \"film catalogues\",\r\n                    \"uk\": 'каталоги фільмів'\r\n                  })}\r\n                </div>\r\n                <Link to='/watchlist/tv'className=\"profile-settings__option\">\r\n                  {translate({\r\n                    'en': \"watchlist\",\r\n                    \"uk\": '\"до перегляду\"'\r\n                  })}\r\n                </Link>\r\n                <Link to='/favorites/tv'className=\"profile-settings__option\">\r\n                  {translate({\r\n                    'en': \"favorites\",\r\n                    \"uk\": 'улюблені'\r\n                  })}\r\n                </Link>\r\n                <Link to='/lists'className=\"profile-settings__option profile-settings__option--last\">\r\n                  {translate({\r\n                    'en': \"lists\",\r\n                    \"uk\": 'списки'\r\n                  })}\r\n                </Link>\r\n              </motion.div>\r\n              <motion.img\r\n                initial={{ scale: '100%' }}\r\n                animate={avatarAnimation}\r\n                src={getPersonImg(accInfo?.avatar?.tmdb?.avatar_path)}\r\n                alt=\"\"\r\n                className=\"navigation__avatar\"\r\n              />\r\n            </motion.div>\r\n          }\r\n        </div>\r\n      </div>  \r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ActiveLine() {\r\n  return (\r\n    <motion.div\r\n      layoutId=\"activeLine\"\r\n      style={{\r\n        width: '100%',\r\n        height: '4px',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        position: 'absolute',\r\n        backgroundColor: 'rgb(255, 0, 0)'\r\n      }}\r\n      transition={{duration: 0.2}}\r\n    />\r\n  )\r\n}\r\n\r\nexport default connect((state) => ({accInfo: state.session.accInfo, language: state.session.language}), {changeLanguage})(Navigation)","import folder from '../lottie/folder.json'\r\nimport Lottie from 'lottie-web';\r\nimport { useRouteMatch } from 'react-router';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst classNames = require('classnames')\r\n\r\nexport const WatchlistTab = ({title, titleInUrl}) => {\r\n  const [lottieAnim, setLottieAnim] = useState({})\r\n  const animation = useRef(null)\r\n\r\n  const match = useRouteMatch('/watchlist/:mediaType')\r\n\r\n  useEffect(() => {\r\n    setLottieAnim(Lottie.loadAnimation({\r\n      container: animation.current,\r\n      renderer: 'svg',\r\n      quality: 'hight',\r\n      loop: false,\r\n      autoplay: false,\r\n      animationData: folder\r\n    }))\r\n    if(lottieAnim.setSpeed) {\r\n      lottieAnim.setSpeed(2.5)\r\n    }\r\n\r\n  }, [])\r\n  \r\n  useEffect(() => {\r\n    if(match.params.mediaType === titleInUrl && lottieAnim.playSegments) {\r\n      lottieAnim?.playSegments([34, 90], true)\r\n    }\r\n    if(match.params.mediaType !== titleInUrl && lottieAnim.playSegments) {\r\n      lottieAnim?.playSegments([0, 1], true)\r\n    }\r\n  }, [match.params.mediaType])\r\n  return (\r\n    <Link\r\n      to={`/watchlist/${titleInUrl}`}\r\n      onMouseOver={() => {\r\n        if(match.params.mediaType !== titleInUrl) {\r\n          lottieAnim?.playSegments([21, 34], true)\r\n        }\r\n      }}\r\n      onMouseLeave={() => {\r\n        if(match.params.mediaType !== titleInUrl) {\r\n          lottieAnim?.playSegments([0, 1], true)\r\n        }\r\n      }}\r\n      className={classNames(\"watchlist__list-select-link\", {\"watchlist__list-select-link--active\": match.params.mediaType === titleInUrl})}\r\n    >\r\n      <div className=\"watchlist__folder-lottie\" ref={animation}></div>\r\n      {title}\r\n    </Link>\r\n  )\r\n}","import React, { useEffect } from 'react'\r\nimport { getMovieImg } from './api'\r\nimport { useHistory } from 'react-router';\r\nimport AddToWatchListButton from './AddToWatchListButton';\r\nimport { motion, useAnimation } from 'framer-motion';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nconst classNames = require(\"classnames\");\r\n\r\nexport const WatchlistElement = ({ movie, genres, media_type}) => {\r\n  const history = useHistory();\r\n  const {ref, inView} = useInView({threshold: 0.2});\r\n  const animation = useAnimation()\r\n\r\n  useEffect(() => {\r\n    if(inView) {\r\n      animation.start({\r\n        opacity: 1,\r\n        transition: {\r\n          duration: 0.2\r\n        }\r\n      })\r\n    } else {\r\n      animation.start({\r\n        opacity: 0,\r\n        transition: {\r\n          duration: 0.2\r\n        }\r\n      })\r\n    }\r\n  }, [inView])\r\n\r\n  return (\r\n    <motion.div\r\n      ref={ref}\r\n      // initial=\"hidden\"\r\n      animate={animation}\r\n      // transition={{ duration: 0.3 }}\r\n      // variants={{\r\n      //   hidden: { opacity: 0, scale: 0 }\r\n      // }}\r\n      className={classNames(\"watchlist__card\")}\r\n    >\r\n      <img\r\n        onClick={() => {\r\n          console.log(history)\r\n          history.push(`/${movie.media_type}/${movie.id}`)\r\n        }}\r\n        src={getMovieImg(movie?.poster_path, true)}\r\n        alt=\"\"\r\n        className=\"watchlist__card-img\"\r\n      />\r\n      <div className=\"watchlist__description\">\r\n        <div className=\"watchlist__description-content\">\r\n          <h1 className=\"watchlist__description-title\">{movie?.title}</h1>\r\n          <ul className=\"watchlist__description-genres-list\">\r\n            {movie.genre_ids?.map((genreId) =>\r\n              <li className=\"watchlist__description-genre\">\r\n                {genres.find(({id}) => genreId === id)?.name}\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"watchlist__remove-from-watchlist-block\">\r\n        <AddToWatchListButton media_id={movie.id} media_type={media_type} />\r\n      </div>\r\n    </motion.div>\r\n  )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { getGenres } from './api';\r\nimport { WatchlistElement } from './WatchlistElement';\r\n\r\nconst classNames = require('classnames');\r\n\r\nexport const WatchlistList = ({moviesList, media_type}) => {\r\n  const slider = useRef(null);\r\n  const [genres, setGenres] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getGenres().then((response) => setGenres(response));\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"watchlist__list\">\r\n      {moviesList?.map((movie) => (\r\n        <WatchlistElement key={Math.random()}movie={movie} media_type={media_type} genres={genres}/>\r\n      ))}\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { cleanAccInfo, setSessionId, updateAccInfo, updateWatchlist } from '../redux/actions';\r\nimport { WatchlistTab } from '../components/WatchlistTab';\r\nimport { WatchlistList } from '../components/WatchlistList';\r\nimport { useRouteMatch } from 'react-router';\r\n\r\nconst classNames = require('classnames')\r\n\r\nconst WatchlistPage = ({session_id, watchlist, updateWatchlist}) => {\r\n  const match = useRouteMatch('/watchlist/:mediaType')\r\n\r\n  useEffect(() => updateWatchlist(session_id), [])\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"container\">\r\n        <div className=\"watchlist\">\r\n          <div className=\"watchlist__list-select-block\">\r\n            <WatchlistTab title=\"tv series\" titleInUrl=\"tv\"/>\r\n            <WatchlistTab title=\"movies\" titleInUrl=\"movie\"/>\r\n          </div>\r\n          {match?.params?.mediaType === 'movie'\r\n            ? <WatchlistList moviesList={watchlist.movie?.map((movie) => ({...movie, media_type: 'movie'}))} media_type=\"movie\"/>\r\n            : <WatchlistList moviesList={watchlist.tv?.map((movie) => ({...movie, media_type: 'tv'}))} media_type=\"tv\"/>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect((state) => ({session_id: state.session.session ,watchlist: state.session.watchlist}), {cleanAccInfo, setSessionId, updateAccInfo, updateWatchlist})(WatchlistPage)","import folder from '../lottie/folder.json'\r\nimport Lottie from 'lottie-web';\r\nimport { useRouteMatch } from 'react-router';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst classNames = require('classnames')\r\n\r\nexport const FavoritesTab = ({title, titleInUrl}) => {\r\n  const [lottieAnim, setLottieAnim] = useState({})\r\n  const animation = useRef(null)\r\n\r\n  const match = useRouteMatch('/favorites/:mediaType')\r\n\r\n  useEffect(() => {\r\n    setLottieAnim(Lottie.loadAnimation({\r\n      container: animation.current,\r\n      renderer: 'svg',\r\n      quality: 'hight',\r\n      loop: false,\r\n      autoplay: false,\r\n      animationData: folder\r\n    }))\r\n    if(lottieAnim.setSpeed) {\r\n      lottieAnim.setSpeed(2.5)\r\n    }\r\n\r\n  }, [])\r\n  \r\n  useEffect(() => {\r\n    if(match.params.mediaType === titleInUrl && lottieAnim.playSegments) {\r\n      lottieAnim?.playSegments([34, 90], true)\r\n    }\r\n    if(match.params.mediaType !== titleInUrl && lottieAnim.playSegments) {\r\n      lottieAnim?.playSegments([0, 1], true)\r\n    }\r\n  }, [match.params.mediaType])\r\n  return (\r\n    <Link\r\n      to={`/favorites/${titleInUrl}`}\r\n      onMouseOver={() => {\r\n        if(match.params.mediaType !== titleInUrl) {\r\n          lottieAnim?.playSegments([21, 34], true)\r\n        }\r\n      }}\r\n      onMouseLeave={() => {\r\n        if(match.params.mediaType !== titleInUrl) {\r\n          lottieAnim?.playSegments([0, 1], true)\r\n        }\r\n      }}\r\n      className={classNames(\"watchlist__list-select-link\", {\"watchlist__list-select-link--active\": match.params.mediaType === titleInUrl})}\r\n    >\r\n      <div className=\"watchlist__folder-lottie\" ref={animation}></div>\r\n      {title}\r\n    </Link>\r\n  )\r\n}","import React from 'react'\r\nimport { getMovieImg } from './api'\r\nimport { useHistory } from 'react-router';\r\nimport MarkAsFavoriteButton from './MarkAsFavoriteButton';\r\n\r\nconst classNames = require(\"classnames\");\r\n\r\nexport const FavoritesListElement = ({ movie, genres, media_type}) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div\r\n      className={classNames(\"watchlist__card\")}\r\n    >\r\n      <img\r\n        onClick={() => {\r\n          console.log(history)\r\n          history.push(`/${movie.media_type}/${movie.id}`)\r\n        }}\r\n        src={getMovieImg(movie?.poster_path, true)}\r\n        alt=\"\"\r\n        className=\"watchlist__card-img\"\r\n      />\r\n      <div className=\"watchlist__description\">\r\n        <div className=\"watchlist__description-content\">\r\n          <h1 className=\"watchlist__description-title\">{movie?.title}</h1>\r\n          <ul className=\"watchlist__description-genres-list\">\r\n            {movie.genre_ids?.map((genreId) =>\r\n              <li className=\"watchlist__description-genre\">\r\n                {genres.find(({id}) => genreId === id)?.name}\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"watchlist__remove-from-watchlist-block\">\r\n        <MarkAsFavoriteButton key={movie.id} media_id={movie.id} media_type={media_type} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { getGenres } from './api';\r\nimport { FavoritesListElement } from './FavoritesListElement';\r\n\r\nconst classNames = require('classnames');\r\n\r\nexport const FavortiesList = ({moviesList, media_type}) => {\r\n  const slider = useRef(null);\r\n  const [genres, setGenres] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getGenres().then((response) => setGenres(response));\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"watchlist__list\">\r\n      {moviesList?.map((movie) => (\r\n        <FavoritesListElement key={Math.random()} movie={movie} media_type={media_type} genres={genres}/>\r\n      ))}\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { cleanAccInfo, setSessionId, updateAccInfo, updateFavoritesList } from '../redux/actions';\r\nimport { WatchlistList } from '../components/WatchlistList';\r\nimport { useRouteMatch } from 'react-router';\r\nimport { FavoritesTab } from '../components/FavoritesTab';\r\nimport { FavortiesList } from '../components/FavortiesList';\r\n\r\nconst classNames = require('classnames')\r\n\r\nconst Favorites = ({session_id, favorites, updateFavoritesList}) => {\r\n  const match = useRouteMatch('/favorites/:mediaType')\r\n\r\n  useEffect(() => updateFavoritesList(session_id), [])\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"container\">\r\n        <div className=\"watchlist\">\r\n          <div className=\"watchlist__list-select-block\">\r\n            <FavoritesTab title=\"tv series\" titleInUrl=\"tv\"/>\r\n            <FavoritesTab title=\"movies\" titleInUrl=\"movie\"/>\r\n          </div>\r\n          {match?.params?.mediaType === 'movie'\r\n            ? <FavortiesList moviesList={favorites.movie?.map((movie) => ({...movie, media_type: 'movie'}))} media_type=\"movie\"/>\r\n            : <FavortiesList moviesList={favorites.tv?.map((movie) => ({...movie, media_type: 'tv'}))} media_type=\"tv\"/>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect((state) => ({session_id: state.session.session, favorites: state.session.favorites}), {cleanAccInfo, setSessionId, updateAccInfo, updateFavoritesList})(Favorites)","import React, { useEffect, useRef, useState } from 'react'\r\nimport deleteButton from '../lottie/deleteButton.json'\r\nimport lottie from 'lottie-web';\r\nimport { connect } from 'react-redux';\r\nimport { updateLists } from '../redux/actions';\r\nimport { removeMovieFromList } from './api';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nconst classNames = require('classnames')\r\n\r\nconst DeleteMovieFromList = ({session_id, media_id, list_id, updateLists}) => {\r\n  const [lottieAnim, setLottieAnim] = useState({})\r\n  const animation = useRef(null)\r\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\r\n  const [deleted, setDeleted] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [isPressed, press] = useState(false)\r\n  \r\n  useEffect(() => {\r\n    if(location.hash === '#action_submited' && isPressed) {\r\n      removeMovieFromList(list_id, media_id, session_id).then(() => {\r\n        console.log('trying to remove')\r\n        updateLists(session_id)\r\n      })\r\n  \r\n      history.push({hash: '#'})\r\n      press(false)\r\n    }\r\n  }, [location, isPressed])\r\n\r\n  useEffect(() => {\r\n    setLottieAnim(lottie.loadAnimation({\r\n      container: animation.current,\r\n      renderer: 'svg',\r\n      loop: false,\r\n      autoplay: false,\r\n      animationData: JSON.parse(JSON.stringify(deleteButton))\r\n    }))\r\n    // if(lottieAnim.setSpeed) {\r\n    //   lottieAnim?.setSpeed(2.5)\r\n    // }\r\n  }, [])\r\n  useEffect(() => {\r\n    if(lottieAnim.playSegments && theFirstPlay) {\r\n      lottieAnim.playSegments([1, 2], true)\r\n      setTheFirstPlay(false)\r\n    }\r\n  }, [lottieAnim])\r\n\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={() => {\r\n        if(lottieAnim.playSegments) {\r\n          lottieAnim.playSegments([0, 5], true)\r\n        }\r\n      }}\r\n\r\n      onMouseLeave={() => {\r\n        if(lottieAnim.playSegments && !deleted) {\r\n          lottieAnim.playSegments([1, 2], true)\r\n        }\r\n      }}\r\n\r\n      onMouseDown={() => {\r\n        if(lottieAnim.playSegments) {\r\n          lottieAnim.playSegments([5, 18], true)\r\n        }\r\n      }}\r\n\r\n      onMouseUp={() => {\r\n        if(lottieAnim.playSegments) {\r\n          lottieAnim.playSegments([18, 32])\r\n          setDeleted(true)\r\n        }\r\n      }}\r\n      onClick={() => {\r\n        history.push({hash: '#conf-window'})\r\n        press(true)\r\n      }}\r\n      className=\"addToWatchListButton\"\r\n      ref={animation}\r\n    >\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    session_id: state.session.session,\r\n  }),\r\n  {updateLists}\r\n)(DeleteMovieFromList)\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { getMovieImg } from './api'\r\nimport { useHistory } from 'react-router';\r\nimport AddToWatchListButton from './AddToWatchListButton';\r\nimport { connect } from 'react-redux';\r\nimport { Picture } from './Picture';\r\nimport { AnimatePresence, motion, useAnimation } from 'framer-motion';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport DeleteMovieFromList from './DeleteMovieFromList';\r\nimport { random } from 'lodash';\r\n\r\nconst classNames = require(\"classnames\");\r\n\r\nconst ListElement = ({ media, genres, list_id}) => {\r\n  const history = useHistory();\r\n  const {ref, inView} = useInView()\r\n  const animation = useAnimation();\r\n  const deleteLottie = useRef(null)\r\n\r\n  useEffect(() => {\r\n    \r\n  })\r\n\r\n  useEffect(() => {\r\n    if(inView) {\r\n      animation.start({\r\n        scale: 1,\r\n      })\r\n    } else {\r\n      animation.start({\r\n        scale: 0.4,\r\n      })\r\n    }\r\n  }, [inView])\r\n  return (\r\n    <div style={{heigth: 'max-size', width: '100%'}}>\r\n      <motion.div\r\n        key={`${list_id}-${media.id}`}\r\n        // initial={{scale: 0.1}}\r\n        ref={ref}\r\n        animate={animation}\r\n        className={classNames(\"list-card\")}\r\n      >\r\n        <div\r\n          onClick={() => {\r\n            history.push(`/${media.media_type}/${media.id}`)\r\n            window.location.reload();\r\n          }}\r\n          className=\"list-card__img\"\r\n        >\r\n          <Picture picture_path={media.poster_path}/>\r\n        </div>\r\n        <div className=\"list-card__title\">\r\n          {media.title}\r\n        </div>\r\n        {/* <div className=\"watchlist__remove-from-watchlist-block\">\r\n          <AddToWatchListButton media_id={movie.id} media_type={media_type} />\r\n        </div> */}\r\n        <div className=\"list-card__action-button-container\">\r\n          <div ref={deleteLottie} className=\"list-card__delete-button\">\r\n            <DeleteMovieFromList media_id={media.id} list_id={list_id}/>\r\n          </div>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect((state) => ({genres: state.session.genres}))(ListElement)","import { motion, useAnimation } from \"framer-motion\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport { getCreatedList } from \"./api\";\r\nimport lottie from \"lottie-web\";\r\n\r\nexport const ListSelector = ({ id, name }) => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch('/lists/:listId?')\r\n  const animation = useAnimation();\r\n\r\n  useEffect(() => {\r\n    console.log(match.params.listId, id)\r\n    if(+match.params.listId === id) {\r\n      animation.start({\r\n        transformOrigin: \"left bottom\",\r\n        height: \"75px\",\r\n        fontSize: \"30px\",\r\n        backgroundColor: \"red\",\r\n        transition: {duration: 0.01},\r\n      })\r\n    } else {\r\n      animation.start({\r\n        transformOrigin: \"left bottom\",\r\n        height: \"50px\",\r\n        fontSize: \"20px\",\r\n        backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n        transition: {duration: 0.01},\r\n      })\r\n    }\r\n  }, [match.params.listId])\r\n\r\n  return (\r\n    <div style={{heigth: 'max-size', width: '100%'}}>\r\n      <motion.div\r\n        animate={animation}\r\n        exit={{translateX: '-100%', opacity: 0, translateDuration: 0.1}}\r\n        key={id}\r\n        className=\"lists-page__list-option\"\r\n        onClick={() => {\r\n          if(window.location.href.includes(`${id}`)) {\r\n            history.push(`/lists`)\r\n            return;  \r\n          }\r\n          history.push(`/lists/${id}`)\r\n        }}\r\n      >\r\n        {name}\r\n      </motion.div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport lottie from 'lottie-web';\r\nimport { connect } from 'react-redux';\r\nimport { addMovieToList, checkItemStatus, createList, getLists, removeMovieFromList } from './api';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { updateLists } from '../redux/actions';\r\nimport addList from '../lottie/addList.json'\r\n\r\nconst classNames = require('classnames')\r\n\r\nconst CreateListButton = ({session_id, lists, media_id, updateLists}) => {\r\n  const [active, setActive] = useState(false);\r\n  const [lottieAnim, setLottieAnim] = useState({})\r\n  const [itemStatus, setItemStatus] = useState({})\r\n  const [changingList, setChangingList] = useState({toBeAdded: [], toBeRemoved: []})\r\n  const animation = useRef(null)\r\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\r\n  const [newListData, setNewListData] = useState({});\r\n\r\n  const setMovieToBeAdded = () => {\r\n    setChangingList({...changingList, toBeAdded: [...changingList.toBeAdded, media_id]})\r\n  }\r\n\r\n  const setMovieToBeRemoved = () => {\r\n    setChangingList({...changingList, toBeRemoved: [...changingList.toBeRemoved, media_id]})\r\n  }\r\n\r\n  const deleteMovieFromChanging = () => {\r\n    setChangingList({\r\n      ...changingList,\r\n      toBeAdded:[...changingList.toBeAdded].filter(({id}) => id !== media_id),\r\n      toBeRemoved: [...changingList.toBeRemoved].filter(({id}) => id !== media_id)\r\n    })\r\n  }\r\n\r\n  const doesMovieBelongToList = (list_id) => {\r\n    if(changingList.toBeRemoved.some(({id}) => list_id === id)) {\r\n      return false;      \r\n    }\r\n    if(changingList.toBeAdded.some(({id}) => list_id === id)) {\r\n      return true\r\n    }\r\n    return itemStatus?.some(({id}) => list_id === id)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLottieAnim(lottie.loadAnimation({\r\n      container: animation.current,\r\n      renderer: 'svg',\r\n      loop: false,\r\n      autoplay: false,\r\n      animationData: JSON.parse(JSON.stringify(addList))\r\n    }))\r\n    if(lottieAnim.setSpeed) {\r\n      lottieAnim?.setSpeed(2.5)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    checkItemStatus(media_id, session_id).then((response) => {\r\n      console.log('status', response)\r\n      setItemStatus(response.results)\r\n    });\r\n  }, [lists])\r\n\r\n  useEffect(() => {\r\n    if(lottieAnim.playSegments && theFirstPlay) {\r\n        lottieAnim?.playSegments([0, 1], true)\r\n        setTheFirstPlay(false)\r\n    }\r\n  }, [lottieAnim])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => {\r\n          console.log(lists)\r\n          if(lottieAnim?.playSegments) {\r\n            lottieAnim?.playSegments([0, 62], true)\r\n          }\r\n          setActive(!active)\r\n          // addMovieToList(1, media_id, session_id)\r\n          // .then(() => {\r\n          //   updateLists(session_id)\r\n          // })\r\n        }}\r\n        className=\"create-list-button\"\r\n        ref={animation}\r\n      >\r\n      </div>\r\n      <AnimatePresence>\r\n        {active &&\r\n          <motion.div\r\n            initial={{opacity: 0, scale: 0, translateX: '-50%', translateY: '-50%'}}\r\n            animate={{opacity: 1, scale: 1, translateX: '-50%', translateY: '-50%'}}\r\n            exit={{opacity: 0, scale: 0, translateX: '-50%', translateY: '-50%'}}\r\n            transition={{ duration: 0.1}}\r\n            className=\"action-window\"\r\n          >\r\n            <div className=\"action-window__header\">\r\n              <div className=\"action-window__close-button\" onClick={() => setActive(false)}></div>\r\n            </div>\r\n            <div className=\"action-window__content\">\r\n              <div className=\"action-window__title\">\r\n                  create list\r\n              </div>\r\n              <motion.div\r\n                initial={{opacity: 0, translateX: -100}}\r\n                animate={{opacity: 1, translateX: 0}}\r\n                transition={{ duration: 0.2}}\r\n              >\r\n                <form onSubmit={(event) => {\r\n                  console.log(newListData)\r\n                  createList(newListData.name, newListData.description, session_id).then(() => {\r\n                    updateLists(session_id)\r\n                  })\r\n                  \r\n                }}>\r\n                  Your custom list name*\r\n                  <input\r\n                    placeholder='Movies for my mom'\r\n                    value={newListData.name}\r\n                    onChange={(event) => {\r\n                      setNewListData({...newListData, name: event.target.value})\r\n                    }}\r\n                    className=\"action-window__input\"\r\n                    type=\"text\"\r\n                  />\r\n                  Your custom list description*\r\n                  <input\r\n                    placeholder='Only those she loves'\r\n                    value={newListData.description}\r\n                    onChange={(event) => {\r\n                      setNewListData({...newListData, description: event.target.value})\r\n                    }}\r\n                    className=\"action-window__input\"\r\n                    type=\"textfield\"\r\n                  />\r\n                  <button className=\"action-window__submit-button\" type=\"submit\">Create</button>\r\n                </form>\r\n              </motion.div>\r\n            </div>\r\n          </motion.div>\r\n        }\r\n      </AnimatePresence>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    session_id: state.session.session,\r\n    accInfo: state.session.accInfo,\r\n    lists: state.session.lists\r\n  }),\r\n  {updateLists}\r\n)(CreateListButton)\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport lottie from 'lottie-web';\r\nimport { connect } from 'react-redux';\r\nimport { addMovieToList, checkItemStatus, createList, getLists, getMovieImg, getMoviesByTitle, removeMovieFromList } from './api';\r\nimport { AnimatePresence, motion, useAnimation } from 'framer-motion';\r\nimport { updateLists } from '../redux/actions';\r\nimport addList from '../lottie/addList.json'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport debounce from 'lodash.debounce'\r\nimport { Picture } from './Picture';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nconst classNames = require('classnames')\r\n\r\nconst AddMoviesToListSearchResult = ({movie, session_id, updateLists}) => {\r\n  const animation = useAnimation()\r\n  const match = useRouteMatch('/lists/:listId?')\r\n\r\n  return (\r\n    <motion.div\r\n      onHoverStart={() => {\r\n        animation.start({scaleY: 1})\r\n      }}\r\n      onHoverEnd={() => {\r\n        animation.start({scaleY: 0})\r\n      }}\r\n      className=\"action-window__search-result\"\r\n    >\r\n      <Picture\r\n        picture_path={getMovieImg(movie.poster_path)}\r\n        w500\r\n        mediaType=\"media\"\r\n      />\r\n      <motion.div\r\n        onClick={() => {\r\n          addMovieToList(match.params.listId, movie.id, session_id)\r\n          updateLists(session_id)\r\n        }}\r\n        initial={{scaleY: 0, transitionDelay: 0.1}}\r\n        animate={animation}\r\n        className=\"action-window__search-result-add-button\"\r\n      >\r\n        add\r\n      </motion.div>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nconst AddMoviesToListSearchResultWithConnect = connect(\r\n  (state) => ({\r\n    session_id: state.session.session,\r\n  }),\r\n  {updateLists}\r\n)(AddMoviesToListSearchResult)\r\n\r\nexport const AddMoviesToListWindow = ({setActive, session_id, updateLists}) => {\r\n  const [lottieAnim, setLottieAnim] = useState({})\r\n  const [itemStatus, setItemStatus] = useState({})\r\n  const [changingList, setChangingList] = useState({toBeAdded: [], toBeRemoved: []})\r\n  const animation = useRef(null)\r\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\r\n  const [newListData, setNewListData] = useState({});\r\n\r\n  const [results, setResults] = useState([])\r\n\r\n  const onSearch = useCallback(debounce((title) => {\r\n    getMoviesByTitle(title, 'movie').then((data) => setResults((data || []).slice(0, 7)))\r\n  }, 500), [])\r\n\r\n  const doesMovieBelongToList = (list_id) => {\r\n    if(changingList.toBeRemoved.some(({id}) => list_id === id)) {\r\n      return false;      \r\n    }\r\n    if(changingList.toBeAdded.some(({id}) => list_id === id)) {\r\n      return true\r\n    }\r\n    return itemStatus?.some(({id}) => list_id === id)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLottieAnim(lottie.loadAnimation({\r\n      container: animation.current,\r\n      renderer: 'svg',\r\n      loop: false,\r\n      autoplay: false,\r\n      animationData: JSON.parse(JSON.stringify(addList))\r\n    }))\r\n    if(lottieAnim.setSpeed) {\r\n      lottieAnim?.setSpeed(2.5)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(lottieAnim.playSegments && theFirstPlay) {\r\n        lottieAnim?.playSegments([0, 1], true)\r\n        setTheFirstPlay(false)\r\n    }\r\n  }, [lottieAnim])\r\n\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{opacity: 0, scale: 0, translateX: '-50%', translateY: '-50%'}}\r\n      animate={{opacity: 1, scale: 1, translateX: '-50%', translateY: '-50%'}}\r\n      exit={{opacity: 0, scale: 0, translateX: '-50%', translateY: '-50%'}}\r\n      transition={{ duration: 0.1}}\r\n      className=\"action-window action-window--big\"\r\n    >\r\n      <div className=\"action-window__header\">\r\n        <div className=\"action-window__close-button\" onClick={() => setActive(false)}></div>\r\n      </div>\r\n      <div className=\"action-window__content\">\r\n        <div className=\"action-window__title\">\r\n          add movies to list\r\n        </div>\r\n        <div className=\"action-window__search-container\">\r\n          <input\r\n            onChange={(event) => {\r\n              onSearch(event.target.value)\r\n              console.log(results)\r\n            }}\r\n            className=\"action-window__search\"\r\n          />\r\n          <div className=\"action-window__search-icon\">\r\n            <FontAwesomeIcon\r\n              icon={faSearch}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"action-window__search-results-block\">\r\n          {results.length > 0\r\n            ?\r\n              results.map((movie) => <AddMoviesToListSearchResultWithConnect key={movie.id} movie={movie}/>)\r\n            :\r\n              <div className=\"action-window__default-result\"> \r\n                results...\r\n              </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    session_id: state.session.session,\r\n  }),\r\n  {updateLists}\r\n)(AddMoviesToListWindow)\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport addMoviesToList from '../lottie/addMoviesToList.json'\r\nimport lottie from 'lottie-web';\r\nimport { connect } from 'react-redux';\r\nimport { addToWatchlist, getWatchlist } from './api';\r\nimport { updateWatchlist } from '../redux/actions';\r\nimport { Link } from 'react-router-dom';\r\nimport { AddMoviesToListWindow } from './AddMoviesToListWindow';\r\n\r\nconst classNames = require('classnames')\r\n\r\nconst AddMoviesToList = ({session_id, accInfo, media_id, media_type, watchlist, updateWatchlist}) => {\r\n  const [active, setActive] = useState(false);\r\n  const [lottieAnim, setLottieAnim] = useState({})\r\n  const animation = useRef(null)\r\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLottieAnim(lottie.loadAnimation({\r\n      container: animation.current,\r\n      renderer: 'svg',\r\n      loop: false,\r\n      autoplay: false,\r\n      animationData: JSON.parse(JSON.stringify(addMoviesToList))\r\n    }))\r\n    if(lottieAnim.setSpeed) {\r\n      lottieAnim?.setSpeed(2.5)\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    if(lottieAnim.playSegments && theFirstPlay) {\r\n      lottieAnim?.playSegments([0, 1], true)\r\n      setTheFirstPlay(false)\r\n    }\r\n  }, [lottieAnim])\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onMouseEnter={() => {\r\n          if(lottieAnim.playSegments) {\r\n            lottieAnim.playSegments([1, 59], true)\r\n          }\r\n        }}\r\n        onMouseLeave={() => {\r\n          if(lottieAnim.playSegments) {\r\n            lottieAnim.playSegments([0, 1], true)\r\n          }\r\n        }}\r\n        onMouseDown={() => {\r\n          if(lottieAnim.playSegments) {\r\n            lottieAnim.playSegments([59, 91], true)\r\n          }\r\n        }}\r\n        onMouseUp={() => {\r\n          if(lottieAnim.playSegments) {\r\n            lottieAnim.playSegments([0, 1], true)\r\n          }\r\n        }}\r\n        onClick={() => {\r\n          setActive(!active)\r\n          addToWatchlist({session_id, account_id: accInfo.id, media_type, media_id, watchlist: active})\r\n          .then(() => {\r\n            updateWatchlist(session_id)\r\n          })\r\n        }}\r\n        className=\"lists-page__add-movies-to-list-button\"\r\n      >\r\n        <div\r\n          className=\"add-movies-to-list\"\r\n          ref={animation}\r\n        />\r\n      </div>\r\n      {active && <AddMoviesToListWindow setActive={setActive}/>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    session_id: state.session.session,\r\n    accInfo: state.session.accInfo,\r\n    watchlist: state.session.watchlist\r\n  }),\r\n  {updateWatchlist}\r\n)(AddMoviesToList)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { useHistory, useRouteMatch } from 'react-router';\r\nimport { clearList, deleteList, getCreatedList } from '../components/api';\r\nimport ListElement from '../components/ListElement';\r\nimport { AnimatePresence, motion, useAnimation } from 'framer-motion';\r\nimport { ListSelector } from '../components/ListSelector';\r\nimport { updateLists } from '../redux/actions';\r\nimport add from '../lottie/add.json'\r\nimport Lottie from 'react-lottie';\r\nimport CreateListButton from '../components/CreateListButton';\r\nimport { AddMoviesToListWindow } from '../components/AddMoviesToListWindow';\r\nimport AddMoviesToList from '../components/AddMoviesToList';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { HashLink } from 'react-router-hash-link';\r\n\r\nconst classNames = require('classnames')\r\n\r\nconst DeleteOrClearTheListButton = ({func, session_id, updateLists}) => {\r\n  const match = useRouteMatch('/lists/:listId?')\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [isPressed, press] = useState(false)\r\n  \r\n  useEffect(() => {\r\n    if(location.hash === '#action_submited' && isPressed) {\r\n      if(func === 'delete') {\r\n        history.push('/lists')\r\n        deleteList(match.params.listId, session_id).then(() => {\r\n          updateLists(session_id)\r\n        })\r\n      } else {\r\n        clearList(match.params.listId, session_id).then(() => {\r\n          updateLists(session_id)\r\n        })\r\n      }\r\n    }\r\n  }, [location, isPressed])\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        history.push({hash: '#conf-window'})\r\n        press(true)  \r\n      }}\r\n      className={classNames([{\"lists-page__delete-button\": func === 'delete', \"lists-page__clear-button\": func === 'clear'}])}\r\n    >\r\n      {func === 'delete' ? 'delete the list' : 'clear the list'}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst DeleteOrClearTheListButtonWithRedux = connect((state) => ({session_id: state.session.session}), {updateLists})(DeleteOrClearTheListButton)\r\n\r\nconst ListsPage = ({lists, session_id, updateLists}) => {\r\n  const match = useRouteMatch('/lists/:listId?')\r\n  const [selectedList, selectList] = useState({});\r\n  const animation = useAnimation();\r\n  const [titleInputValue, setTitleInputValue] = useState('')\r\n  const history = useHistory();\r\n  const [sectionIsActive, setSectionActive] = useState(false);\r\n  \r\n\r\n  useEffect(() => {\r\n    if(match.params.listId) {\r\n      getCreatedList(match.params.listId).then((res) => {\r\n        selectList(res)\r\n      })\r\n    } else {\r\n      selectList(false)\r\n    }\r\n    console.log('a', selectedList)\r\n    if(match.params.listId === selectedList.id) {\r\n      animation.start({\r\n        translateX: 20\r\n      })\r\n    } else {\r\n      animation.start({\r\n        translateX: 0\r\n      })\r\n    }\r\n  }, [match.params.listId, lists])\r\n\r\n  useEffect(() => {\r\n    setTitleInputValue(selectedList.name)\r\n  }, [selectedList])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page\">\r\n        <div className=\"container\">\r\n          <div className=\"lists-page grid grid--desktop\">\r\n            <div\r\n              className={classNames({\r\n                \"lists-page__select-section\": true,\r\n                \"lists-page__select-section--active\": sectionIsActive,\r\n                \"grid__item--1-4\": true\r\n              })}\r\n            >\r\n              <div className=\"lists-page__select-container\">\r\n                <AnimatePresence>\r\n                  {lists.map((list) => (\r\n                    <ListSelector key={list.id} id={list.id} name={list.name}/>\r\n                  ))}\r\n                </AnimatePresence>\r\n              </div>\r\n              <div\r\n                onClick={() => {setSectionActive(!sectionIsActive)}}\r\n                className=\"lists-page__select-section-handle\"\r\n              >\r\n              </div>\r\n            </div>\r\n            <div className=\"lists-page__list grid__item--5-12\">\r\n              <h1 className=\"lists-page__title\">\r\n                {selectedList ? selectedList.name : 'This is list page'}\r\n                {/* <input value={titleInputValue} type=\"text\" className=\"lists-page__title-input\" /> */}\r\n                {selectedList && <AddMoviesToList/>}\r\n              </h1>\r\n              <p className=\"lists-page__description\">{selectedList ? selectedList.description : 'select one list to see its elements'}</p>\r\n              <div className=\"lists-page__list\">\r\n                <AnimatePresence>\r\n                  {selectedList.items?.map((movie) => (\r\n                    <ListElement key={`${selectedList.id}-${movie.id}`} media={movie} list_id={selectedList.id}/>\r\n                  ))}\r\n                </AnimatePresence>\r\n              </div>\r\n              <div style={{display: 'flex'}}>\r\n                {selectedList &&\r\n                  <DeleteOrClearTheListButtonWithRedux func=\"delete\"/>\r\n                }\r\n                {(selectedList && selectedList.items?.length > 0) &&\r\n                  <DeleteOrClearTheListButtonWithRedux func=\"clear\"/>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <CreateListButton />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect((state) => ({session_id: state.session.session, lists: state.session.lists}), {updateLists})(ListsPage)","import { motion } from 'framer-motion';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { useLocation, useRouteMatch } from 'react-router-dom';\r\nimport { getPerson, getPersonImg, getPersonsCredits } from '../components/api';\r\n\r\nconst PersonPage = ({accInfo}) => {\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"container\">\r\n        <div className=\"grid\">\r\n          <div className=\"grid__item--1-3 profile-page__avatar-container\">\r\n            <motion.img\r\n              initial={{ scale: 0, rotate: 180 }}\r\n              animate={{ scale: 1, rotate: 0 }}\r\n              src={getPersonImg(accInfo?.avatar?.tmdb?.avatar_path)}\r\n              alt=\"\"\r\n              className=\"profile-page__avatar\"\r\n            >\r\n            </motion.img>\r\n          </div>\r\n          <motion.div\r\n            initial={{scaleX: 0}}\r\n            animate={{scaleX: 1}}\r\n            className=\"grid__item--4-12 profile-page__description\"\r\n          >\r\n            <motion.div\r\n              className=\"profile-page__username grid\"\r\n            >\r\n              {accInfo.username}\r\n            </motion.div>\r\n          </motion.div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect((state) => ({accInfo: state.session.accInfo}))(PersonPage)\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport lottie from 'lottie-web';\r\nimport { connect } from 'react-redux';\r\nimport { addMovieToList, checkItemStatus, createList, getLists, getMovieImg, getMoviesByTitle, removeMovieFromList } from './api';\r\nimport { AnimatePresence, motion, useAnimation } from 'framer-motion';\r\nimport { updateLists } from '../redux/actions';\r\nimport addList from '../lottie/addList.json'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport debounce from 'lodash.debounce'\r\nimport { Picture } from './Picture';\r\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\r\n\r\nconst classNames = require('classnames')\r\n\r\nexport const ConfirmationWindow = ({ session_id, updateLists}) => {\r\n  const [lottieAnim, setLottieAnim] = useState({})\r\n  const [itemStatus, setItemStatus] = useState({})\r\n  const [changingList, setChangingList] = useState({toBeAdded: [], toBeRemoved: []})\r\n  const animation = useRef(null)\r\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\r\n  const [newListData, setNewListData] = useState({});\r\n  const location = useLocation()\r\n  const [active, setActive] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  const [results, setResults] = useState([])\r\n\r\n  const onSearch = useCallback(debounce((title) => {\r\n    getMoviesByTitle(title, 'movie').then((data) => setResults((data || []).slice(0, 7)))\r\n  }, 500), [])\r\n\r\n  const doesMovieBelongToList = (list_id) => {\r\n    if(changingList.toBeRemoved.some(({id}) => list_id === id)) {\r\n      return false;      \r\n    }\r\n    if(changingList.toBeAdded.some(({id}) => list_id === id)) {\r\n      return true\r\n    }\r\n    return itemStatus?.some(({id}) => list_id === id)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLottieAnim(lottie.loadAnimation({\r\n      container: animation.current,\r\n      renderer: 'svg',\r\n      loop: false,\r\n      autoplay: false,\r\n      animationData: JSON.parse(JSON.stringify(addList))\r\n    }))\r\n    if(lottieAnim.setSpeed) {\r\n      lottieAnim?.setSpeed(2.5)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(lottieAnim.playSegments && theFirstPlay) {\r\n        lottieAnim?.playSegments([0, 1], true)\r\n        setTheFirstPlay(false)\r\n    }\r\n  }, [lottieAnim])\r\n\r\n  useEffect(() => {\r\n    if(location.hash === '#conf-window') {\r\n      setActive(true)\r\n    } else {\r\n      setActive(false)\r\n    }\r\n  }, [location])\r\n\r\n\r\n  return (\r\n    <div\r\n      id=\"conf-window\"\r\n      key=\"conf-window\"\r\n      // exit={{opacity: 0, scale: 0, translateX: '-50%', translateY: '-50%'}}\r\n      // transition={{ duration: 0.1}}\r\n      className={classNames([\"action-window\", \"action-window--for-confirmation\", {\"action-window--for-confirmation--active\": active}])}\r\n      \r\n    >\r\n      <div className=\"action-window__header\">\r\n        <div className=\"action-window__close-button\" onClick={() => history.push({hash: '#'})}></div>\r\n      </div>\r\n      <div className=\"action-window__content\">\r\n        <div className=\"action-window__title\">\r\n          Are you sure?\r\n        </div>\r\n        <button onClick={() => history.push({hash: 'action_submited'})} className=\"action-window__submit-button\">\r\n          Yes\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import './styles/App.scss';\r\nimport Menu from './components/Menu';\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport MoviePage from './pages/MoviePage';\r\nimport { Info } from './pages/Info'\r\nimport Home from './pages/Home'\r\nimport { CollectionPage } from './pages/CollectionPage';\r\nimport { PersonPage } from './pages/PersonPage';\r\nimport {Switch} from 'react-router'\r\nimport { SearchPage } from './pages/SearchPage';\r\nimport LoginWindow from './pages/LoginWindow';\r\nimport Navigation from './components/Navigation'\r\nimport WatchlistPage from './pages/WatchlistPage';\r\nimport FavoritesPage from './pages/FavoritesPage';\r\nimport ListsPage from './pages/ListsPage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport { ConfirmationWindow } from './components/ConfirmationWindow';\r\n\r\nfunction App() {\r\n  const match = useRouteMatch('/:mediaType/:mediaId')\r\n  // const [accInfo, setAccInfo] = useState({});\r\n\r\n  // console.log(accInfo)\r\n\r\n  // useEffect(() => {\r\n  //   getAccInfo().then((response) => {setAccInfo(response)})\r\n  // }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation/>\r\n      <Switch>\r\n        <Route name=\"app\" path=\"/\" exact>\r\n          <Home/>\r\n        </Route>\r\n        <Route name=\"app\" path=\"/search\" exact>\r\n          <SearchPage/>\r\n        </Route>\r\n        <Route path=\"/info\">\r\n          <Info/>\r\n        </Route>\r\n        <Route path=\"/person/:personId\" exact>\r\n          <PersonPage key={Math.random()} id={match?.params?.personId}/>\r\n        </Route>\r\n        <Route path=\"/watchlist/:mediaType\" exact>\r\n          <WatchlistPage/>\r\n        </Route>\r\n        <Route path=\"/favorites/:mediaType\" exact>\r\n          <FavoritesPage/>\r\n        </Route>\r\n        <Route path=\"/lists/:listId?\" exact>\r\n          <ListsPage/>\r\n        </Route>\r\n        <Route path=\"/:mediaId/:mediaId\" exact>\r\n          {match?.params?.mediaType !== 'collections'\r\n            ?\r\n            <MoviePage id={match?.params?.mediaId} key={`moviePage${match?.params?.mediaId}`}/>\r\n            :\r\n            <CollectionPage/>\r\n          }\r\n        </Route>\r\n        <Route path=\"/profile\" exact>\r\n          <ProfilePage/>\r\n        </Route>\r\n      </Switch>\r\n        \r\n      <ConfirmationWindow/>\r\n      <LoginWindow/>\r\n      <Menu />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { getAccInfo } from \"../components/api\"\r\nimport { CHANGE_LANGUAGE, CLEAN_ACCINFO, CLEAN_FAVORITES, CLEAN_WATCHLIST, SET_SESSION_ID, UPDATE_ACCINFO, UPDATE_FAVORITES, UPDATE_LISTS, UPDATE_WATCHLIST } from \"./types\"\r\n\r\nconst initialState = {\r\n  session: localStorage.getItem('session') || '',\r\n  accInfo: JSON.parse(localStorage.getItem('accInfo') || '{}') || {},\r\n  watchlist: JSON.parse(localStorage.getItem('watchlist') || '{}') || {},\r\n  favorites: JSON.parse(localStorage.getItem('favorites') || '{}') || {},\r\n  lists: JSON.parse(localStorage.getItem('lists') || '[]') || [],\r\n  genres: [\r\n    {\"id\":28,\"name\":\"Action\"}, {\"id\":12,\"name\":\"Adventure\"},\r\n    {\"id\":16,\"name\":\"Animation\"}, {\"id\":35,\"name\":\"Comedy\"},\r\n    {\"id\":80,\"name\":\"Crime\"}, {\"id\":99,\"name\":\"Documentary\"},\r\n    {\"id\":18,\"name\":\"Drama\"}, {\"id\":10751,\"name\":\"Family\"},\r\n    {\"id\":14,\"name\":\"Fantasy\"}, {\"id\":36,\"name\":\"History\"},\r\n    {\"id\":27,\"name\":\"Horror\"}, {\"id\":10402,\"name\":\"Music\"},\r\n    {\"id\":9648,\"name\":\"Mystery\"}, {\"id\":10749,\"name\":\"Romance\"},\r\n    {\"id\":878,\"name\":\"Science Fiction\"},{\"id\":10770,\"name\":\"TV Movie\"},\r\n    {\"id\":53,\"name\":\"Thriller\"}, {\"id\":10752,\"name\":\"War\"},\r\n    {\"id\":37,\"name\":\"Western\"}\r\n  ],\r\n  language: localStorage.getItem('language'),\r\n}\r\n\r\nexport const sessionReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case SET_SESSION_ID:\r\n      return ({...state, session: action.payload})\r\n    case UPDATE_ACCINFO:\r\n      return ({...state, accInfo: action.payload})\r\n    case UPDATE_WATCHLIST:\r\n      console.log(action.payload)\r\n      return ({...state, watchlist: action.payload})\r\n    case CLEAN_ACCINFO:\r\n      return ({...state, accInfo: {}})\r\n    case CLEAN_WATCHLIST:\r\n      return ({...state, watchlist: {}})\r\n    case UPDATE_FAVORITES:\r\n      console.log(action.payload)\r\n      return ({...state, favorites: action.payload})\r\n    case UPDATE_LISTS:\r\n      return ({...state, lists: action.payload})\r\n    case CLEAN_FAVORITES:\r\n      return ({...state, favorites: {}})\r\n    case CHANGE_LANGUAGE:\r\n      return ({...state, language: action.payload})\r\n  }\r\n  return state\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { sessionReducer } from \"./sessionReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  session: sessionReducer,\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter as Router } from 'react-router-dom'\r\nimport { createStore } from 'redux';\r\nimport { rootReducer } from './redux/rootReducer';\r\nimport { createHashHistory } from 'history';\r\nimport { Provider } from 'react-redux';\r\nimport { applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport const history = createHashHistory();\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <Router basename=\"/\" history={history}>\r\n        <App />\r\n      </Router>\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}