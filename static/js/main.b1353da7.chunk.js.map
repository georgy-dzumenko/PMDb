{"version":3,"sources":["components/Menu.jsx","components/api.js","components/Picture.jsx","components/PersonCard.jsx","redux/types.jsx","redux/actions.jsx","components/AddToWatchListButton.jsx","components/MarkAsFavoriteButton.jsx","components/MovieCard.jsx","components/MoviesSlider.jsx","components/AddToListButton.jsx","pages/MoviePage.jsx","pages/Info.jsx","components/Poster.jsx","pages/Home.jsx","pages/CollectionPage.jsx","pages/PersonPage.jsx","components/SearchPageCheckbox.jsx","components/FilterVisibilityToggler.jsx","pages/SearchPage.jsx","pages/LoginWindow.jsx","components/NavigationDropdown.jsx","components/NavigationSearch.jsx","components/Navigation.jsx","components/WatchlistTab.jsx","components/WatchlistElement.jsx","components/WatchlistList.jsx","pages/WatchlistPage.jsx","components/FavoritesTab.jsx","components/FavoritesListElement.jsx","components/FavortiesList.jsx","pages/FavoritesPage.jsx","components/ListElement.jsx","pages/ListsPage.jsx","App.jsx","reportWebVitals.js","redux/sessionReducer.jsx","redux/rootReducer.jsx","index.js"],"names":["classNames","require","Menu","location","useLocation","id","className","hash","smooth","to","icon","faChevronLeft","BASE_URL","api_key","getMoviesByYear","year","a","type","fetch","then","response","json","data","results","map","el","media_type","result","tvResult","title","name","getWatchlist","session_id","account_id","res","movie","getFavorites","getAccInfo","sid","getPerson","getMoviesByTitle","mediaType","getGenres","genres","getMovieImg","img","w500","getPersonImg","Picture","picture_path","animation","useRef","useState","lottieAnim","setLottieAnim","useEffect","Lottie","loadAnimation","container","current","animationData","avatar","moviePosterPlug","loop","autoplay","onMouseEnter","play","onMouseLeave","stop","src","alt","ref","PersonCard","person","profile_path","renderer","hover","avatarAnim","onMouseOver","job","character","SET_SESSION_ID","UPDATE_ACCINFO","UPDATE_WATCHLIST","UPDATE_FAVORITES","CLEAN_ACCINFO","CLEAN_WATCHLIST","CLEAN_FAVORITES","UPDATE_LISTS","setSessionId","localStorage","setItem","payload","updateAccInfo","console","log","dispatch","JSON","stringify","cleanAccInfo","updateWatchlist","account","tv","updateFavoritesList","connect","state","session","accInfo","watchlist","media_id","some","active","setActive","theFirstPlay","setTheFirstPlay","lottie","parse","addButton","setSpeed","playSegments","onClick","headers","method","body","addToWatchlist","favorites","favorite","markAsFavorite","last","history","useHistory","push","window","reload","poster_path","backdrop_path","genre_ids","genreId","find","event","stopPropagation","MoviesSlider","moviesList","peopleList","slider","useInView","inView","useAnimation","start","scaleX","motion","div","animate","length","scrollBy","left","clientWidth","behavior","index","faChevronRight","lists","updateLists","getLists","createNewActive","setNewActive","newListData","setNewListData","addToListLottie","initial","opacity","translateX","transition","duration","onSubmit","description","createList","value","onChange","target","list","list_id","addMovieToList","match","useRouteMatch","cast","setCast","trailer","setTrailer","crew","setCrew","setMovie","similar","setSimilar","reviews","setReviews","params","mediaId","movieType","key","getCrew","reverse","getCredits","getMoviesById","getSimilar","getReviews","pathname","scrollTo","vote_average","overview","belongs_to_collection","username","frameBorder","allow","allowFullScreen","review","author_details","avatar_path","content","Date","created_at","toLocaleString","month","Info","href","SwiperCore","use","Autoplay","Pagination","Navigation","EffectCoverflow","Parallax","Poster","selectedMovieId","selectMovieId","Image","nextMovieWithDebounce","useCallback","debounce","cancel","modules","A11y","effect","spaceBetween","slidesPerView","navigation","pagination","clickable","delay","disableOnInteraction","onSwiper","swiper","moviesOnPoster","setMoviesOnPoster","newTv","setNewTv","newMovies","setNewMovies","CollectionPage","collection","setCollection","collectionId","parts","part","e","PersonPage","credits","setCredits","setPerson","personId","known_for_department","birthday","deathday","biography","Object","entries","reduce","prev","cur","filtered","full","filter","sort","b","SearchPageCheckbox","text","searchParams","URLSearchParams","search","isOpened","open","get","split","optionId","delete","set","toString","cencelOption","selectNewOption","SearchPage","setGenres","query","setQuery","selectedMediaType","selectMediaType","resultArr","setResultArr","applyQuery","trim","append","checked","htmlFor","filteredByTitle","selectedGenres","slice","every","genre","cleanWatchlist","password","userData","setUserData","loading","setLoading","isLogged","setLogged","err","setErr","action","tockenRes","token","request_token","createSession","success","status_message","deleteSession","background","speed","style","width","height","margin","onAnimationEnd","NavigationDropdown","isActive","NavigationSearch","setResluts","setText","input","onSearch","onBlur","focus","faSearch","ActiveLine","layoutId","right","bottom","position","backgroundColor","setAccInfo","scroll","scrollIntoView","faBars","AnimateSharedLayout","tmdb","WatchlistTab","titleInUrl","quality","folder","WatchlistElement","threshold","WatchlistList","Math","random","FavoritesTab","FavoritesListElement","FavortiesList","scale","whileInView","selectedList","selectList","items","App","path","exact","FavoritesPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","getItem","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b1353da7.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport { HashLink } from 'react-router-hash-link'\nimport { useLocation } from 'react-router-dom'\nimport { motion } from 'framer-motion';\n\nconst classNames = require(\"classnames\")\n\nexport const Menu = () => {\n  const location = useLocation()\n\n  return (\n    <div id=\"menu\" className={classNames(\"menu\", {\"menu--active\": location.hash === \"#menu\"})}>\n    \n      <div className=\"navigation\">\n        <div className=\"navigation__content\">\n          <HashLink\n            smooth to=\"#\"\n            className=\"menu__close-button\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft}/>\n          </HashLink>\n        </div>\n      </div>\n      <div className=\"container\">\n        <h1 className=\"menu__title\">\n          Menu\n        </h1>\n        <ul className=\"menu__main\">\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/\">\n              home\n            </HashLink>\n          </li>\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/watchlist/tv\">\n              watchlist\n            </HashLink>\n          </li>\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/favorites/tv\">\n              favorites\n            </HashLink>\n          </li>\n          <li className=\"menu__main-item\">\n            <HashLink className=\"menu__link\" to=\"/info\">\n              info\n            </HashLink>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n","const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst api_key = \"a1cacae9e097c731c0046cf30fa3b749\";\n\nexport const createList = (name, description, session_id) => fetch(\n    `${BASE_URL}list?api_key=${api_key}&session_id=${session_id}`,\n    {\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n        },\n        method: 'POST',\n        body: JSON.stringify({\n            name,\n            description,\n            // language,\n        })\n    }    \n)\n\nexport const removeMovieFromList = (list_id, movie_id, session_id) => fetch(\n    `${BASE_URL}list/${list_id}/remove_item?api_key=${api_key}&session_id=${session_id}`,\n    {\n        method: 'POST',\n        body: {\n            movie_id\n        }\n    }    \n)\n\nexport const addMovieToList = (list_id, media_id, session_id) => fetch(\n    `https://api.themoviedb.org/3/list/${list_id}/add_item?api_key=${api_key}&session_id=${session_id}`,\n    {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify({\n            media_id\n        })\n    }    \n)\n\nexport const deleteList = (list_id, session_id) => fetch(\n    `${BASE_URL}list/${list_id}?api_key=${api_key}&session_id=${session_id}`,\n    {\n        method: 'DELETE',\n    }    \n)\n\nexport const getLists = (session_id, account_id) => fetch(`${BASE_URL}account/${account_id}/lists?api_key=${api_key}&session_id=${session_id}`)\n    .then((res) => res.json())\n    .then((res) => res.results)\n\nexport const getCreatedList = (list_id) => fetch(`${BASE_URL}list/${list_id}?api_key=${api_key}`).then((res) => res.json())\n\nexport const getMoviesByYear = async (year, type = \"movie\") => {\n    if(type === \"multi\") {\n        return fetch(`${BASE_URL}discover/movie?year=${year}&api_key=${api_key}`)\n            .then(response => response.json())\n            .then(data => data.results.map((el) => ({...el, media_type: \"movie\"})))\n            .then((result) => getMoviesByYear(\"2021\", 'tv').then((tvResult) => [...result, ...tvResult.map((el) => ({...el, media_type: \"tv\", title: el.name}))]))\n    }\n\n    return fetch(`${BASE_URL}discover/${type}?year=${year}&api_key=${api_key}`)\n        .then(response => response.json())\n        .then(data => data.results.map((el) => ({...el, media_type: type, title: el.name || el.title})))\n}\n\nexport const createToken = () => fetch(`${BASE_URL}/authentication/token/new?api_key=${api_key}`)\n    .then(response => response.json())\n\nexport const createSessionWithLogin = (username, password, token) => fetch(\n        `${BASE_URL}authentication/token/validate_with_login?api_key=${api_key}`,\n        {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body:  JSON.stringify({\n                username,\n                password,\n                request_token: token\n            })\n        }\n    )\n    .then((res) => res.json())\n\nexport const createSession = (token) => fetch(\n    `${BASE_URL}authentication/session/new?api_key=${api_key}`,\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        method: 'POST',\n        body:  JSON.stringify({\n            request_token: token\n        })\n    }\n)\n.then((res) => res.json())\n\nexport const deleteSession = (session_id) => fetch(\n    `${BASE_URL}authentication/session?api_key=${api_key}`,\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        method: 'DELETE',\n        body:  JSON.stringify({\n            session_id\n        })\n    }\n)\n\nexport const addToWatchlist = ({session_id, account_id, media_type, media_id, watchlist}) => {\n    return fetch(\n    `${BASE_URL}account/${account_id}/watchlist?api_key=${api_key}&session_id=${session_id}`,\n    {\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Accept': 'application/json'\n        },\n        method: 'POST',\n        body:  JSON.stringify({\n            media_type,\n            media_id,\n            watchlist,\n        })\n    })\n}\n\nexport const markAsFavorite = ({session_id, account_id, media_type, media_id, favorite}) => {\n    return fetch(\n    `${BASE_URL}account/${account_id}/favorite?api_key=${api_key}&session_id=${session_id}`,\n    {\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Accept': 'application/json'\n        },\n        method: 'POST',\n        body:  JSON.stringify({\n            media_type,\n            media_id,\n            favorite,\n        })\n    })\n}\n\nexport const getWatchlist = ({session_id, account_id, media_type}) => fetch(\n    `${BASE_URL}account/${account_id}/watchlist/${media_type === 'movie' ? 'movies' : 'tv'}?api_key=${api_key}&session_id=${session_id}`\n)\n    .then((res) => res.json())\n    .then((res) => res.results.map((movie) => ({...movie, title: movie.title || movie.name})))\n\nexport const getFavorites = ({session_id, account_id, media_type}) => fetch(\n    `${BASE_URL}account/${account_id}/favorite/${media_type === 'movie' ? 'movies' : 'tv'}?api_key=${api_key}&session_id=${session_id}`\n)\n    .then((res) => res.json())\n    .then((res) => res.results.map((movie) => ({...movie, title: movie.title || movie.name})))\n\nexport const getAccInfo = (sid) => fetch(`${BASE_URL}account?api_key=${api_key}&session_id=${sid}`)\n    .then(response => response.json())\n\nexport const getCredits = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/credits?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.cast)\n\nexport const getTrailer = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/videos?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.results)\n\nexport const getCrew = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/credits?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.crew)\n\nexport const getPersonsCredits = (id) => fetch(`${BASE_URL}person/${id}/combined_credits?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data)\n\nexport const getPerson = (id) => fetch(`${BASE_URL}person/${id}?api_key=${api_key}`)\n    .then(response => response.json())\n\nexport const getPeopleArr = (idArr) => {\n    const resultArr = idArr.map(async (id) => {\n        const response = await fetch(`${BASE_URL}person/${id}?api_key=${api_key}`)\n        const result = response.json();\n        return result;\n    })\n\n    return resultArr;\n}\n\nexport const getReviews = (id, mediaType) => fetch(`${BASE_URL}${mediaType}/${id}/reviews?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(({results}) => results)\n\nexport const findPerson = (query) => fetch(`${BASE_URL}search/person?api_key=${api_key}&query=${query}`)\n    .then(response => response.json())\n    .then(({results}) => results)\n\nexport const getMoviesByTitle = (title, mediaType = 'multi') => fetch(`${BASE_URL}search/${mediaType}?query=${title}&api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.results?.map((movie) => ({...movie, title: movie.title || movie.name})))\n\nexport const getMoviesById = (id, media_type) => fetch(`${BASE_URL}${media_type}/${id}?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(response => {\n        console.log(response)\n        return ({...response, media_type, title: response.title || response.name})\n    })\n\nexport const discoverMedia = ({ with_people, media_type = 'tv'}) => {\n    return fetch(`${BASE_URL}discover/${media_type}?api_key=${api_key}${with_people ?`&with_people=${with_people}` : ''}`)\n    .then(response => response.json())\n    .then(response => response.results)\n}\n\nexport const getGenres = () => fetch(`${BASE_URL}genre/movie/list?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(response => response.genres)\n\nexport const getSimilar = (id, movieType) => fetch(`${BASE_URL}${movieType}/${id}/similar?api_key=${api_key}`)\n    .then(response => response.json())\n    .then(data => data.results.map((el) => ({...el, media_type: movieType, title: el.title || el.name})))\n\nexport const getCollection = (id) => fetch(`${BASE_URL}collection/${id}?api_key=${api_key}`)\n    .then(response => response.json())\n\nexport const getMovieImg = (img, w500 = false) => `https://image.tmdb.org/t/p/${w500 ? \"w500\" : 'original'}/${img}`\n\nexport const getPersonImg = (img, w500 = false) => `https://image.tmdb.org/t/p/${w500 ? \"w500\" : 'original'}/${img}`\n","import Lottie from 'lottie-web';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { getMovieImg } from './api';\nimport moviePosterPlug from '../lottie/moviePosterPlug.json'\nimport avatar from '../lottie/avatar.json'\n\nexport const Picture = ({picture_path, w500 = false, mediaType}) => {\n  const animation = useRef(null)\n  const [lottieAnim, setLottieAnim] = useState(null);\n\n  useEffect(() => {\n    setLottieAnim(Lottie.loadAnimation({\n      container: animation.current,\n      animationData: mediaType === 'person' ? avatar : moviePosterPlug,\n      loop: true,\n      autoplay: false,\n    }))\n  }, [])\n\n  return (\n    <div\n      onMouseEnter={() => lottieAnim?.play()}\n      onMouseLeave={() => lottieAnim?.stop()}\n      className='picture'\n    >\n      {picture_path\n        ?\n          <img className={'picture__img'} src={getMovieImg(picture_path, w500)} alt=\"\" />\n        :\n          <div className={'picture__img'} ref={animation}/>\n      }\n    </div>\n  )\n}\n","import Lottie from 'lottie-web';\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { getMovieImg } from './api'\nimport avatarAnim from '../lottie/avatar.json'\nimport { Picture } from './Picture';\n\nconst classNames = require(\"classnames\");\n\nexport const PersonCard = ({person}) => {\n  const avatar = useRef({})\n  const [lottieAnim, setLottieAnim] = useState(null)\n\n  useEffect(() => {\n    if(!person.profile_path) {\n      setLottieAnim(Lottie.loadAnimation({\n        container: avatar.current,\n        renderer: 'svg',\n        loop: true,\n        autoplay: false,\n        hover: false,\n        \n        animationData: avatarAnim\n      }))\n    }\n  }, [])\n  return (\n    <Link\n      to={`/person/${person.id}`}\n      onMouseOver={() => lottieAnim?.play()}\n      onMouseLeave={() => lottieAnim?.stop()}\n      className={classNames(\"person-card\")}\n    >\n      <Picture mediaType=\"person\" picture_path={person.profile_path} w500/>\n      <div className=\"person-card__job\">\n        {person.job || person.character}\n      </div>\n      <div className=\"person-card__name\">\n        {person.name}\n      </div>\n    </Link>\n  )\n}","export const SET_SESSION_ID = \"SESSION/SET_ID\"\nexport const UPDATE_ACCINFO = \"SESSION/UPDATE_ACCINFO\"\nexport const UPDATE_WATCHLIST = \"SESSION/UPDATE_WATCHLIST\"\nexport const UPDATE_FAVORITES = \"SESSION/UPDATE_FAVORITES\"\nexport const GET_WATCHLIST = \"SESSION/GET_WATCHLIST\"\nexport const CLEAN_ACCINFO = \"SESSION/CLEAN_ACCINFO\"\nexport const CLEAN_WATCHLIST = \"SESSION/CLEAN_WATCHLIST\"\nexport const CLEAN_FAVORITES = \"SESSION/CLEAN_FAVORITES\"\n\nexport const UPDATE_LISTS = \"SESSION/UPDATE_LISTS\"\nexport const ADD_TO_LIST = \"SESSION/ADD_TO_LIST\"\nexport const REMOVE_FROM_LIST = \"SESSION/REMOVE_FROM_LIST\"\nexport const CREATE_LIST = \"SESSION/CREATE_LIST\"\nexport const DELETE_LIST = \"SESSION/CREATE_LIST\"\n","import { getAccInfo, getFavorites, getLists, getMoviesById, getWatchlist } from \"../components/api\"\nimport { CLEAN_ACCINFO, CLEAN_FAVORITES, CLEAN_WATCHLIST, GET_WATCHLIST, SET_SESSION_ID, UPDATE_ACCINFO, UPDATE_FAVORITES, UPDATE_LISTS, UPDATE_WATCHLIST } from \"./types\"\n\nexport const setSessionId = (session_id) => {\n  localStorage.setItem('session', session_id)\n  return {\n    type: SET_SESSION_ID,\n    payload: session_id\n  }\n}\n\nexport const updateAccInfo = (session_id) => {\n  console.log('upd')\n  return dispatch => {\n    getAccInfo(session_id).then((res) => {\n      localStorage.setItem('accInfo', JSON.stringify(res))\n      dispatch({\n        type: UPDATE_ACCINFO,\n        payload: res,\n      })\n    })\n  }\n}\n\nexport const cleanAccInfo = () => {\n  localStorage.setItem('accInfo', '{}')\n  return ({type: CLEAN_ACCINFO})\n}\n\nexport const cleanWatchlist = () => {\n  localStorage.setItem('watchlist', '{}')\n  return ({type: CLEAN_WATCHLIST})\n}\n\nexport const updateWatchlist = (session_id) => {\n  return dispatch => {\n    getAccInfo(session_id).then((account) => {\n      getWatchlist({session_id, account_id: account.id, media_type: 'tv'}).then((res) => {\n        return res\n      }).then((res) => getWatchlist({session_id,  account_id: account.id, media_type: 'movie'}).then((response) => {\n        localStorage.setItem('watchlist', JSON.stringify({movie: response, tv: res}))\n        return (dispatch({\n          type: UPDATE_WATCHLIST,\n          payload: {movie: response, tv: res},\n        }))\n      }))\n    })\n  }\n}\n\nexport const updateFavoritesList = (session_id) => {\n  return dispatch => {\n    getAccInfo(session_id).then((account) => {\n      getFavorites({session_id, account_id: account.id, media_type: 'tv'}).then((res) => {\n        return res\n      }).then((res) => getFavorites({session_id,  account_id: account.id, media_type: 'movie'}).then((response) => {\n        localStorage.setItem('favorites', JSON.stringify({movie: response, tv: res}))\n        return (dispatch({\n          type: UPDATE_FAVORITES,\n          payload: {movie: response, tv: res},\n        }))\n      }))\n    })\n  }\n}\n\nexport const updateLists = (session_id) => {\n  return dispatch => {\n    getAccInfo(session_id).then((account) => {\n      getLists(session_id, account.id).then((res) => {\n        localStorage.setItem('lists', JSON.stringify(res))\n        return (dispatch({\n          type: UPDATE_LISTS,\n          payload: res,\n        }))\n      })\n    })\n  }\n}\n\nexport const cleanFavoritesList = () => {\n  localStorage.setItem('favorites', '{}')\n  return ({type: CLEAN_FAVORITES})\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport addButton from '../lottie/addButton.json'\nimport lottie from 'lottie-web';\nimport { connect } from 'react-redux';\nimport { addToWatchlist, getWatchlist } from './api';\nimport { updateWatchlist } from '../redux/actions';\nimport { Link } from 'react-router-dom';\n\nconst classNames = require('classnames')\n\nconst AddToWatchListButton = ({session_id, accInfo, media_id, media_type, watchlist, updateWatchlist}) => {\n  const [active, setActive] = useState(!watchlist[media_type]?.some(({id}) => +media_id === id));\n  const [lottieAnim, setLottieAnim] = useState({})\n  const animation = useRef(null)\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\n\n  useEffect(() => {\n    setLottieAnim(lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: JSON.parse(JSON.stringify(addButton))\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim?.setSpeed(2.5)\n    }\n  }, [])\n  useEffect(() => {\n    if(lottieAnim.playSegments && theFirstPlay) {\n      if(active) {\n        console.log('s')\n        lottieAnim?.playSegments([194, 195], true)\n      } else {\n        console.log('b')\n        lottieAnim?.playSegments([115, 116], true)\n      }\n      setTheFirstPlay(false)\n    }\n  }, [lottieAnim])\n\n  useEffect(() => {\n    if(lottieAnim.playSegments) {\n      if(active) {\n        lottieAnim?.playSegments([141, 195], true)\n      } else {\n        lottieAnim?.playSegments([46, 116], true)\n      }\n    }\n  }, [active])\n\n  return (\n    <div\n    onClick={() => {\n        setActive(!active)\n        addToWatchlist({session_id, account_id: accInfo.id, media_type, media_id, watchlist: active})\n        .then(() => {\n          updateWatchlist(session_id)\n        })\n      }}\n      className=\"addToWatchListButton\"\n      ref={animation}\n    >\n    </div>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    session_id: state.session.session,\n    accInfo: state.session.accInfo,\n    watchlist: state.session.watchlist\n  }),\n  {updateWatchlist}\n)(AddToWatchListButton)\n","import React, { useEffect, useRef, useState } from 'react'\nimport favorite from '../lottie/favorite.json'\nimport lottie from 'lottie-web';\nimport { connect } from 'react-redux';\nimport { markAsFavorite } from './api';\nimport { updateFavoritesList } from '../redux/actions';\n\nconst MarkAsFavoriteButton = ({session_id, accInfo, media_id, media_type, favorites, updateFavoritesList}) => {\n  const [active, setActive] = useState(!favorites[media_type]?.some(({id}) => +media_id === id));\n  const [lottieAnim, setLottieAnim] = useState({})\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\n  const animation = useRef(null)\n\n  useEffect(() => {\n    setLottieAnim(lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: JSON.parse(JSON.stringify(favorite)),\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim?.setSpeed(2.5)\n    }\n  }, [])\n\n  useEffect(() => {\n    if(lottieAnim.playSegments && theFirstPlay) {\n      if(active) {\n        lottieAnim.playSegments([0, 1], true)\n      } else {\n        lottieAnim.playSegments([33, 34], true)\n      }\n      setTheFirstPlay(false)\n    }\n  }, [lottieAnim])\n\n  useEffect(() => {\n    if(lottieAnim.playSegments) {\n      if(active) {\n        lottieAnim?.playSegments([0, 1], true)\n      } else {\n        lottieAnim?.playSegments([0, 34], true)\n      }\n    }\n  }, [active])\n\n  return (\n    <div\n      onClick={() => {\n        setActive(!active)\n        markAsFavorite({session_id, account_id: accInfo.id, media_type, media_id, favorite: active})\n          .then(() => {\n            updateFavoritesList(session_id)\n          })\n      }}\n      className=\"mark-as-favorite\"\n      ref={animation}\n    >\n    </div>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    session_id: state.session.session,\n    accInfo: state.session.accInfo,\n    favorites: state.session.favorites\n  }),\n  {updateFavoritesList}\n)(MarkAsFavoriteButton)\n","import React from 'react'\nimport { getMovieImg } from './api'\nimport { Picture } from './Picture';\nimport AddToWatchListButton from './AddToWatchListButton';\nimport MarkAsFavoriteButton from './MarkAsFavoriteButton';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst classNames = require(\"classnames\");\n\nconst MovieCard = ({ last = false, movie, genres}) => {\n  const history = useHistory();\n\n  return (\n    <div\n      className={classNames(\"movie-card\", {\"movie-card--last\": last})}\n      onClick={() => {\n        history.push(`/${movie.media_type}/${movie.id}`)\n        window.location.reload();\n      }}\n    >\n      <div\n        className=\"movie-card__img-container\"\n      >\n        <Picture picture_path={movie?.poster_path} w500/>\n      </div>\n      <div className=\"movie-card__description\">\n        {movie.backdrop_path\n          ?\n            <img className=\"movie-card__description-img\" src={getMovieImg(movie.backdrop_path, true)} alt=\"\" />\n          :\n            ''\n        }\n        <div className=\"movie-card__description-content\">\n          <h1 className=\"movie-card__description-title\">{movie?.title}</h1>\n          <ul className=\"movie-card__description-ganres-list\">\n            {movie.genre_ids?.map((genreId) =>\n              <li key={genreId} className=\"movie-card__description-ganre\">\n                {genres.find(({id}) => genreId === id)?.name}\n              </li>\n            )}\n          </ul>\n          <div onClick={(event) => {event.stopPropagation()}} className=\"movie-card__actions-container\">\n            <AddToWatchListButton media_id={movie.id} media_type={movie.media_type}/>\n            <MarkAsFavoriteButton media_id={movie.id} media_type={movie.media_type}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({genres: state.session.genres}))(MovieCard)\n","import React, { useEffect, useRef, useState } from 'react'\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { PersonCard } from './PersonCard';\nimport MovieCard from './MovieCard';\nimport { motion, useAnimation, useTransform, useViewportScroll } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\n\nconst classNames = require('classnames');\n\nexport const MoviesSlider = ({moviesList = [], peopleList = []}) => {\n  const slider = useRef(null);\n  const {ref, inView} = useInView()\n  const animation = useAnimation();\n\n  useEffect(() => {\n    if(inView) {\n      animation.start({\n        scaleX: 1\n      })\n    } else {\n      animation.start({\n        scaleX: 0\n      })\n    }\n  }, [inView])\n\n  return (\n    <motion.div\n      ref={ref}\n      animate={animation}\n      className={classNames(\"movies-slider\", {\"movies-slider--disabled\": [...moviesList, ...peopleList].length === 0})}\n    >\n      <div\n        onClick={() => {\n          slider.current.scrollBy({\n            left: -1 * slider.current.clientWidth * 0.9,\n            behavior: \"smooth\"\n          })\n        }}\n        className={classNames([\"movies-slider__scroll-button\", \"movies-slider__scroll-button--left\", {\"movies-slider--disabled\": moviesList || peopleList}])}\n        >\n        <FontAwesomeIcon icon={faChevronLeft}/>\n      </div>\n      <div\n        ref={slider}\n        className=\"movies-slider__tape\"\n      >\n        <div className=\"movies-slider__content\">\n          {peopleList.map((person) => (\n            <div key={person.id}>\n              <PersonCard key={person.id} person={person} />\n            </div>\n          ))}\n          {!!moviesList ? moviesList?.map((movie, index) => (\n            <div key={movie.id}>\n              <MovieCard key={movie.id} last={index === 0} movie={movie} />\n            </div>\n          )) : ''}\n        </div>\n      </div>\n      <div\n        onClick={() => {\n          slider.current.scrollBy({\n            left: slider.current.clientWidth * 0.9,\n            behavior: \"smooth\"\n          })\n        }}\n        className=\"movies-slider__scroll-button movies-slider__scroll-button--right\"\n      >\n        <FontAwesomeIcon icon={faChevronRight}/>\n      </div>\n    </motion.div>\n  )\n}","import React, { useEffect, useRef, useState } from 'react'\nimport addToListLottie from '../lottie/addToListLottie.json'\nimport lottie from 'lottie-web';\nimport { connect } from 'react-redux';\nimport { addMovieToList, createList, getLists } from './api';\nimport { motion } from 'framer-motion';\nimport { updateLists } from '../redux/actions';\n\nconst classNames = require('classnames')\n\nconst AddToListButton = ({session_id, accInfo, lists, media_id, media_type, watchlist, updateLists}) => {\n  const [active, setActive] = useState(false);\n  const [lottieAnim, setLottieAnim] = useState({})\n  const animation = useRef(null)\n  const [theFirstPlay, setTheFirstPlay] = useState(true);\n  const [createNewActive, setNewActive] = useState(false);\n  const [newListData, setNewListData] = useState({});\n\n  useEffect(() => {\n    setLottieAnim(lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: JSON.parse(JSON.stringify(addToListLottie))\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim?.setSpeed(2.5)\n    }\n  }, [])\n\n  useEffect(() => {\n    console.log(lists)\n  }, [lists])\n\n  useEffect(() => {\n    if(lottieAnim.playSegments && theFirstPlay) {\n      if(active) {\n        console.log('s')\n        lottieAnim?.playSegments([79, 125], true)\n      } else {\n        console.log('b')\n        lottieAnim?.playSegments([0, 1], true)\n      }\n      setTheFirstPlay(false)\n    }\n  }, [lottieAnim])\n\n  useEffect(() => {\n    \n  }, [active])\n\n  return (\n    <>\n      <div\n        onClick={() => {\n          console.log(lists)\n          if(lottieAnim?.playSegments) {\n            lottieAnim?.playSegments([0, 125], true)\n          }\n          setActive(!active)\n          // addMovieToList(1, media_id, session_id)\n          // .then(() => {\n          //   updateLists(session_id)\n          // })\n        }}\n        className=\"addToWatchListButton\"\n        ref={animation}\n      >\n      </div>\n      {active &&\n        <div className=\"add-to-list-window\">\n          <div className=\"add-to-list-window__header\">\n            <div className=\"add-to-list-window__close-button\" onClick={() => setActive(false)}></div>\n            <a className=\"add-to-list-window__create-list-button\" onClick={() => setNewActive(!createNewActive)}>create new list</a>\n          </div>\n          <div className=\"add-to-list-window__content\">\n            <div className=\"add-to-list-window__title\">\n              {!createNewActive\n                ? \"select list\"\n                : \"create list\"\n              }\n            </div>\n            {createNewActive\n              ?\n                <motion.div\n                  initial={{opacity: 0, translateX: -100}}\n                  animate={{opacity: 1, translateX: 0}}\n                  transition={{ duration: 0.2}}\n                >\n                  <form onSubmit={(event) => {\n                    console.log(newListData)\n                    createList(newListData.name, newListData.description, session_id)\n                    \n                    updateLists(session_id)\n                  }}>\n                    <input\n                      value={newListData.name}\n                      onChange={(event) => {\n                        setNewListData({...newListData, name: event.target.value})\n                      }}\n                      className=\"add-to-list-window__input\"\n                      type=\"text\"\n                    />\n                    <input\n                      value={newListData.description}\n                      onChange={(event) => {\n                        setNewListData({...newListData, description: event.target.value})\n                      }}\n                      className=\"add-to-list-window__input\"\n                      type=\"textfield\"\n                    />\n                    <button className=\"add-to-list-window__submit-button\" type=\"submit\">Create</button>\n                  </form>\n                </motion.div>\n              :\n                <ul className=\"add-to-list-window__list\">\n                  {lists.map((list) => (\n                    <li\n                      onClick={() => {\n                        addMovieToList(list.id, media_id, session_id)\n                        updateLists(session_id)\n                      }}\n                      key={list.id}\n                      className=\"add-to-list-window__list-element\"\n                    >\n                      {list.name}\n                    </li>\n                  ))}\n                </ul>\n            }\n          </div>\n        </div>\n      }\n    </>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    session_id: state.session.session,\n    accInfo: state.session.accInfo,\n    lists: state.session.lists\n  }),\n  {updateLists}\n)(AddToListButton)\n","import React, { useEffect, useState } from 'react'\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\nimport { getCredits, getCrew, getMovieImg, getMoviesById, getReviews, getSimilar, getTrailer } from '../components/api';\nimport {MoviesSlider} from '../components/MoviesSlider'\nimport AddToWatchListButton from '../components/AddToWatchListButton';\n\nimport { motion } from 'framer-motion';\nimport { connect } from 'react-redux';\nimport MarkAsFavoriteButton from '../components/MarkAsFavoriteButton';\nimport { Picture } from '../components/Picture';\nimport AddToListButton from '../components/AddToListButton';\n\nconst MoviePage = ({accInfo}) => {\n  console.log('перейшов')\n  const match = useRouteMatch(\"/:mediaType/:mediaId\");\n  const [cast, setCast] = useState([])\n  const [trailer, setTrailer] = useState([])\n  const [crew, setCrew] = useState([])\n  const [movie, setMovie] = useState({});\n  const [similar, setSimilar] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const location = useLocation();\n  const mediaType = match.params.mediaType\n  const mediaId = match.params.mediaId\n\n  // console.log(accInfo)\n\n  useEffect(() => {\n    getTrailer(mediaId, mediaType).then((response) => { setTrailer(response[0]?.key) })\n    getCrew(mediaId, mediaType).then((response) => { setCrew(response.reverse()) })\n    getCredits(mediaId, mediaType).then((response) => { setCast(response.reverse()) })\n    getMoviesById(mediaId, mediaType).then((response) => { setMovie(response) })\n    getSimilar(mediaId, mediaType).then((response) => { setSimilar(response) })\n    getReviews(mediaId, mediaType).then((response) => { setReviews(response) })\n  }, [location.pathname, mediaId, mediaType])\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [match])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"movie-page\">\n          <section className=\"page__section grid grid--desktop\">\n            <motion.div\n              initial={{opacity: 0, translateX: -100}}\n              animate={{opacity: 1, translateX: 0}}\n              transition={{ duration: 0.5}}\n              className=\"movie-page__poster grid__item--1-4\"\n            >\n              <div className=\"movie-page__poster-img\">\n                <Picture mediaType={mediaType} picture_path={movie.poster_path}/>\n              </div>\n            </motion.div>\n            <div className=\"page__description grid__item--5-12 grid--desktop\">\n              <motion.div\n                initial={{opacity: 0, translateX: -200}}\n                animate={{opacity: 1, translateX: 0}}\n                transition={{ duration: 0.7}}\n                className=\"grid\"\n              >\n                <div className=\"grid__item--1-12 page__title movie-page__title\">\n                  {movie?.title}\n                </div>\n                <div className=\"movie-page__votes grid__item--1-12\">\n                  rating: <span className=\"movie-page__votes-value\">{movie?.vote_average}</span>\n                </div>\n                <div className=\"movie-page__overview grid__item--1-12\">\n                  {movie.overview}\n                </div>\n                <div className=\"movie-page__genres-list grid__item-1-12\">\n                  {movie.genres?.map(({name}) =>\n                    <div className=\"movie-page__genre\">\n                      {name}\n                    </div>\n                  )}\n                </div>\n                {movie.belongs_to_collection &&\n                  <div className=\"grid__item--1-12\">\n                    collection:\n                    <Link className=\"movie-page__action-title-link\" to={`/collections/${movie.belongs_to_collection.id}`}>\n                      {movie.belongs_to_collection.name}\n                    </Link>\n                  </div>\n                }\n                <div className=\"grid__item--1-12\">\n                  <div className=\"movie-page__action\">\n                    <div className=\"movie-page__activon-title\">\n                      Add to/remove from <Link to={`/watchlist/${match.params.movieType}`} className=\"movie-page__action-title-link\">watchlist</Link>\n                    </div>\n                    {!!accInfo.username\n                      &&\n                        <AddToWatchListButton\n                          media_id={mediaId}\n                          media_type={mediaType}\n                        />\n                    }\n                    {!!accInfo.username\n                      &&\n                        <MarkAsFavoriteButton\n                          media_id={mediaId}\n                          media_type={mediaType}\n                        />\n                    }\n                    {!!accInfo.username\n                      &&\n                        <AddToListButton\n                          media_id={mediaId}\n                          media_type={mediaType}\n                        />\n                    }\n                  </div>\n                </div>\n              </motion.div>\n            </div>\n          </section>\n          <section className=\"page__section\">\n            <div className=\"movie-page__trailer\">\n              <iframe\n                title=\"trailer\"\n                className=\"movie-page__video\"\n                src={`https://www.youtube.com/embed/${trailer}`}\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              />\n            </div>\n          </section>\n          <section className=\"page__section\">\n            <div className=\"page__title\">\n              reviews\n            </div>\n              {\n                reviews.map((review) => (\n                    <div className=\"review\">\n                      <div className=\"review__author\">\n                        <img\n                          src={\n                            getMovieImg(review.author_details.avatar_path, true)\n                          }\n                          alt=\"\"\n                          className=\"review__author-img\"\n                        />\n                        <div className=\"review__author-nickname\">\n                          {review.author_details.name}\n                        </div>\n                      </div>\n                      <div className=\"review__content\">\n                        {review.content}\n                      </div>\n                      <div className=\"review__footer\">\n                        {new Date(review.created_at).toLocaleString('default', { year: 'numeric', month: 'long' })}\n                      </div>\n                    </div>\n                ))\n              }\n          </section>\n          <section className=\"page__section\">\n            {cast.length > 0\n              ?\n                <>\n                  <div className=\"page__title\">\n                   Cast\n                  </div>\n                  <MoviesSlider peopleList={cast} />\n                </>\n              : ''\n            }\n            {crew.length > 0\n              ?\n                <>\n                  <div className=\"page__title\">\n                    Crew\n                  </div>\n                  <MoviesSlider peopleList={crew} />\n                </>\n              : ''\n            }\n          </section>\n          <section className=\"page__section\">\n            <div className=\"page__title\">\n              Similar\n            </div>\n            <MoviesSlider moviesList={similar} />\n          </section>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({accInfo: state.session.accInfo}))(MoviePage)","import React from 'react'\n\nexport const Info = () => {  \n\n  return (\n    <div className=\"info page\">\n      <div className=\"container\">\n        <div className=\"info__param\">\n          <h1 className=\"info__title\">\n            API:\n          </h1>\n          <a href=\"https://www.themoviedb.org/\">\n            <div className=\"info__api\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}","import React, {useState, useEffect, useCallback} from 'react'\nimport \"swiper/swiper-bundle.css\";\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Autoplay } from 'swiper';\nimport { EffectCoverflow } from 'swiper';\n\n\nimport { Navigation, Pagination, A11y, Parallax } from 'swiper';\n\nimport debounce from 'lodash.debounce';\nimport { getMovieImg } from './api';\nimport { Link } from 'react-router-dom';\n\nSwiperCore.use([Autoplay, Pagination, Navigation, EffectCoverflow, Parallax]);\n\nexport const Poster = ({moviesList}) => {\n  const [selectedMovieId, selectMovieId] = useState(0)\n  const moviePicture = new Image(1180, 590);\n  moviePicture.src = `https://image.tmdb.org/t/p/original/${moviesList[selectedMovieId]?.backdrop_path}`\n\n  const nextMovie = () => {\n    if (selectedMovieId === moviesList.length - 1) {\n      selectMovieId(0);\n\n      return\n    }\n\n    selectMovieId(selectedMovieId + 1);\n  }\n\n  const nextMovieWithDebounce = useCallback(debounce(nextMovie, 10000), [selectedMovieId])\n\n  useEffect(() => {\n    nextMovieWithDebounce();\n\n    return nextMovieWithDebounce.cancel;\n  }, [selectedMovieId, nextMovieWithDebounce])\n\n  return (\n    <Swiper\n      modules={[Navigation, Pagination, A11y, EffectCoverflow, Parallax]}\n      effect=\"coverflow\"\n      spaceBetween={0}\n      slidesPerView={1}\n      navigation\n      pagination={{ clickable: true }}\n      loop={true}\n      autoplay={{\n        delay: 5000,\n        disableOnInteraction: false\n      }}\n      onSwiper={(swiper) => console.log(swiper)}\n    >\n        {moviesList?.map((movie) => (\n          <SwiperSlide key={movie.id}>\n            <div className=\"poster\">\n              <Link to={`${movie.media_type}/${movie.id}`}>\n                <img src={getMovieImg(movie.backdrop_path)} className=\"poster__img\" alt=\"\"/>\n                <div className=\"poster__title\">\n                  {movie.title}\n                </div>\n              </Link>\n            </div>\n          </SwiperSlide>\n        ))}\n        <div className=\"prev\"></div>\n        <div className=\"next\"></div>\n      </Swiper>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\nimport { getMoviesByYear } from '../components/api'\nimport { MoviesSlider } from '../components/MoviesSlider';\nimport { Poster } from '../components/Poster';\n\nconst Home = ({accInfo}) => {\n  const [moviesOnPoster, setMoviesOnPoster] = useState([]);\n  const [newTv, setNewTv] = useState([]);\n  const [newMovies, setNewMovies] = useState([]);\n\n  useEffect(() => {\n    getMoviesByYear(\"2021\", 'multi')\n      .then((result) => setMoviesOnPoster(result))\n    getMoviesByYear(\"2021\", 'movie')\n      .then((result) => setNewMovies(result))\n    getMoviesByYear(\"2021\", 'tv')\n      .then((result) => setNewTv(result))\n  }, [])\n\n  return (\n    <div className=\"page home\">\n      <div className=\"container\">\n        <h1 className=\"page__title\">\n          {!accInfo?.username\n            ? \"Home\"\n            : `Hi, ${accInfo?.username}!`\n          }\n        </h1>\n        \n        <section className=\"page__section\">\n          <main>\n            <Poster moviesList={moviesOnPoster}/>\n          </main>\n        </section>\n        <section className=\"page__section\">\n          <div className=\"page__title\">\n            Newest tv shows\n          </div>\n          <MoviesSlider moviesList={newTv}/>\n        </section>\n        <section className=\"page__section\">\n          <div className=\"page__title\">\n            Newest movies\n          </div>\n          <MoviesSlider moviesList={newMovies}/>\n        </section>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session, accInfo: state.session.accInfo}))(Home)\n","import React, { useEffect, useState } from 'react'\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport AddToWatchListButton from '../components/AddToWatchListButton';\nimport { getCollection, getMovieImg } from '../components/api'\nimport MarkAsFavoriteButton from '../components/MarkAsFavoriteButton';\nimport { Picture } from '../components/Picture';\n\nexport const CollectionPage = () => {\n  const match = useRouteMatch('/collections/:collectionId')\n  const history = useHistory();\n  const [collection, setCollection] = useState({})\n\n  useEffect(() => {\n    getCollection(match.params.collectionId).then((response) => setCollection(response))\n  }, [match.params.collectionId])\n  \n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"collections-page grid\">\n          <div className=\"grid grid__item--1-12\">\n            <div className=\"collections-page__poster grid__item--1-3\">\n              <div className=\"collections-page__poster-img\">\n                <Picture picture_path={collection.poster_path} mediaType=\"movie\"/>\n              </div>\n            </div>\n            <div className=\"page__description grid__item--4-12 grid\">\n              <h2 className=\"page__title grid__item--1-12\">{collection.name}</h2>\n              <div className=\"grid__item--1-12\">{collection.overview}</div>\n            </div>\n          </div>\n          {collection?.parts?.map((part) => (\n            <div\n              onClick={() => {\n                history.push(`/movie/${part.id}`)\n              }}\n              className=\"collections-page__part grid grid__item--1-12\"\n            >\n              <div className=\"collections-page__poster grid__item--1-2\">\n                <div className=\"collections-page__poster-img\">\n                  <Picture picture_path={part.poster_path} mediaType=\"movie\"/>\n                </div>\n              </div>\n              <div className=\"page__title grid__item--3-12\">{part.title}</div>\n              <div\n                onClick={(e) => e.stopPropagation()}\n                className=\"collections-page__actions-block\"\n              >\n                <AddToWatchListButton media_id={part.id} media_type=\"movie\"/>\n                <MarkAsFavoriteButton media_id={part.id} media_type=\"movie\"/>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport { getPerson, getPersonImg, getPersonsCredits } from '../components/api';\nimport {MoviesSlider} from '../components/MoviesSlider'\nimport { Picture } from '../components/Picture';\n\nexport const PersonPage = () => {\n  const match = useRouteMatch(\"/person/:personId\");\n  const [credits, setCredits] = useState([]);\n  const [person, setPerson] = useState({})\n  const location = useLocation();\n\n  useEffect(() => {\n    getPerson(match.params.personId).then((response) => setPerson(response));\n    getPersonsCredits(match.params.personId).then((response) => setCredits(response));\n  }, [location, match.params.personId])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"person-page grid\">\n          <div className=\"person-page__poster grid__item--1-4\">\n            <Picture mediaType='person' picture_path={person.profile_path}/>\n          </div>\n          <div className=\"grid__item--5-12\">\n            <h1 className=\"person-page__name\">\n              {person.name}\n            </h1>\n            <div className=\"person-page__params\">\n              <div className=\"person-page__param\">\n                <div>\n                  known for\n                </div>\n                <div/>\n                <div>\n                  {person.known_for_department}\n                </div>\n              </div>\n              <div className=\"person-page__param\">\n                <div>\n                  born\n                </div>\n                <div/>\n                <div>\n                  {person.birthday}\n                </div>\n              </div>\n              {person.deathday &&\n                <div className=\"person-page__param\">\n                  <div>\n                    died\n                  </div>\n                  <div/>\n                  <div>\n                    {person.deathday}\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n          <div className=\"person-page__biography grid__item--1-12\">\n            <h2 className=\"person-page__section-title\">\n              Biography\n            </h2>\n            <div className=\"person-page__biography-main\">\n              {person.biography}\n            </div>\n          </div>\n          <div className=\"grid__item--1-12\">\n            <h2 className=\"person-page__section-title\">\n              Acting\n            </h2>\n            <div>\n              <MoviesSlider moviesList={credits.cast} />\n            </div>\n          </div>\n          {\n            Object.entries(\n              credits.crew?.reduce((prev, cur) => ({\n                filtered: {\n                  [cur.job]: prev.full.filter((e) => e.job === cur.job),\n                  ...prev.filtered,\n                },\n                full: prev.full.filter((e) => e.job !== cur.job)\n              }), {full: credits.crew}).filtered || {}\n            ).sort((a, b) => b[1].length - a[1].length).map((movie) => (\n              <div className=\"grid__item--1-12\">\n              <h2 className=\"person-page__section-title\">\n                {movie[0]}\n              </h2>\n              <div>\n                <MoviesSlider moviesList={movie[1]} />\n              </div>\n            </div>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom';\nconst classNames = require('classnames');\n\nexport const SearchPageCheckbox = ({text, list}) => {\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const [isOpened, open] = useState(false);\n\n  const selectNewOption = (id) => {\n    searchParams.set(text, [searchParams.get(text), id])\n    history.push({ search: searchParams.toString() })\n  }\n  \n  const cencelOption = (id) => {\n    const result = searchParams.get(text)?.split(',').filter((optionId) => optionId !== '' && +optionId !== id);\n    console.log('result ', result)\n    if(result.length === 0) {\n      searchParams.delete(text)\n    } else {\n      searchParams.set(text, result)\n    }\n    history.push({ search: searchParams.toString() })\n  }\n\n  return (\n    <div className=\"checkbox\">\n      <div\n        onClick={() => { open(!isOpened) }}\n        className=\"checkbox__options-switcher\"\n      >\n        <div className={classNames(\"checkbox__options-switcher-text\", {\"checkbox__options-switcher-text--active\": isOpened})}>\n          {text}\n        </div>\n      </div>\n      <div className={\"checkbox__options-block\"}>\n        {\n          list.map(({id, name}) => (\n            <div\n              onClick={() => {\n                if(searchParams.get(text)?.split(',').some((optionId) => +optionId === id)) {\n                  cencelOption(id);\n                  return;\n                }\n                selectNewOption(id)\n              }}\n              className={classNames([\"checkbox__option\", {\"checkbox__option--active\": searchParams.get(text)?.split(',').some((optionId) => +optionId === id)}])}\n              key={id}\n            >\n              {name}\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom';\nconst classNames = require('classnames');\n\nexport const FilterVisibilityToggler = ({filter, title}) => {\n  const [isOpened, open] = useState(false);\n\n  return (\n    <div\n      className={\n        classNames([\n          \"search-page__filter-visibility-toggler\",\n          {\"search-page__filter-visibility-toggler--active\": isOpened}\n        ])\n      }\n      \n    >\n      <div\n        className={\n          classNames([\n            \"search-page__filter-visibility-toggler-text\",\n            {\"search-page__filter-visibility-toggler-text--active\": isOpened}\n          ])\n        }\n        onClick={() => open(!isOpened)}\n      >\n        {title}\n      </div>\n      <div\n        className={classNames([\n          \"search-page__filter-visibility-toggler-content\",\n          {\"search-page__filter-visibility-toggler-content--active\": isOpened}\n        ])}\n      >\n        {filter}\n      </div>\n    </div>\n  )\n}\n","import { debounce } from \"lodash\";\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { discoverMedia, getGenres, getMoviesByTitle } from '../components/api';\nimport { SearchPageCheckbox } from '../components/SearchPageCheckbox';\nimport { SearchPageCrewFilter } from '../components/SearchPageCrewFilter';\nimport { FilterVisibilityToggler } from '../components/FilterVisibilityToggler';\nimport Lottie from 'lottie-web';\nimport search from '../lottie/search.json'\nimport { useHistory, useLocation } from 'react-router';\nimport MovieCard from \"../components/MovieCard\";\n\nexport const SearchPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const [genres, setGenres] = useState([]);\n  const animation = useRef(null)\n  const [lottieAnim, setLottieAnim] = useState({})\n  const [query, setQuery] = useState(searchParams.get('with_keywords') || '')\n  const [selectedMediaType, selectMediaType] = useState(searchParams.get('media_type') || '')\n\n  const [resultArr, setResultArr] = useState([])\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n  }, [])\n\n  const applyQuery = useCallback(debounce((value) => {\n    if(value.trim() !== '') {\n      if(!searchParams.get('with_keywords')) {\n        searchParams.append('with_keywords', value);\n      }else {\n        searchParams.set('with_keywords', value);\n      }\n    } else {\n      searchParams.delete('with_keywords');\n    }\n    history.push({search: searchParams.toString()})\n  }, 500), [location]);\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n    setLottieAnim(Lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      loop: false,\n      autoplay: false,\n      animationData: search\n    }))\n  }, [])\n  \n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"grid\">\n          <div className=\"search-page__filters-block grid__item--1-4\">\n            <fieldset className=\"search-page__media-type-select-fieldset\">\n              <div className=\"search-page__media-type-select\">\n                <input\n                  type=\"radio\"\n                  id=\"tv\"\n                  name=\"mediaType\"\n                  checked={selectedMediaType === 'tv'}\n                  className=\"search-page__media-type-radio\"\n                  onChange={() => {\n                    searchParams.set('media_type', 'tv')\n                    selectMediaType('tv')\n                    history.push({search: searchParams.toString()})\n                  }}\n                />\n                <label className=\"search-page__media-type-radio-label\" htmlFor=\"tv\"> TV series</label>\n              </div>\n              <div className=\"search-page__media-type-select\">\n                <input\n                  type=\"radio\"\n                  id=\"movie\"\n                  name=\"mediaType\"\n                  checked={selectedMediaType === 'movie'}\n                  className=\"search-page__media-type-radio\"\n                  onChange={() => {\n                    searchParams.set('media_type', 'movie')\n                    selectMediaType('movie')\n                    history.push({search: searchParams.toString()})\n                  }}\n                />\n                <label className=\"search-page__media-type-radio-label\" htmlFor=\"movie\">Movie</label>\n              </div>\n            </fieldset>\n            <div className=\"search-page__filter\">\n            </div>\n            <div className=\"search-page__filter\">\n              <SearchPageCheckbox text=\"genres\" list={genres}/>\n            </div>\n          </div>\n          <div className=\"grid__item--5-12\">\n            <div className=\"search-page__search\">\n              <input\n                value={query}\n                onChange={(event) => {\n                  setQuery(event.target.value)\n                  applyQuery(event.target.value)\n                }}\n                type=\"text\"\n                className=\"search-page__search-input\"\n              />\n              <div\n                onClick={() => {\n                  if(lottieAnim.playSegments) {\n                    lottieAnim.playSegments([0, 21], true)\n                  }\n                    console.log('genres', query.split(' '))\n                    getMoviesByTitle(query, selectedMediaType)\n                      .then((filteredByTitle) => {\n                        const selectedGenres =  searchParams?.get('genres')?.split(',')?.slice(1);\n                        console.log(filteredByTitle, selectedGenres)\n                        if(selectedGenres) {\n                          setResultArr(filteredByTitle?.filter((el) => selectedGenres.slice(1).every((genre) => el.genre_ids.some((id) => +genre === +id))))\n                        } else {\n                          setResultArr(filteredByTitle)\n                        }\n                      })\n\n                    console.log(resultArr)\n                }}\n                ref={animation}\n                className=\"search-page__search-button\"\n              ></div>\n            </div>\n            <div className=\"search-page__results-container\">\n              {resultArr?.map((movie) => (\n                <MovieCard movie={{...movie, media_type: selectedMediaType}} genres={genres}/>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport { createSession, createToken, deleteSession } from '../components/api';\nimport { createSessionWithLogin, getAccInfo } from '../components/api';\nimport { cleanAccInfo, setSessionId, updateAccInfo, cleanWatchlist, updateWatchlist } from '../redux/actions';\nimport { motion } from 'framer-motion';\n\nconst classNames = require('classnames')\n\nconst LoginWindow = ({ session_id, setSessionId, updateAccInfo, cleanAccInfo, cleanWatchlist, updateWatchlist}) => {\n  const location = useLocation()\n  const [userData, setUserData] = useState({username: '', password: ''});\n  const [loading, setLoading] = useState(false);\n  const [isLogged, setLogged] = useState(!!session_id)\n  const [err, setErr] = useState('')\n  const history = useHistory({});\n\n  useEffect(() => {\n    setLogged(!!session_id);\n  }, [location.hash])\n\n  return (\n    <motion.div\n      initial={{opacity: 0, translateX: -100}}\n      animate={{opacity: 1, translateX: 0}}\n      transition={{ duration: 0.2}}\n      className={classNames(\"login\", {\"login--active\": location.hash === '#login'})}\n    >\n      <form\n        id=\"login\"\n        action=\"\"\n        className=\"login__container\"\n        onSubmit={(event) => {\n          \n          if(!session_id) {\n            setLoading(true);\n            createToken().then((tockenRes) => {\n              createSessionWithLogin(\n                userData.username,\n                userData.password,\n                tockenRes.request_token,\n              )\n                .then((res) => {\n                  createSession(res.request_token)\n                    .then((response) => {\n                      if(response.success) {\n                        history.push({hash:\"#\"})\n                        setSessionId(response.session_id)\n                        updateAccInfo(response.session_id)\n                        updateWatchlist(response.session_id)\n                        \n                      } else {\n                        setErr(response.status_message)\n                      }\n\n                      setLoading(false)\n                    })\n              })\n            })\n\n            return\n          }\n          deleteSession(session_id)\n          cleanAccInfo()\n          cleanWatchlist()\n          setSessionId('')\n        }}\n      >\n        <div className=\"login__title\">\n          {!isLogged ? \"Log in\" : \"Are you sure?\"}\n        </div>\n        <div className=\"login__err\">\n          {err}\n        </div>\n        {!isLogged\n          ?\n            <>\n              {loading &&\n                <lottie-player\n                  src={'https://assets8.lottiefiles.com/packages/lf20_knpXLX.json'}\n                  background=\"transparent\"\n                  speed=\"2\"\n                  style={{\n                    width: \"100px\",\n                    height: \"100px\",\n                    margin: \"0 auto\",\n                    }} \n                  autoplay\n                  onAnimationEnd={() => console.log('end')}\n                />\n              }\n              {!loading &&\n                <>\n                  <label htmlFor=\"username\" className=\"login__label\">User name</label>\n                  <input\n                    value={userData.username}\n                    onChange={(event) => setUserData({\n                      ...userData,\n                      username: event.target.value\n                    })}\n                    type=\"text\"\n                    id=\"username\"\n                    className=\"login__field\"\n                  />\n                  <label htmlFor=\"password\" className=\"login__label\">Password</label>\n                  <input\n                    value={userData.password}\n                    onChange={(event) => setUserData({\n                      ...userData,\n                      password: event.target.value\n                    })}\n                    type=\"password\"\n                    id=\"password\"\n                    className=\"login__field\"\n                  />\n                  <button\n                    onClick={() => setErr('')}\n                    type=\"submit\"\n                    className=\"login__submit-button\"\n                  >\n                    accept\n                  </button>\n                </>\n              }\n            </>\n          :\n            <>\n              <button\n                onClick={() => history.push({hash: '#'})}\n                type=\"submit\"\n                className=\"login__log-out-button\"\n              >\n                Log out\n              </button>\n            </>\n        }\n        <a onClick={() => history.push({hash: '#'})} className=\"login__close-button\"></a>\n        {!isLogged &&\n          <span className=\"login__sign-up-field\">\n            Don't have an account? <a href=\"https://www.themoviedb.org/signup\" className=\"login__sign-up-link\">Sign up!</a>\n          </span>\n        }\n      </form>\n    </motion.div>\n  )\n}\n\nexport default connect(\n  (state) => ({session_id: state.session.session}),\n  {\n    cleanWatchlist,\n    cleanAccInfo,\n    setSessionId,\n    updateAccInfo,\n    updateWatchlist\n  }\n)(LoginWindow)","import React, { useState } from 'react'\nimport \"../styles/blocks/navigation.scss\"\nimport { Link } from 'react-router-dom';\n\nconst classNames = require(\"classnames\");\n\nexport const NavigationDropdown = ({text}) => {\n  const [isActive, setActive] = useState(false); \n\n  return (\n    <>\n      <div\n        className={classNames(\n          \"navigation__dropdown\",\n          {\"navigation__dropdown--active\": isActive}\n        )}\n        onClick={() => setActive(!isActive)}\n        onMouseLeave={() => setActive(false)}\n      >\n        <div className=\"navigation__link-text\">\n          {text}\n        </div>\n        <div className={classNames(\"navigation__dropdown-options-block\", {\"navigation__dropdown-options-block--active\": !isActive})}>\n          <Link to='/watchlist/tv'className=\"navigation__dropdown-option\">\n            <div className=\"navigation__link-text\">\n              watchlist\n            </div>\n          </Link>\n          <Link to='/favorites/tv'className=\"navigation__dropdown-option\">\n            <div className=\"navigation__link-text\">\n              favorites\n            </div>\n          </Link>\n          <Link to='/lists'className=\"navigation__dropdown-option\">\n            <div className=\"navigation__link-text\">\n              lists\n            </div>\n          </Link>\n        </div>\n      </div>\n    </>\n  )\n}","import React, { useCallback, useRef, useState } from 'react'\nimport \"../styles/blocks/navigation.scss\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport debounce from 'lodash.debounce'\nimport { getMovieImg, getMoviesByTitle } from './api'\nimport { Link } from 'react-router-dom'\nimport { Picture } from './Picture'\n\nconst classNames = require(\"classnames\")\n\nexport const NavigationSearch = () => {\n  const [isActive, setActive] = useState(false);\n  const [results, setResluts] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  const input = useRef('')\n\n  const onSearch = useCallback(debounce((title) => {\n    getMoviesByTitle(title).then((data) => setResluts((data || []).slice(0, 7)))\n  }, 500), [])\n\n  return (\n    <>\n      <div\n        className={\n          classNames(\n            \"navigation__search\",\n            {\"navigation__search--active\": isActive}\n          )\n        }\n      >\n        <input\n          ref={input}\n          value={text}\n          onChange={(event) => {\n            setText(event.target.value)\n            onSearch(event.target.value)\n          }}\n          onBlur={() => setActive(false)}\n          className={\n            classNames(\n              \"navigation__search-input\",\n              {\"navigation__search-input--active\": isActive}\n            )\n          }\n        >\n        </input>\n        <div\n          onClick={() => {\n            if(isActive === false) {\n              setActive(true)\n              input.current.focus()\n            }else {\n              setActive(false)\n            }\n          }}\n          className={classNames(\"navigation__search-icon\", {\"navigation__search-icon--active\": isActive})}\n        >\n          <FontAwesomeIcon\n            icon={faSearch}\n          />\n        </div>\n        <ul className={classNames(\"navigation__search-results-block\", {\"navigation__search-results-block--active\": (text && isActive)})}>\n          {\n            <>\n              {\n                results.map(result => (\n                  <li key={result.id}>\n                    {\n                      <Link to={`/${result.media_type}/${result.id}`} className=\"navigation__search-result\">\n                        <div className=\"navigation__search-result-img\">\n                          <Picture mediaType={result.media_type} picture_path={result.profile_path || result.poster_path} w500/>\n                        </div>\n                        <h2 className=\"navigation__search-result-title\">\n                          {result.title}\n                        </h2>\n                      </Link>\n                    }\n                  </li>\n                ))\n              }\n              {\n                results.length > 0 ?\n                  <li key={\"end\"}>\n                    <Link to=\"/search\" className=\"navigation__search-more-results\">\n                      more results...\n                    </Link>\n                  </li>\n                :\n                  <li key={\"end\"} className=\"navigation__search-no-results\">\n                    no results\n                  </li>\n              }\n            </>\n          }\n        </ul>\n      </div>\n    </>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { NavigationDropdown } from \"./NavigationDropdown\"\nimport { NavigationSearch } from './NavigationSearch'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { HashLink } from 'react-router-hash-link'\nimport { useLocation } from 'react-router'\nimport { HashRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getAccInfo, getPersonImg } from './api'\nimport { AnimateSharedLayout, motion } from 'framer-motion'\n\nconst Navigation = ({session_id}) => {\n  const [accInfo, setAccInfo] = useState({})\n  const location = useLocation();\n  console.log(location)\n\n  useEffect(() => {\n    getAccInfo(session_id).then((res) => setAccInfo(res))\n  }, [session_id])\n\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation__content\">\n        {/* elements displayed only on mobiles */}\n        <HashLink\n          // smooth\n          scroll={(el) => el.scrollIntoView()}\n          className=\"navigation__menu\"\n          to=\"#menu\"\n        >\n          <FontAwesomeIcon\n            icon={faBars}\n          />\n        </HashLink>\n\n        <AnimateSharedLayout>\n          <Link to=\"/\" className=\"navigation__logo\">\n            PMDb\n            {location.pathname === '/' && <ActiveLine/>}\n          </Link>\n          <div className=\"navigation__main\">\n            <NavigationDropdown text=\"film catalogue\"/>\n            <Link to=\"/info\" className=\"navigation__link\">\n              <div className=\"navigation__link-text\">\n                Info\n              </div>\n              {location.pathname === '/info' && <ActiveLine/>}\n            </Link>\n            <Link to=\"/search\" className=\"navigation__link\">\n              <div className=\"navigation__link-text\">\n                search\n              </div>\n              {location.pathname === '/search' && <ActiveLine/>}\n            </Link>\n          </div>\n        </AnimateSharedLayout>\n        <div className=\"navigation__right-side-block\">\n          <NavigationSearch></NavigationSearch>\n          <HashLink\n            to=\"#login\"\n            className=\"navigation__link\"\n          >\n            <div className=\"navigation__link-text\">\n              {session_id\n                ? 'log out'\n                : 'log in'\n              }\n            </div>\n          </HashLink>\n          {session_id ?\n            <img\n              src={getPersonImg(accInfo?.avatar?.tmdb?.avatar_path)}\n              alt=\"\"\n              className=\"navigation__avatar\"\n            />\n            : ''\n          }\n        </div>\n      </div>  \n    </div>\n  )\n}\n\nfunction ActiveLine() {\n  return (\n    <motion.div\n      layoutId=\"activeLine\"\n      style={{\n        width: '100%',\n        height: '4px',\n        left: 0,\n        right: 0,\n        bottom: 0,\n        position: 'absolute',\n        backgroundColor: 'rgb(255, 0, 0)'\n      }}\n      transition={{duration: 0.2}}\n    />\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session}))(Navigation)","import folder from '../lottie/folder.json'\nimport Lottie from 'lottie-web';\nimport { useRouteMatch } from 'react-router';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst classNames = require('classnames')\n\nexport const WatchlistTab = ({title, titleInUrl}) => {\n  const [lottieAnim, setLottieAnim] = useState({})\n  const animation = useRef(null)\n\n  const match = useRouteMatch('/watchlist/:mediaType')\n\n  useEffect(() => {\n    setLottieAnim(Lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      quality: 'hight',\n      loop: false,\n      autoplay: false,\n      animationData: folder\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim.setSpeed(2.5)\n    }\n\n  }, [])\n  \n  useEffect(() => {\n    if(match.params.mediaType === titleInUrl && lottieAnim.playSegments) {\n      lottieAnim?.playSegments([34, 90], true)\n    }\n    if(match.params.mediaType !== titleInUrl && lottieAnim.playSegments) {\n      lottieAnim?.playSegments([0, 1], true)\n    }\n  }, [match.params.mediaType])\n  return (\n    <Link\n      to={`/watchlist/${titleInUrl}`}\n      onMouseOver={() => {\n        if(match.params.mediaType !== titleInUrl) {\n          lottieAnim?.playSegments([21, 34], true)\n        }\n      }}\n      onMouseLeave={() => {\n        if(match.params.mediaType !== titleInUrl) {\n          lottieAnim?.playSegments([0, 1], true)\n        }\n      }}\n      className={classNames(\"watchlist__list-select-link\", {\"watchlist__list-select-link--active\": match.params.mediaType === titleInUrl})}\n    >\n      <div className=\"watchlist__folder-lottie\" ref={animation}></div>\n      {title}\n    </Link>\n  )\n}","import React, { useEffect } from 'react'\nimport { getMovieImg } from './api'\nimport { useHistory } from 'react-router';\nimport AddToWatchListButton from './AddToWatchListButton';\nimport { motion, useAnimation } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\n\nconst classNames = require(\"classnames\");\n\nexport const WatchlistElement = ({ movie, genres, media_type}) => {\n  const history = useHistory();\n  const {ref, inView} = useInView({threshold: 0.2});\n  const animation = useAnimation()\n\n  useEffect(() => {\n    if(inView) {\n      animation.start({\n        opacity: 1,\n        transition: {\n          duration: 0.2\n        }\n      })\n    } else {\n      animation.start({\n        opacity: 0,\n        transition: {\n          duration: 0.2\n        }\n      })\n    }\n  }, [inView])\n\n  return (\n    <motion.div\n      ref={ref}\n      // initial=\"hidden\"\n      animate={animation}\n      // transition={{ duration: 0.3 }}\n      // variants={{\n      //   hidden: { opacity: 0, scale: 0 }\n      // }}\n      className={classNames(\"watchlist__card\")}\n    >\n      <img\n        onClick={() => {\n          console.log(history)\n          history.push(`/${movie.media_type}/${movie.id}`)\n        }}\n        src={getMovieImg(movie?.poster_path, true)}\n        alt=\"\"\n        className=\"watchlist__card-img\"\n      />\n      <div className=\"watchlist__description\">\n        <div className=\"watchlist__description-content\">\n          <h1 className=\"watchlist__description-title\">{movie?.title}</h1>\n          <ul className=\"watchlist__description-genres-list\">\n            {movie.genre_ids?.map((genreId) =>\n              <li className=\"watchlist__description-genre\">\n                {genres.find(({id}) => genreId === id)?.name}\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n      <div className=\"watchlist__remove-from-watchlist-block\">\n        <AddToWatchListButton media_id={movie.id} media_type={media_type} />\n      </div>\n    </motion.div>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { getGenres } from './api';\nimport { WatchlistElement } from './WatchlistElement';\n\nconst classNames = require('classnames');\n\nexport const WatchlistList = ({moviesList, media_type}) => {\n  const slider = useRef(null);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n  }, [])\n\n  return (\n    <div className=\"watchlist__list\">\n      {moviesList?.map((movie) => (\n        <WatchlistElement key={Math.random()}movie={movie} media_type={media_type} genres={genres}/>\n      ))}\n    </div>\n  )\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux';\n\nimport { cleanAccInfo, setSessionId, updateAccInfo, updateWatchlist } from '../redux/actions';\nimport { WatchlistTab } from '../components/WatchlistTab';\nimport { WatchlistList } from '../components/WatchlistList';\nimport { useRouteMatch } from 'react-router';\n\nconst classNames = require('classnames')\n\nconst WatchlistPage = ({session_id, watchlist, updateWatchlist}) => {\n  const match = useRouteMatch('/watchlist/:mediaType')\n\n  useEffect(() => updateWatchlist(session_id), [])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"watchlist\">\n          <div className=\"watchlist__list-select-block\">\n            <WatchlistTab title=\"tv series\" titleInUrl=\"tv\"/>\n            <WatchlistTab title=\"movies\" titleInUrl=\"movie\"/>\n          </div>\n          {match?.params?.mediaType === 'movie'\n            ? <WatchlistList moviesList={watchlist.movie?.map((movie) => ({...movie, media_type: 'movie'}))} media_type=\"movie\"/>\n            : <WatchlistList moviesList={watchlist.tv?.map((movie) => ({...movie, media_type: 'tv'}))} media_type=\"tv\"/>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session ,watchlist: state.session.watchlist}), {cleanAccInfo, setSessionId, updateAccInfo, updateWatchlist})(WatchlistPage)","import folder from '../lottie/folder.json'\nimport Lottie from 'lottie-web';\nimport { useRouteMatch } from 'react-router';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst classNames = require('classnames')\n\nexport const FavoritesTab = ({title, titleInUrl}) => {\n  const [lottieAnim, setLottieAnim] = useState({})\n  const animation = useRef(null)\n\n  const match = useRouteMatch('/favorites/:mediaType')\n\n  useEffect(() => {\n    setLottieAnim(Lottie.loadAnimation({\n      container: animation.current,\n      renderer: 'svg',\n      quality: 'hight',\n      loop: false,\n      autoplay: false,\n      animationData: folder\n    }))\n    if(lottieAnim.setSpeed) {\n      lottieAnim.setSpeed(2.5)\n    }\n\n  }, [])\n  \n  useEffect(() => {\n    if(match.params.mediaType === titleInUrl && lottieAnim.playSegments) {\n      lottieAnim?.playSegments([34, 90], true)\n    }\n    if(match.params.mediaType !== titleInUrl && lottieAnim.playSegments) {\n      lottieAnim?.playSegments([0, 1], true)\n    }\n  }, [match.params.mediaType])\n  return (\n    <Link\n      to={`/favorites/${titleInUrl}`}\n      onMouseOver={() => {\n        if(match.params.mediaType !== titleInUrl) {\n          lottieAnim?.playSegments([21, 34], true)\n        }\n      }}\n      onMouseLeave={() => {\n        if(match.params.mediaType !== titleInUrl) {\n          lottieAnim?.playSegments([0, 1], true)\n        }\n      }}\n      className={classNames(\"watchlist__list-select-link\", {\"watchlist__list-select-link--active\": match.params.mediaType === titleInUrl})}\n    >\n      <div className=\"watchlist__folder-lottie\" ref={animation}></div>\n      {title}\n    </Link>\n  )\n}","import React from 'react'\nimport { getMovieImg } from './api'\nimport { useHistory } from 'react-router';\nimport MarkAsFavoriteButton from './MarkAsFavoriteButton';\n\nconst classNames = require(\"classnames\");\n\nexport const FavoritesListElement = ({ movie, genres, media_type}) => {\n  const history = useHistory();\n  return (\n    <div\n      className={classNames(\"watchlist__card\")}\n    >\n      <img\n        onClick={() => {\n          console.log(history)\n          history.push(`/${movie.media_type}/${movie.id}`)\n        }}\n        src={getMovieImg(movie?.poster_path, true)}\n        alt=\"\"\n        className=\"watchlist__card-img\"\n      />\n      <div className=\"watchlist__description\">\n        <div className=\"watchlist__description-content\">\n          <h1 className=\"watchlist__description-title\">{movie?.title}</h1>\n          <ul className=\"watchlist__description-genres-list\">\n            {movie.genre_ids?.map((genreId) =>\n              <li className=\"watchlist__description-genre\">\n                {genres.find(({id}) => genreId === id)?.name}\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n      <div className=\"watchlist__remove-from-watchlist-block\">\n        <MarkAsFavoriteButton key={movie.id} media_id={movie.id} media_type={media_type} />\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { getGenres } from './api';\nimport { FavoritesListElement } from './FavoritesListElement';\n\nconst classNames = require('classnames');\n\nexport const FavortiesList = ({moviesList, media_type}) => {\n  const slider = useRef(null);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    getGenres().then((response) => setGenres(response));\n  }, [])\n\n  return (\n    <div className=\"watchlist__list\">\n      {moviesList?.map((movie) => (\n        <FavoritesListElement key={Math.random()} movie={movie} media_type={media_type} genres={genres}/>\n      ))}\n    </div>\n  )\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux';\n\nimport { cleanAccInfo, setSessionId, updateAccInfo, updateFavoritesList } from '../redux/actions';\nimport { WatchlistList } from '../components/WatchlistList';\nimport { useRouteMatch } from 'react-router';\nimport { FavoritesTab } from '../components/FavoritesTab';\nimport { FavortiesList } from '../components/FavortiesList';\n\nconst classNames = require('classnames')\n\nconst Favorites = ({session_id, favorites, updateFavoritesList}) => {\n  const match = useRouteMatch('/favorites/:mediaType')\n\n  useEffect(() => updateFavoritesList(session_id), [])\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"watchlist\">\n          <div className=\"watchlist__list-select-block\">\n            <FavoritesTab title=\"tv series\" titleInUrl=\"tv\"/>\n            <FavoritesTab title=\"movies\" titleInUrl=\"movie\"/>\n          </div>\n          {match?.params?.mediaType === 'movie'\n            ? <FavortiesList moviesList={favorites.movie?.map((movie) => ({...movie, media_type: 'movie'}))} media_type=\"movie\"/>\n            : <FavortiesList moviesList={favorites.tv?.map((movie) => ({...movie, media_type: 'tv'}))} media_type=\"tv\"/>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session, favorites: state.session.favorites}), {cleanAccInfo, setSessionId, updateAccInfo, updateFavoritesList})(Favorites)","import React from 'react'\nimport { getMovieImg } from './api'\nimport { useHistory } from 'react-router';\nimport AddToWatchListButton from './AddToWatchListButton';\nimport { connect } from 'react-redux';\nimport { Picture } from './Picture';\nimport { motion } from 'framer-motion';\n\nconst classNames = require(\"classnames\");\n\nconst ListElement = ({ movie, genres, media_type}) => {\n  const history = useHistory();\n  return (\n    <motion.div\n      initial={{scale: 0.1}}\n      whileInView={{scale: 1}}\n      className={classNames(\"list-card\")}\n    >\n      <div className=\"list-card__img\">\n        <Picture picture_path={movie.poster_path}/>\n      </div>\n      <div className=\"list-card__title\">\n        {movie.title}\n      </div>\n      {/* <div className=\"watchlist__remove-from-watchlist-block\">\n        <AddToWatchListButton media_id={movie.id} media_type={media_type} />\n      </div> */}\n      <div className=\"list-card__action-button-container\">\n        \n      </div>\n    </motion.div>\n  )\n}\n\nexport default connect((state) => ({genres: state.session.genres}))(ListElement)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\n\nimport { useHistory, useRouteMatch } from 'react-router';\nimport { getCreatedList } from '../components/api';\nimport ListElement from '../components/ListElement';\nimport MovieCard from '../components/MovieCard';\n\nconst classNames = require('classnames')\n\nconst ListsPage = ({lists}) => {\n  const history = useHistory();\n  const match = useRouteMatch('/lists/:listId?')\n  const [selectedList, selectList] = useState([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"lists-page grid\">\n          <div className=\"lists-page__select-section grid__item--1-4\">\n            {lists.map((list) => (\n              <div\n                key={list.id}\n                className=\"lists-page__list-option\"\n                onClick={() => {\n                  history.push(`/lists/${list.id}`)\n                  getCreatedList(list.id).then((res) => {\n                    console.log(res.items)\n                    selectList(res.items)\n                  })\n                }}\n              >\n                {list.name}\n              </div>\n            ))}\n          </div>\n          <div className=\"lists-page__list grid__item--5-12\">\n            {selectedList.map((movie) => (\n              <ListElement movie={movie}/>\n            ))\n\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect((state) => ({session_id: state.session.session, lists: state.session.lists}), {})(ListsPage)","import './styles/App.scss';\nimport { Menu } from './components/Menu';\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport MoviePage from './pages/MoviePage';\nimport { Info } from './pages/Info'\nimport Home from './pages/Home'\nimport { CollectionPage } from './pages/CollectionPage';\nimport { PersonPage } from './pages/PersonPage';\nimport {Switch} from 'react-router'\nimport { SearchPage } from './pages/SearchPage';\nimport LoginWindow from './pages/LoginWindow';\nimport Navigation from './components/Navigation'\nimport WatchlistPage from './pages/WatchlistPage';\nimport FavoritesPage from './pages/FavoritesPage';\nimport ListsPage from './pages/ListsPage';\n\nfunction App() {\n  const match = useRouteMatch('/:mediaType/:mediaId')\n  // const [accInfo, setAccInfo] = useState({});\n\n  // console.log(accInfo)\n\n  // useEffect(() => {\n  //   getAccInfo().then((response) => {setAccInfo(response)})\n  // }, [])\n\n  return (\n    <div className=\"App\">\n      <Navigation/>\n      <Switch>\n        <Route name=\"app\" path=\"/\" exact>\n          <Home/>\n        </Route>\n        <Route name=\"app\" path=\"/search\" exact>\n          <SearchPage/>\n        </Route>\n        <Route path=\"/info\">\n          <Info/>\n        </Route>\n        <Route path=\"/person/:personId\" exact>\n          <PersonPage key={Math.random()} id={match?.params?.personId}/>\n        </Route>\n        <Route path=\"/watchlist/:mediaType\" exact>\n          <WatchlistPage/>\n        </Route>\n        <Route path=\"/favorites/:mediaType\" exact>\n          <FavoritesPage/>\n        </Route>\n        <Route path=\"/lists/:listId?\" exact>\n          <ListsPage/>\n        </Route>\n        <Route path=\"/:mediaId/:mediaId\" exact>\n          {match?.params?.mediaType !== 'collections'\n            ?\n            <MoviePage id={match?.params?.mediaId} key={match?.params?.mediaId}/>\n            :\n            <CollectionPage/>\n          }\n        </Route>\n      </Switch>\n      \n      <LoginWindow/>\n      <Menu />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { getAccInfo } from \"../components/api\"\nimport { CLEAN_ACCINFO, CLEAN_FAVORITES, CLEAN_WATCHLIST, SET_SESSION_ID, UPDATE_ACCINFO, UPDATE_FAVORITES, UPDATE_LISTS, UPDATE_WATCHLIST } from \"./types\"\n\nconst initialState = {\n  session: localStorage.getItem('session') || '',\n  accInfo: JSON.parse(localStorage.getItem('accInfo') || '{}') || {},\n  watchlist: JSON.parse(localStorage.getItem('watchlist') || '{}') || {},\n  favorites: JSON.parse(localStorage.getItem('favorites') || '{}') || {},\n  lists: JSON.parse(localStorage.getItem('lists') || '[]') || [],\n  genres: [\n    {\"id\":28,\"name\":\"Action\"}, {\"id\":12,\"name\":\"Adventure\"},\n    {\"id\":16,\"name\":\"Animation\"}, {\"id\":35,\"name\":\"Comedy\"},\n    {\"id\":80,\"name\":\"Crime\"}, {\"id\":99,\"name\":\"Documentary\"},\n    {\"id\":18,\"name\":\"Drama\"}, {\"id\":10751,\"name\":\"Family\"},\n    {\"id\":14,\"name\":\"Fantasy\"}, {\"id\":36,\"name\":\"History\"},\n    {\"id\":27,\"name\":\"Horror\"}, {\"id\":10402,\"name\":\"Music\"},\n    {\"id\":9648,\"name\":\"Mystery\"}, {\"id\":10749,\"name\":\"Romance\"},\n    {\"id\":878,\"name\":\"Science Fiction\"},{\"id\":10770,\"name\":\"TV Movie\"},\n    {\"id\":53,\"name\":\"Thriller\"}, {\"id\":10752,\"name\":\"War\"},\n    {\"id\":37,\"name\":\"Western\"}\n  ],\n}\n\nexport const sessionReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case SET_SESSION_ID:\n      return ({...state, session: action.payload})\n    case UPDATE_ACCINFO:\n      return ({...state, accInfo: action.payload})\n    case UPDATE_WATCHLIST:\n      console.log(action.payload)\n      return ({...state, watchlist: action.payload})\n    case CLEAN_ACCINFO:\n      return ({...state, accInfo: {}})\n    case CLEAN_WATCHLIST:\n      return ({...state, watchlist: {}})\n    case UPDATE_FAVORITES:\n      console.log(action.payload)\n      return ({...state, favorites: action.payload})\n    case UPDATE_LISTS:\n      return ({...state, lists: action.payload})\n    case CLEAN_FAVORITES:\n      return ({...state, favorites: {}})\n  }\n  return state\n}\n","import { combineReducers } from \"redux\";\nimport { sessionReducer } from \"./sessionReducer\";\n\nexport const rootReducer = combineReducers({\n  session: sessionReducer,\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createStore } from 'redux';\nimport { rootReducer } from './redux/rootReducer';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Router basename=\"/\">\n        <App />\n      </Router>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}